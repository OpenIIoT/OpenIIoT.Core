<?xml version="1.0" encoding="utf-8"?>
<reflection xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:ddue="urn:ddue-extensions">
  <assemblies>
    <assembly name="Symbiote">
      <assemblydata version="0.5.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Symbiote</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Symbiote</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright ©  2016</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>899d0a77-77e8-4bcf-848e-2167c8cc036f</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>0.5.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Symbiote.Cryptography">
      <assemblydata version="1.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010093A7E3969674AE2139E4713A879A0C5C3CD429DA0FE0B121A4F9A604BCD07668542C9668998724E64FB7B8B6C892C5C212E7EFAD4E2D9EFA17F36300B9E30FE76B8AE154936E8000723EA1CE4AA4328C5DBCDC9EF6941D849D5EB63190C89976EE40A40A7F0FDA2A98E29FD4D11E0AD6D034FAF65EA7C2C78431A4F2B623358C" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Symbiote.Cryptography</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Symbiote.Cryptography</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright ©  2016</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>85436076-1e12-4089-9ce1-6f9efe2cce8e</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Symbiote.Core">
      <topicdata group="api" />
      <apidata name="Symbiote.Core" group="namespace" />
      <elements>
        <element api="T:Symbiote.Core.BigFont" />
        <element api="T:Symbiote.Core.BigFont.Font" />
        <element api="T:Symbiote.Core.BigFont.FontSize" />
        <element api="T:Symbiote.Core.ManagerState" />
        <element api="T:Symbiote.Core.IManager" />
        <element api="T:Symbiote.Core.ItemEventArgs" />
        <element api="T:Symbiote.Core.xLogger" />
        <element api="T:Symbiote.Core.xLogger.UnspecifiedReturnValue" />
        <element api="T:Symbiote.Core.xLogger.ExcludedParam" />
        <element api="T:Symbiote.Core.ProjectInstaller" />
        <element api="T:Symbiote.Core.RealtimeLogger" />
        <element api="T:Symbiote.Core.RealtimeLogger.EventHandler`1" />
        <element api="T:Symbiote.Core.RealtimeLoggerEventArgs" />
        <element api="T:Symbiote.Core.FQNResolver" />
        <element api="T:Symbiote.Core.FQNResolver.ItemSource" />
        <element api="T:Symbiote.Core.ContractResolver" />
        <element api="T:Symbiote.Core.ContractResolver.ContractResolverType" />
        <element api="T:Symbiote.Core.Item" />
        <element api="T:Symbiote.Core.Item.EventHandler`1" />
        <element api="T:Symbiote.Core.ProgramManager" />
        <element api="T:Symbiote.Core.Program" />
        <element api="T:Symbiote.Core.Utility" />
        <element api="T:Symbiote.Core.MessageType" />
        <element api="T:Symbiote.Core.ResultCode" />
        <element api="T:Symbiote.Core.Message" />
        <element api="T:Symbiote.Core.Result" />
        <element api="T:Symbiote.Core.Result`1" />
        <element api="T:Symbiote.Core.WindowsService" />
      </elements>
      <file name="385dbfbc-3469-3015-d2fe-66ff11e5bfbd" />
    </api>
    <api id="T:Symbiote.Core.BigFont">
      <topicdata group="api" />
      <apidata name="BigFont" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Symbiote.Core.BigFont.#cctor" />
        <element api="P:Symbiote.Core.BigFont.Alphabet" />
        <element api="F:Symbiote.Core.BigFont.defaultFont" />
        <element api="P:Symbiote.Core.BigFont.DefaultFont" />
        <element api="F:Symbiote.Core.BigFont.defaultFontSize" />
        <element api="P:Symbiote.Core.BigFont.DefaultFontSize" />
        <element api="Overload:Symbiote.Core.BigFont.Generate">
          <element api="M:Symbiote.Core.BigFont.Generate(System.String,Symbiote.Core.BigFont.FontSize)" />
          <element api="M:Symbiote.Core.BigFont.Generate(System.String,Symbiote.Core.BigFont.Font,Symbiote.Core.BigFont.FontSize)" />
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="f8aa587f-1812-7299-29bf-f8fa3763f838" />
    </api>
    <api id="Methods.T:Symbiote.Core.BigFont">
      <topicdata name="BigFont" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.BigFont" />
      <apidata name="BigFont" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Symbiote.Core.BigFont.Generate">
          <element api="M:Symbiote.Core.BigFont.Generate(System.String,Symbiote.Core.BigFont.FontSize)" />
          <element api="M:Symbiote.Core.BigFont.Generate(System.String,Symbiote.Core.BigFont.Font,Symbiote.Core.BigFont.FontSize)" />
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont" />
      </containers>
      <file name="c8bdfd08-cd90-4889-8676-e8eff4d0fadc" />
    </api>
    <api id="Properties.T:Symbiote.Core.BigFont">
      <topicdata name="BigFont" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.BigFont" />
      <apidata name="BigFont" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.BigFont.Alphabet" />
        <element api="P:Symbiote.Core.BigFont.DefaultFont" />
        <element api="P:Symbiote.Core.BigFont.DefaultFontSize" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont" />
      </containers>
      <file name="541f9d67-6c23-a449-1bac-4955a977a273" />
    </api>
    <api id="Fields.T:Symbiote.Core.BigFont">
      <topicdata name="BigFont" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.BigFont" />
      <apidata name="BigFont" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.BigFont.defaultFont" />
        <element api="F:Symbiote.Core.BigFont.defaultFontSize" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont" />
      </containers>
      <file name="8cb3ccd0-aee5-3af7-50a7-f6f33392a954" />
    </api>
    <api id="Overload:Symbiote.Core.BigFont.Generate">
      <topicdata name="Generate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Generate" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.BigFont.Generate(System.String,Symbiote.Core.BigFont.FontSize)" />
        <element api="M:Symbiote.Core.BigFont.Generate(System.String,Symbiote.Core.BigFont.Font,Symbiote.Core.BigFont.FontSize)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont" ref="true" />
      </containers>
      <file name="88ebe0d8-3a59-3dee-5d28-d715af9c7ce8" />
    </api>
    <api id="M:Symbiote.Core.BigFont.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont" ref="true" />
      </containers>
      <file name="be9dcae6-7519-baf3-1866-f552588472e7" />
    </api>
    <api id="P:Symbiote.Core.BigFont.Alphabet">
      <topicdata group="api" />
      <apidata name="Alphabet" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Alphabet" />
      <setter name="set_Alphabet" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.Tuple`3" ref="true">
              <specialization>
                <type api="T:System.Char" ref="false" />
                <type api="T:Symbiote.Core.BigFont.Font" ref="false">
                  <type api="T:Symbiote.Core.BigFont" ref="true" />
                </type>
                <type api="T:Symbiote.Core.BigFont.FontSize" ref="false">
                  <type api="T:Symbiote.Core.BigFont" ref="true" />
                </type>
              </specialization>
            </type>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont" ref="true" />
      </containers>
      <file name="58d8fcce-04f7-bd32-c9ca-6588ca4b4d33" />
    </api>
    <api id="F:Symbiote.Core.BigFont.defaultFont">
      <topicdata group="api" />
      <apidata name="defaultFont" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.BigFont.Font" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </returns>
      <enumValue>
        <field name="Block" />
      </enumValue>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont" ref="true" />
      </containers>
      <file name="536386bf-4018-cabe-6a1b-2c2f8ff726f2" />
    </api>
    <api id="P:Symbiote.Core.BigFont.DefaultFont">
      <topicdata group="api" />
      <apidata name="DefaultFont" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultFont" />
      <setter name="set_DefaultFont" />
      <returns>
        <type api="T:Symbiote.Core.BigFont.Font" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont" ref="true" />
      </containers>
      <file name="b3d28951-6450-36d7-317c-83b7bae4ea12" />
    </api>
    <api id="F:Symbiote.Core.BigFont.defaultFontSize">
      <topicdata group="api" />
      <apidata name="defaultFontSize" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.BigFont.FontSize" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </returns>
      <enumValue>
        <field name="Large" />
      </enumValue>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont" ref="true" />
      </containers>
      <file name="549d94d3-6b93-d789-9944-a2a8cbc7b27b" />
    </api>
    <api id="P:Symbiote.Core.BigFont.DefaultFontSize">
      <topicdata group="api" />
      <apidata name="DefaultFontSize" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultFontSize" />
      <setter name="set_DefaultFontSize" />
      <returns>
        <type api="T:Symbiote.Core.BigFont.FontSize" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont" ref="true" />
      </containers>
      <file name="b4caec05-da6d-701a-8faa-dec339c4c41a" />
    </api>
    <api id="M:Symbiote.Core.BigFont.Generate(System.String,Symbiote.Core.BigFont.Font,Symbiote.Core.BigFont.FontSize)">
      <topicdata group="api" />
      <apidata name="Generate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Symbiote.Core.BigFont.Generate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="font" optional="true">
          <type api="T:Symbiote.Core.BigFont.Font" ref="false">
            <type api="T:Symbiote.Core.BigFont" ref="true" />
          </type>
          <argument>
            <type api="T:Symbiote.Core.BigFont.Font" ref="false">
              <type api="T:Symbiote.Core.BigFont" ref="true" />
            </type>
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="size" optional="true">
          <type api="T:Symbiote.Core.BigFont.FontSize" ref="false">
            <type api="T:Symbiote.Core.BigFont" ref="true" />
          </type>
          <argument>
            <type api="T:Symbiote.Core.BigFont.FontSize" ref="false">
              <type api="T:Symbiote.Core.BigFont" ref="true" />
            </type>
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont" ref="true" />
      </containers>
      <file name="56aa4919-57fc-3854-50b7-4638c4560d64" />
    </api>
    <api id="M:Symbiote.Core.BigFont.Generate(System.String,Symbiote.Core.BigFont.FontSize)">
      <topicdata group="api" />
      <apidata name="Generate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Symbiote.Core.BigFont.Generate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="size" optional="true">
          <type api="T:Symbiote.Core.BigFont.FontSize" ref="false">
            <type api="T:Symbiote.Core.BigFont" ref="true" />
          </type>
          <argument>
            <type api="T:Symbiote.Core.BigFont.FontSize" ref="false">
              <type api="T:Symbiote.Core.BigFont" ref="true" />
            </type>
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont" ref="true" />
      </containers>
      <file name="06aaf202-dc64-d9ca-a7c4-58cb639f1e74" />
    </api>
    <api id="T:Symbiote.Core.BigFont.Font">
      <topicdata group="api" />
      <apidata name="Font" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.BigFont.Font.Default" />
        <element api="F:Symbiote.Core.BigFont.Font.Block" />
        <element api="F:Symbiote.Core.BigFont.Font.Graffiti" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont" ref="true" />
      </containers>
      <file name="88ca65d8-7fcf-a5b9-8a8a-67006053f097" />
    </api>
    <api id="F:Symbiote.Core.BigFont.Font.Block">
      <topicdata group="api" notopic="" />
      <apidata name="Block" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.BigFont.Font" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont.Font" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </containers>
      <file name="e37ad901-5905-1fff-ad72-e14b63447332" />
    </api>
    <api id="F:Symbiote.Core.BigFont.Font.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.BigFont.Font" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont.Font" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </containers>
      <file name="a9017efc-69b5-5d64-912e-c11d32bfd894" />
    </api>
    <api id="F:Symbiote.Core.BigFont.Font.Graffiti">
      <topicdata group="api" notopic="" />
      <apidata name="Graffiti" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.BigFont.Font" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont.Font" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </containers>
      <file name="8dff3c0d-8e46-b0d5-8484-88234e5d7f62" />
    </api>
    <api id="T:Symbiote.Core.BigFont.FontSize">
      <topicdata group="api" />
      <apidata name="FontSize" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.BigFont.FontSize.Default" />
        <element api="F:Symbiote.Core.BigFont.FontSize.Large" />
        <element api="F:Symbiote.Core.BigFont.FontSize.Medium" />
        <element api="F:Symbiote.Core.BigFont.FontSize.Small" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont" ref="true" />
      </containers>
      <file name="759612fb-6229-0421-5ac1-bc8a50f61115" />
    </api>
    <api id="F:Symbiote.Core.BigFont.FontSize.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.BigFont.FontSize" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont.FontSize" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </containers>
      <file name="7f5e2e4b-8f1b-cab5-3eae-bd819cc237a7" />
    </api>
    <api id="F:Symbiote.Core.BigFont.FontSize.Large">
      <topicdata group="api" notopic="" />
      <apidata name="Large" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.BigFont.FontSize" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont.FontSize" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </containers>
      <file name="b23063ab-3225-b1ed-faaf-d734bfafd250" />
    </api>
    <api id="F:Symbiote.Core.BigFont.FontSize.Medium">
      <topicdata group="api" notopic="" />
      <apidata name="Medium" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.BigFont.FontSize" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont.FontSize" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </containers>
      <file name="b3bce392-3b49-eb1e-3f0e-baeab98ee746" />
    </api>
    <api id="F:Symbiote.Core.BigFont.FontSize.Small">
      <topicdata group="api" notopic="" />
      <apidata name="Small" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.BigFont.FontSize" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.BigFont.FontSize" ref="false">
          <type api="T:Symbiote.Core.BigFont" ref="true" />
        </type>
      </containers>
      <file name="5b6c2606-2279-7f8c-e941-5a3b251d0d3c" />
    </api>
    <api id="T:Symbiote.Core.ContractResolver">
      <topicdata group="api" />
      <apidata name="ContractResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Newtonsoft.Json.Serialization.DefaultContractResolver._instanceState">
          <apidata name="_instanceState" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="true" serialized="true" />
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolverState" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="F:Newtonsoft.Json.Serialization.DefaultContractResolver._sharedCache">
          <apidata name="_sharedCache" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="true" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetState">
          <apidata name="GetState" group="member" subgroup="method" />
          <memberdata visibility="assembly" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolverState" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)">
          <apidata name="ResolveContract" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonContract" ref="true" />
          </returns>
          <implements>
            <member api="M:Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)">
              <type api="T:Newtonsoft.Json.Serialization.IContractResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)">
          <apidata name="GetSerializableMembers" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MemberInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)">
          <apidata name="ShouldSerializeEntityMember" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="memberInfo">
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)">
          <apidata name="CreateObjectContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonObjectContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)">
          <apidata name="GetExtensionDataMemberForType" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)">
          <apidata name="GetAttributeConstructor" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Reflection.ConstructorInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)">
          <apidata name="GetParameterizedConstructor" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Reflection.ConstructorInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)">
          <apidata name="CreateConstructorParameters" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="constructor">
              <type api="T:System.Reflection.ConstructorInfo" ref="true" />
            </parameter>
            <parameter name="memberProperties">
              <type api="T:Newtonsoft.Json.Serialization.JsonPropertyCollection" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IList`1" ref="true">
              <specialization>
                <type api="T:Newtonsoft.Json.Serialization.JsonProperty" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)">
          <apidata name="CreatePropertyFromConstructorParameter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="matchingMemberProperty">
              <type api="T:Newtonsoft.Json.Serialization.JsonProperty" ref="true" />
            </parameter>
            <parameter name="parameterInfo">
              <type api="T:System.Reflection.ParameterInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonProperty" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)">
          <apidata name="ResolveContractConverter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.JsonConverter" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)">
          <apidata name="GetDefaultCreator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="createdType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Func`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)">
          <apidata name="InitializeContract" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="contract">
              <type api="T:Newtonsoft.Json.Serialization.JsonContract" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract,System.Type)">
          <apidata name="ResolveCallbackMethods" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="contract">
              <type api="T:Newtonsoft.Json.Serialization.JsonContract" ref="true" />
            </parameter>
            <parameter name="t">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type,System.Collections.Generic.List{Newtonsoft.Json.Serialization.SerializationCallback}@,System.Collections.Generic.List{Newtonsoft.Json.Serialization.SerializationCallback}@,System.Collections.Generic.List{Newtonsoft.Json.Serialization.SerializationCallback}@,System.Collections.Generic.List{Newtonsoft.Json.Serialization.SerializationCallback}@,System.Collections.Generic.List{Newtonsoft.Json.Serialization.SerializationErrorCallback}@)">
          <apidata name="GetCallbackMethodsForType" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="onSerializing" out="true">
              <referenceTo>
                <type api="T:System.Collections.Generic.List`1" ref="true">
                  <specialization>
                    <type api="T:Newtonsoft.Json.Serialization.SerializationCallback" ref="true" />
                  </specialization>
                </type>
              </referenceTo>
            </parameter>
            <parameter name="onSerialized" out="true">
              <referenceTo>
                <type api="T:System.Collections.Generic.List`1" ref="true">
                  <specialization>
                    <type api="T:Newtonsoft.Json.Serialization.SerializationCallback" ref="true" />
                  </specialization>
                </type>
              </referenceTo>
            </parameter>
            <parameter name="onDeserializing" out="true">
              <referenceTo>
                <type api="T:System.Collections.Generic.List`1" ref="true">
                  <specialization>
                    <type api="T:Newtonsoft.Json.Serialization.SerializationCallback" ref="true" />
                  </specialization>
                </type>
              </referenceTo>
            </parameter>
            <parameter name="onDeserialized" out="true">
              <referenceTo>
                <type api="T:System.Collections.Generic.List`1" ref="true">
                  <specialization>
                    <type api="T:Newtonsoft.Json.Serialization.SerializationCallback" ref="true" />
                  </specialization>
                </type>
              </referenceTo>
            </parameter>
            <parameter name="onError" out="true">
              <referenceTo>
                <type api="T:System.Collections.Generic.List`1" ref="true">
                  <specialization>
                    <type api="T:Newtonsoft.Json.Serialization.SerializationErrorCallback" ref="true" />
                  </specialization>
                </type>
              </referenceTo>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)">
          <apidata name="GetClassHierarchyForType" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)">
          <apidata name="CreateDictionaryContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonDictionaryContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)">
          <apidata name="CreateArrayContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonArrayContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)">
          <apidata name="CreatePrimitiveContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonPrimitiveContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)">
          <apidata name="CreateLinqContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonLinqContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)">
          <apidata name="CreateISerializableContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonISerializableContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)">
          <apidata name="CreateDynamicContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonDynamicContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)">
          <apidata name="CreateStringContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonStringContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)">
          <apidata name="CreateContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)">
          <apidata name="CreateMemberValueProvider" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="member">
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.IValueProvider" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
          <apidata name="CreateProperty" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="member">
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </parameter>
            <parameter name="memberSerialization">
              <type api="T:Newtonsoft.Json.MemberSerialization" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonProperty" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty,System.Object,System.String,System.Type,Newtonsoft.Json.MemberSerialization,System.Boolean@)">
          <apidata name="SetPropertySettingsFromAttributes" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="property">
              <type api="T:Newtonsoft.Json.Serialization.JsonProperty" ref="true" />
            </parameter>
            <parameter name="attributeProvider">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="declaringType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberSerialization">
              <type api="T:Newtonsoft.Json.MemberSerialization" ref="false" />
            </parameter>
            <parameter name="allowNonPublicAccess" out="true">
              <referenceTo>
                <type api="T:System.Boolean" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)">
          <apidata name="CreateShouldSerializeTest" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="member">
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Predicate`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.MemberInfo,System.Boolean)">
          <apidata name="SetIsSpecifiedActions" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="property">
              <type api="T:Newtonsoft.Json.Serialization.JsonProperty" ref="true" />
            </parameter>
            <parameter name="member">
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </parameter>
            <parameter name="allowNonPublicAccess">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)">
          <apidata name="ResolvePropertyName" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="propertyName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String)">
          <apidata name="ResolveDictionaryKey" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="dictionaryKey">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)">
          <apidata name="GetResolvedPropertyName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="propertyName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="P:Newtonsoft.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration">
          <apidata name="DynamicCodeGeneration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DynamicCodeGeneration" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="P:Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags">
          <apidata name="DefaultMembersSearchFlags" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultMembersSearchFlags" />
          <setter name="set_DefaultMembersSearchFlags" />
          <returns>
            <type api="T:System.Reflection.BindingFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>DefaultMembersSearchFlags is obsolete. To modify the members serialized inherit from DefaultContractResolver and override the GetSerializableMembers method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:Newtonsoft.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers">
          <apidata name="SerializeCompilerGeneratedMembers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SerializeCompilerGeneratedMembers" />
          <setter name="set_SerializeCompilerGeneratedMembers" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="P:Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableInterface">
          <apidata name="IgnoreSerializableInterface" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IgnoreSerializableInterface" />
          <setter name="set_IgnoreSerializableInterface" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="P:Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableAttribute">
          <apidata name="IgnoreSerializableAttribute" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IgnoreSerializableAttribute" />
          <setter name="set_IgnoreSerializableAttribute" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.ContractResolver.#ctor">
          <element api="M:Symbiote.Core.ContractResolver.#ctor" />
          <element api="M:Symbiote.Core.ContractResolver.#ctor(System.Collections.Generic.List{System.String},System.Boolean)" />
          <element api="M:Symbiote.Core.ContractResolver.#ctor(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)" />
        </element>
        <element api="M:Symbiote.Core.ContractResolver.#cctor" />
        <element api="F:Symbiote.Core.ContractResolver.contractResolverType" />
        <element api="M:Symbiote.Core.ContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)" />
        <element api="F:Symbiote.Core.ContractResolver.includeSecondaryTypes" />
        <element api="F:Symbiote.Core.ContractResolver.logger" />
        <element api="F:Symbiote.Core.ContractResolver.manager" />
        <element api="F:Symbiote.Core.ContractResolver.propertyList" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="8525a9b3-3492-be92-f53c-ebe34e197584" />
    </api>
    <api id="Methods.T:Symbiote.Core.ContractResolver">
      <topicdata name="ContractResolver" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.ContractResolver" />
      <apidata name="ContractResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetState">
          <apidata name="GetState" group="member" subgroup="method" />
          <memberdata visibility="assembly" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolverState" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)">
          <apidata name="ResolveContract" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonContract" ref="true" />
          </returns>
          <implements>
            <member api="M:Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)">
              <type api="T:Newtonsoft.Json.Serialization.IContractResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)">
          <apidata name="GetSerializableMembers" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Reflection.MemberInfo" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)">
          <apidata name="ShouldSerializeEntityMember" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="memberInfo">
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)">
          <apidata name="CreateObjectContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonObjectContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)">
          <apidata name="GetExtensionDataMemberForType" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)">
          <apidata name="GetAttributeConstructor" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Reflection.ConstructorInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)">
          <apidata name="GetParameterizedConstructor" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Reflection.ConstructorInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)">
          <apidata name="CreateConstructorParameters" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="constructor">
              <type api="T:System.Reflection.ConstructorInfo" ref="true" />
            </parameter>
            <parameter name="memberProperties">
              <type api="T:Newtonsoft.Json.Serialization.JsonPropertyCollection" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IList`1" ref="true">
              <specialization>
                <type api="T:Newtonsoft.Json.Serialization.JsonProperty" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)">
          <apidata name="CreatePropertyFromConstructorParameter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="matchingMemberProperty">
              <type api="T:Newtonsoft.Json.Serialization.JsonProperty" ref="true" />
            </parameter>
            <parameter name="parameterInfo">
              <type api="T:System.Reflection.ParameterInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonProperty" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)">
          <apidata name="ResolveContractConverter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.JsonConverter" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)">
          <apidata name="GetDefaultCreator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="createdType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Func`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)">
          <apidata name="InitializeContract" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="contract">
              <type api="T:Newtonsoft.Json.Serialization.JsonContract" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract,System.Type)">
          <apidata name="ResolveCallbackMethods" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="contract">
              <type api="T:Newtonsoft.Json.Serialization.JsonContract" ref="true" />
            </parameter>
            <parameter name="t">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type,System.Collections.Generic.List{Newtonsoft.Json.Serialization.SerializationCallback}@,System.Collections.Generic.List{Newtonsoft.Json.Serialization.SerializationCallback}@,System.Collections.Generic.List{Newtonsoft.Json.Serialization.SerializationCallback}@,System.Collections.Generic.List{Newtonsoft.Json.Serialization.SerializationCallback}@,System.Collections.Generic.List{Newtonsoft.Json.Serialization.SerializationErrorCallback}@)">
          <apidata name="GetCallbackMethodsForType" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="onSerializing" out="true">
              <referenceTo>
                <type api="T:System.Collections.Generic.List`1" ref="true">
                  <specialization>
                    <type api="T:Newtonsoft.Json.Serialization.SerializationCallback" ref="true" />
                  </specialization>
                </type>
              </referenceTo>
            </parameter>
            <parameter name="onSerialized" out="true">
              <referenceTo>
                <type api="T:System.Collections.Generic.List`1" ref="true">
                  <specialization>
                    <type api="T:Newtonsoft.Json.Serialization.SerializationCallback" ref="true" />
                  </specialization>
                </type>
              </referenceTo>
            </parameter>
            <parameter name="onDeserializing" out="true">
              <referenceTo>
                <type api="T:System.Collections.Generic.List`1" ref="true">
                  <specialization>
                    <type api="T:Newtonsoft.Json.Serialization.SerializationCallback" ref="true" />
                  </specialization>
                </type>
              </referenceTo>
            </parameter>
            <parameter name="onDeserialized" out="true">
              <referenceTo>
                <type api="T:System.Collections.Generic.List`1" ref="true">
                  <specialization>
                    <type api="T:Newtonsoft.Json.Serialization.SerializationCallback" ref="true" />
                  </specialization>
                </type>
              </referenceTo>
            </parameter>
            <parameter name="onError" out="true">
              <referenceTo>
                <type api="T:System.Collections.Generic.List`1" ref="true">
                  <specialization>
                    <type api="T:Newtonsoft.Json.Serialization.SerializationErrorCallback" ref="true" />
                  </specialization>
                </type>
              </referenceTo>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)">
          <apidata name="GetClassHierarchyForType" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)">
          <apidata name="CreateDictionaryContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonDictionaryContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)">
          <apidata name="CreateArrayContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonArrayContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)">
          <apidata name="CreatePrimitiveContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonPrimitiveContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)">
          <apidata name="CreateLinqContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonLinqContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)">
          <apidata name="CreateISerializableContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonISerializableContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)">
          <apidata name="CreateDynamicContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonDynamicContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)">
          <apidata name="CreateStringContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonStringContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)">
          <apidata name="CreateContract" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="objectType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonContract" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)">
          <apidata name="CreateMemberValueProvider" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="member">
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.IValueProvider" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
          <apidata name="CreateProperty" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="member">
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </parameter>
            <parameter name="memberSerialization">
              <type api="T:Newtonsoft.Json.MemberSerialization" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.JsonProperty" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty,System.Object,System.String,System.Type,Newtonsoft.Json.MemberSerialization,System.Boolean@)">
          <apidata name="SetPropertySettingsFromAttributes" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="property">
              <type api="T:Newtonsoft.Json.Serialization.JsonProperty" ref="true" />
            </parameter>
            <parameter name="attributeProvider">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="declaringType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="memberSerialization">
              <type api="T:Newtonsoft.Json.MemberSerialization" ref="false" />
            </parameter>
            <parameter name="allowNonPublicAccess" out="true">
              <referenceTo>
                <type api="T:System.Boolean" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)">
          <apidata name="CreateShouldSerializeTest" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="member">
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Predicate`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.MemberInfo,System.Boolean)">
          <apidata name="SetIsSpecifiedActions" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="property">
              <type api="T:Newtonsoft.Json.Serialization.JsonProperty" ref="true" />
            </parameter>
            <parameter name="member">
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </parameter>
            <parameter name="allowNonPublicAccess">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)">
          <apidata name="ResolvePropertyName" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="propertyName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String)">
          <apidata name="ResolveDictionaryKey" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="dictionaryKey">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)">
          <apidata name="GetResolvedPropertyName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="propertyName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.ContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver" />
      </containers>
      <file name="11baddde-6e5f-6569-c4fb-e34af2f38d33" />
    </api>
    <api id="Properties.T:Symbiote.Core.ContractResolver">
      <topicdata name="ContractResolver" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.ContractResolver" />
      <apidata name="ContractResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Newtonsoft.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration">
          <apidata name="DynamicCodeGeneration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DynamicCodeGeneration" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="P:Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags">
          <apidata name="DefaultMembersSearchFlags" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultMembersSearchFlags" />
          <setter name="set_DefaultMembersSearchFlags" />
          <returns>
            <type api="T:System.Reflection.BindingFlags" ref="false" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>DefaultMembersSearchFlags is obsolete. To modify the members serialized inherit from DefaultContractResolver and override the GetSerializableMembers method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:Newtonsoft.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers">
          <apidata name="SerializeCompilerGeneratedMembers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SerializeCompilerGeneratedMembers" />
          <setter name="set_SerializeCompilerGeneratedMembers" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="P:Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableInterface">
          <apidata name="IgnoreSerializableInterface" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IgnoreSerializableInterface" />
          <setter name="set_IgnoreSerializableInterface" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="P:Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableAttribute">
          <apidata name="IgnoreSerializableAttribute" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IgnoreSerializableAttribute" />
          <setter name="set_IgnoreSerializableAttribute" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver" />
      </containers>
      <file name="7381d443-1bc7-1332-6f1c-cb83535fc957" />
    </api>
    <api id="Fields.T:Symbiote.Core.ContractResolver">
      <topicdata name="ContractResolver" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.ContractResolver" />
      <apidata name="ContractResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Newtonsoft.Json.Serialization.DefaultContractResolver._instanceState">
          <apidata name="_instanceState" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="true" serialized="true" />
          <returns>
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolverState" ref="true" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="F:Newtonsoft.Json.Serialization.DefaultContractResolver._sharedCache">
          <apidata name="_sharedCache" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="true" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Newtonsoft.Json" module="Newtonsoft.Json" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Newtonsoft.Json.Serialization" />
            <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
          </containers>
        </element>
        <element api="F:Symbiote.Core.ContractResolver.contractResolverType" />
        <element api="F:Symbiote.Core.ContractResolver.includeSecondaryTypes" />
        <element api="F:Symbiote.Core.ContractResolver.logger" />
        <element api="F:Symbiote.Core.ContractResolver.manager" />
        <element api="F:Symbiote.Core.ContractResolver.propertyList" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver" />
      </containers>
      <file name="1f619800-912f-d739-2004-cd205e155c5b" />
    </api>
    <api id="Overload:Symbiote.Core.ContractResolver.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Symbiote.Core.ContractResolver.#ctor" />
        <element api="M:Symbiote.Core.ContractResolver.#ctor(System.Collections.Generic.List{System.String},System.Boolean)" />
        <element api="M:Symbiote.Core.ContractResolver.#ctor(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver" ref="true" />
      </containers>
      <file name="b1f4fb50-4bc8-6b42-9d75-65bd47111731" />
    </api>
    <api id="M:Symbiote.Core.ContractResolver.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Symbiote.Core.ContractResolver.#ctor" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver" ref="true" />
      </containers>
      <file name="6d7f7315-9c75-e0d6-eda1-bee9b8fa3f76" />
    </api>
    <api id="M:Symbiote.Core.ContractResolver.#ctor(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Symbiote.Core.ContractResolver.#ctor" />
      <parameters>
        <parameter name="propertyList">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="contractResolverType" optional="true">
          <type api="T:Symbiote.Core.ContractResolver.ContractResolverType" ref="false">
            <type api="T:Symbiote.Core.ContractResolver" ref="true" />
          </type>
          <argument>
            <type api="T:Symbiote.Core.ContractResolver.ContractResolverType" ref="false">
              <type api="T:Symbiote.Core.ContractResolver" ref="true" />
            </type>
            <enumValue>
              <field name="OptIn" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="includeSecondaryTypes" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver" ref="true" />
      </containers>
      <file name="22716941-9866-72b6-0e5a-394b9e6f24af" />
    </api>
    <api id="M:Symbiote.Core.ContractResolver.#ctor(System.Collections.Generic.List{System.String},System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Symbiote.Core.ContractResolver.#ctor" />
      <parameters>
        <parameter name="propertyList">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="includeSecondaryTypes">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver" ref="true" />
      </containers>
      <file name="3d11bb6f-c098-a549-3eaa-64d19029c783" />
    </api>
    <api id="M:Symbiote.Core.ContractResolver.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver" ref="true" />
      </containers>
      <file name="f9ec6a51-a43b-2d81-be4d-dd8136da97a6" />
    </api>
    <api id="F:Symbiote.Core.ContractResolver.contractResolverType">
      <topicdata group="api" />
      <apidata name="contractResolverType" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ContractResolver.ContractResolverType" ref="false">
          <type api="T:Symbiote.Core.ContractResolver" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver" ref="true" />
      </containers>
      <file name="31ae8fc5-8bb6-1747-327d-18cccc48e9f7" />
    </api>
    <api id="M:Symbiote.Core.ContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)">
      <topicdata group="api" />
      <apidata name="CreateProperties" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)">
          <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="memberSerialization">
          <type api="T:Newtonsoft.Json.MemberSerialization" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Newtonsoft.Json.Serialization.JsonProperty" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver" ref="true" />
      </containers>
      <file name="916ca8f0-3cb2-0fed-da4d-b5516f322f9a" />
    </api>
    <api id="F:Symbiote.Core.ContractResolver.includeSecondaryTypes">
      <topicdata group="api" />
      <apidata name="includeSecondaryTypes" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver" ref="true" />
      </containers>
      <file name="2b1dd6d9-1b4f-e98c-b271-878ea3cb36d5" />
    </api>
    <api id="F:Symbiote.Core.ContractResolver.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver" ref="true" />
      </containers>
      <file name="d197fa86-2698-f637-cb79-108f1b32cb7a" />
    </api>
    <api id="F:Symbiote.Core.ContractResolver.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver" ref="true" />
      </containers>
      <file name="b99c808f-9956-5ad5-22b0-89403098224b" />
    </api>
    <api id="F:Symbiote.Core.ContractResolver.propertyList">
      <topicdata group="api" />
      <apidata name="propertyList" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver" ref="true" />
      </containers>
      <file name="85d5069d-96d6-13c6-184a-b534ad7ce2f7" />
    </api>
    <api id="T:Symbiote.Core.ContractResolver.ContractResolverType">
      <topicdata group="api" />
      <apidata name="ContractResolverType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.ContractResolver.ContractResolverType.Undefined" />
        <element api="F:Symbiote.Core.ContractResolver.ContractResolverType.OptIn" />
        <element api="F:Symbiote.Core.ContractResolver.ContractResolverType.OptOut" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver" ref="true" />
      </containers>
      <file name="79ec2863-49af-8b89-0533-f0efffb5cb4e" />
    </api>
    <api id="F:Symbiote.Core.ContractResolver.ContractResolverType.OptIn">
      <topicdata group="api" notopic="" />
      <apidata name="OptIn" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ContractResolver.ContractResolverType" ref="false">
          <type api="T:Symbiote.Core.ContractResolver" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver.ContractResolverType" ref="false">
          <type api="T:Symbiote.Core.ContractResolver" ref="true" />
        </type>
      </containers>
      <file name="c38f18c8-05db-c1be-dcea-6d2416ef469d" />
    </api>
    <api id="F:Symbiote.Core.ContractResolver.ContractResolverType.OptOut">
      <topicdata group="api" notopic="" />
      <apidata name="OptOut" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ContractResolver.ContractResolverType" ref="false">
          <type api="T:Symbiote.Core.ContractResolver" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver.ContractResolverType" ref="false">
          <type api="T:Symbiote.Core.ContractResolver" ref="true" />
        </type>
      </containers>
      <file name="21fba8ff-4435-8b6b-ddc0-e954e82fa9c2" />
    </api>
    <api id="F:Symbiote.Core.ContractResolver.ContractResolverType.Undefined">
      <topicdata group="api" notopic="" />
      <apidata name="Undefined" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ContractResolver.ContractResolverType" ref="false">
          <type api="T:Symbiote.Core.ContractResolver" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ContractResolver.ContractResolverType" ref="false">
          <type api="T:Symbiote.Core.ContractResolver" ref="true" />
        </type>
      </containers>
      <file name="2fd467ff-bdf4-5515-1b5a-98ea2ca17f11" />
    </api>
    <api id="T:Symbiote.Core.FQNResolver">
      <topicdata group="api" />
      <apidata name="FQNResolver" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.FQNResolver.#ctor" />
        <element api="M:Symbiote.Core.FQNResolver.#cctor" />
        <element api="M:Symbiote.Core.FQNResolver.GetSource(System.String)" />
        <element api="F:Symbiote.Core.FQNResolver.manager" />
        <element api="M:Symbiote.Core.FQNResolver.Resolve(System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="77db1187-1450-62fa-1267-d7ea155990e6" />
    </api>
    <api id="Methods.T:Symbiote.Core.FQNResolver">
      <topicdata name="FQNResolver" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.FQNResolver" />
      <apidata name="FQNResolver" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.FQNResolver.GetSource(System.String)" />
        <element api="M:Symbiote.Core.FQNResolver.Resolve(System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.FQNResolver" />
      </containers>
      <file name="c54d8a35-9599-6a5c-89bc-3375e5adb6c4" />
    </api>
    <api id="Fields.T:Symbiote.Core.FQNResolver">
      <topicdata name="FQNResolver" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.FQNResolver" />
      <apidata name="FQNResolver" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.FQNResolver.manager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.FQNResolver" />
      </containers>
      <file name="582945f8-8df0-0ab0-79b3-cdc0187c1bf2" />
    </api>
    <api id="M:Symbiote.Core.FQNResolver.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.FQNResolver" ref="true" />
      </containers>
      <file name="64650371-0e3c-9de8-185c-2fcf3a475cdb" />
    </api>
    <api id="M:Symbiote.Core.FQNResolver.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.FQNResolver" ref="true" />
      </containers>
      <file name="ef3a8f77-ab17-4e48-09bb-0786264f0639" />
    </api>
    <api id="M:Symbiote.Core.FQNResolver.GetSource(System.String)">
      <topicdata group="api" />
      <apidata name="GetSource" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lookupFQN">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.FQNResolver.ItemSource" ref="false">
          <type api="T:Symbiote.Core.FQNResolver" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.FQNResolver" ref="true" />
      </containers>
      <file name="a6add8ee-02ba-1f3b-ab99-f78524718b46" />
    </api>
    <api id="F:Symbiote.Core.FQNResolver.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.FQNResolver" ref="true" />
      </containers>
      <file name="ecb1e822-4e1d-b16e-b026-d3c939610e80" />
    </api>
    <api id="M:Symbiote.Core.FQNResolver.Resolve(System.String)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lookupFQN">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.FQNResolver" ref="true" />
      </containers>
      <file name="247826a1-fa0f-7915-6dcf-a7265a518221" />
    </api>
    <api id="T:Symbiote.Core.FQNResolver.ItemSource">
      <topicdata group="api" />
      <apidata name="ItemSource" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.FQNResolver.ItemSource.Unknown" />
        <element api="F:Symbiote.Core.FQNResolver.ItemSource.Plugin" />
        <element api="F:Symbiote.Core.FQNResolver.ItemSource.Model" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.FQNResolver" ref="true" />
      </containers>
      <file name="17591d8f-8734-9d84-d2d8-424e059de314" />
    </api>
    <api id="F:Symbiote.Core.FQNResolver.ItemSource.Model">
      <topicdata group="api" notopic="" />
      <apidata name="Model" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.FQNResolver.ItemSource" ref="false">
          <type api="T:Symbiote.Core.FQNResolver" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.FQNResolver.ItemSource" ref="false">
          <type api="T:Symbiote.Core.FQNResolver" ref="true" />
        </type>
      </containers>
      <file name="36ceaae6-d47a-c960-ce0d-b14826277e96" />
    </api>
    <api id="F:Symbiote.Core.FQNResolver.ItemSource.Plugin">
      <topicdata group="api" notopic="" />
      <apidata name="Plugin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.FQNResolver.ItemSource" ref="false">
          <type api="T:Symbiote.Core.FQNResolver" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.FQNResolver.ItemSource" ref="false">
          <type api="T:Symbiote.Core.FQNResolver" ref="true" />
        </type>
      </containers>
      <file name="365c5abc-d484-640a-ca06-2f0a6d27c3d8" />
    </api>
    <api id="F:Symbiote.Core.FQNResolver.ItemSource.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.FQNResolver.ItemSource" ref="false">
          <type api="T:Symbiote.Core.FQNResolver" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.FQNResolver.ItemSource" ref="false">
          <type api="T:Symbiote.Core.FQNResolver" ref="true" />
        </type>
      </containers>
      <file name="3e4a87c6-a921-8378-1836-43cdb62606e4" />
    </api>
    <api id="T:Symbiote.Core.IManager">
      <topicdata group="api" />
      <apidata name="IManager" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
        <type api="T:Symbiote.Core.Plugin.PluginTypeManager`1" ref="true" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </implementors>
      <elements>
        <element api="M:Symbiote.Core.IManager.Restart" />
        <element api="M:Symbiote.Core.IManager.Start" />
        <element api="P:Symbiote.Core.IManager.State" />
        <element api="M:Symbiote.Core.IManager.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="1897875a-d7ea-6210-8210-ab4d10fabfb4" />
    </api>
    <api id="Methods.T:Symbiote.Core.IManager">
      <topicdata name="IManager" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.IManager" />
      <apidata name="IManager" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.IManager.Restart" />
        <element api="M:Symbiote.Core.IManager.Start" />
        <element api="M:Symbiote.Core.IManager.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.IManager" />
      </containers>
      <file name="ffb3190d-d2d1-f449-426e-b73d652d127a" />
    </api>
    <api id="Properties.T:Symbiote.Core.IManager">
      <topicdata name="IManager" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.IManager" />
      <apidata name="IManager" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.IManager.State" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.IManager" />
      </containers>
      <file name="429bfc12-365c-716d-ffb5-b61b877c181b" />
    </api>
    <api id="M:Symbiote.Core.IManager.Restart">
      <topicdata group="api" />
      <apidata name="Restart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.IManager" ref="true" />
      </containers>
      <file name="8146a5a2-7156-1b4d-f98d-9812af63c088" />
    </api>
    <api id="M:Symbiote.Core.IManager.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.IManager" ref="true" />
      </containers>
      <file name="f08ecedb-066f-12d3-5116-1861900686fb" />
    </api>
    <api id="P:Symbiote.Core.IManager.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_State" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.IManager" ref="true" />
      </containers>
      <file name="018766c9-d42f-4f82-e460-283fc841c044" />
    </api>
    <api id="M:Symbiote.Core.IManager.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.IManager" ref="true" />
      </containers>
      <file name="673dee45-440f-8652-9772-172b36486e00" />
    </api>
    <api id="T:Symbiote.Core.Item">
      <topicdata group="api" />
      <apidata name="Item" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Item.#ctor">
          <element api="M:Symbiote.Core.Item.#ctor" />
          <element api="M:Symbiote.Core.Item.#ctor(System.String,System.Boolean)" />
          <element api="M:Symbiote.Core.Item.#ctor(System.String,System.String)" />
          <element api="M:Symbiote.Core.Item.#ctor(System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:Symbiote.Core.Item.AddChild(Symbiote.Core.Item)" />
        <element api="E:Symbiote.Core.Item.Changed" />
        <element api="P:Symbiote.Core.Item.Children" />
        <element api="M:Symbiote.Core.Item.Clone" />
        <element api="P:Symbiote.Core.Item.FQN" />
        <element api="P:Symbiote.Core.Item.Guid" />
        <element api="M:Symbiote.Core.Item.HasChildren" />
        <element api="P:Symbiote.Core.Item.Name" />
        <element api="M:Symbiote.Core.Item.OnChange(System.Object)" />
        <element api="P:Symbiote.Core.Item.Parent" />
        <element api="P:Symbiote.Core.Item.Path" />
        <element api="M:Symbiote.Core.Item.Read" />
        <element api="M:Symbiote.Core.Item.ReadAsync" />
        <element api="M:Symbiote.Core.Item.ReadFromSource" />
        <element api="M:Symbiote.Core.Item.ReadFromSourceAsync" />
        <element api="M:Symbiote.Core.Item.RemoveChild(Symbiote.Core.Item)" />
        <element api="M:Symbiote.Core.Item.SetParent(Symbiote.Core.Item)" />
        <element api="P:Symbiote.Core.Item.SourceFQN" />
        <element api="P:Symbiote.Core.Item.SourceItem" />
        <element api="M:Symbiote.Core.Item.SourceItemChanged(Symbiote.Core.Item,Symbiote.Core.ItemEventArgs)" />
        <element api="M:Symbiote.Core.Item.SubscribeToSource" />
        <element api="Overload:Symbiote.Core.Item.ToJson">
          <element api="M:Symbiote.Core.Item.ToJson" />
          <element api="M:Symbiote.Core.Item.ToJson(Newtonsoft.Json.Serialization.DefaultContractResolver)" />
        </element>
        <element api="M:Symbiote.Core.Item.ToString" />
        <element api="M:Symbiote.Core.Item.UnsubscribeFromSource" />
        <element api="P:Symbiote.Core.Item.Value" />
        <element api="M:Symbiote.Core.Item.Write(System.Object)" />
        <element api="P:Symbiote.Core.Item.Writeable" />
        <element api="M:Symbiote.Core.Item.WriteAsync(System.Object)" />
        <element api="M:Symbiote.Core.Item.WriteToSource(System.Object)" />
        <element api="M:Symbiote.Core.Item.WriteToSourceAsync(System.Object)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="5ed4c4ad-178b-82a3-97e9-1d610004f502" />
    </api>
    <api id="Methods.T:Symbiote.Core.Item">
      <topicdata name="Item" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Item" />
      <apidata name="Item" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Item.AddChild(Symbiote.Core.Item)" />
        <element api="M:Symbiote.Core.Item.Clone" />
        <element api="M:Symbiote.Core.Item.HasChildren" />
        <element api="M:Symbiote.Core.Item.OnChange(System.Object)" />
        <element api="M:Symbiote.Core.Item.Read" />
        <element api="M:Symbiote.Core.Item.ReadAsync" />
        <element api="M:Symbiote.Core.Item.ReadFromSource" />
        <element api="M:Symbiote.Core.Item.ReadFromSourceAsync" />
        <element api="M:Symbiote.Core.Item.RemoveChild(Symbiote.Core.Item)" />
        <element api="M:Symbiote.Core.Item.SetParent(Symbiote.Core.Item)" />
        <element api="M:Symbiote.Core.Item.SourceItemChanged(Symbiote.Core.Item,Symbiote.Core.ItemEventArgs)" />
        <element api="M:Symbiote.Core.Item.SubscribeToSource" />
        <element api="Overload:Symbiote.Core.Item.ToJson">
          <element api="M:Symbiote.Core.Item.ToJson" />
          <element api="M:Symbiote.Core.Item.ToJson(Newtonsoft.Json.Serialization.DefaultContractResolver)" />
        </element>
        <element api="M:Symbiote.Core.Item.ToString" />
        <element api="M:Symbiote.Core.Item.UnsubscribeFromSource" />
        <element api="M:Symbiote.Core.Item.Write(System.Object)" />
        <element api="M:Symbiote.Core.Item.WriteAsync(System.Object)" />
        <element api="M:Symbiote.Core.Item.WriteToSource(System.Object)" />
        <element api="M:Symbiote.Core.Item.WriteToSourceAsync(System.Object)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" />
      </containers>
      <file name="f344977c-c0ca-7b65-f95d-a12dc836afb2" />
    </api>
    <api id="Properties.T:Symbiote.Core.Item">
      <topicdata name="Item" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Item" />
      <apidata name="Item" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Item.Children" />
        <element api="P:Symbiote.Core.Item.FQN" />
        <element api="P:Symbiote.Core.Item.Guid" />
        <element api="P:Symbiote.Core.Item.Name" />
        <element api="P:Symbiote.Core.Item.Parent" />
        <element api="P:Symbiote.Core.Item.Path" />
        <element api="P:Symbiote.Core.Item.SourceFQN" />
        <element api="P:Symbiote.Core.Item.SourceItem" />
        <element api="P:Symbiote.Core.Item.Value" />
        <element api="P:Symbiote.Core.Item.Writeable" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" />
      </containers>
      <file name="cb2e8a88-489b-7622-118f-7bd46b23c232" />
    </api>
    <api id="Events.T:Symbiote.Core.Item">
      <topicdata name="Item" group="list" subgroup="Events" typeTopicId="T:Symbiote.Core.Item" />
      <apidata name="Item" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:Symbiote.Core.Item.Changed" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" />
      </containers>
      <file name="bc357422-c333-153a-bc67-51fd6428a4f8" />
    </api>
    <api id="Overload:Symbiote.Core.Item.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Symbiote.Core.Item.#ctor" />
        <element api="M:Symbiote.Core.Item.#ctor(System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Item.#ctor(System.String,System.String)" />
        <element api="M:Symbiote.Core.Item.#ctor(System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="a6317fa7-1bbf-045b-c639-3efe97df4693" />
    </api>
    <api id="Overload:Symbiote.Core.Item.ToJson">
      <topicdata name="ToJson" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ToJson" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Item.ToJson" />
        <element api="M:Symbiote.Core.Item.ToJson(Newtonsoft.Json.Serialization.DefaultContractResolver)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="6052af17-c60c-53ce-6c1c-50968b16b5b5" />
    </api>
    <api id="M:Symbiote.Core.Item.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Symbiote.Core.Item.#ctor" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="bf5bbf66-9bd2-6fa0-7b28-b722eb7a9e80" />
    </api>
    <api id="M:Symbiote.Core.Item.#ctor(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Symbiote.Core.Item.#ctor" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isRoot">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="eea06e9b-a52a-c6c8-1ada-20f28ddc9ca7" />
    </api>
    <api id="M:Symbiote.Core.Item.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Symbiote.Core.Item.#ctor" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceFQN">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="23e9ba7e-7e7b-c5f4-d3cb-e969a466a1ba" />
    </api>
    <api id="M:Symbiote.Core.Item.#ctor(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Symbiote.Core.Item.#ctor" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceFQN" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="isRoot" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="54aa54fb-5ce0-0542-f5e3-5510e808f78c" />
    </api>
    <api id="M:Symbiote.Core.Item.AddChild(Symbiote.Core.Item)">
      <topicdata group="api" />
      <apidata name="AddChild" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="faa2a59c-a146-6ba0-b5e5-0b731c68d07a" />
    </api>
    <api id="E:Symbiote.Core.Item.Changed">
      <topicdata group="api" />
      <apidata name="Changed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changed" />
      <remover name="remove_Changed" />
      <eventhandler>
        <type api="T:Symbiote.Core.Item.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.ItemEventArgs" ref="true" />
          </specialization>
          <type api="T:Symbiote.Core.Item" ref="true" />
        </type>
      </eventhandler>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="2de47adb-1991-06fd-3605-d85ceafb18ac" />
    </api>
    <api id="P:Symbiote.Core.Item.Children">
      <topicdata group="api" />
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Children" />
      <setter name="set_Children" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="071f225d-b45a-78a6-b510-3520f436f66f" />
    </api>
    <api id="M:Symbiote.Core.Item.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="41d7f2f4-61d2-5499-fd86-0bb2eb5dc9c2" />
    </api>
    <api id="P:Symbiote.Core.Item.FQN">
      <topicdata group="api" />
      <apidata name="FQN" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FQN" />
      <setter name="set_FQN" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="840339fa-e7c4-87f1-fca2-396a759f8572" />
    </api>
    <api id="P:Symbiote.Core.Item.Guid">
      <topicdata group="api" />
      <apidata name="Guid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Guid" />
      <setter name="set_Guid" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="99ee600b-472e-918c-8d54-1a21478bdbaf" />
    </api>
    <api id="M:Symbiote.Core.Item.HasChildren">
      <topicdata group="api" />
      <apidata name="HasChildren" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="bf3c60aa-839a-e60e-6655-b005c126cd2b" />
    </api>
    <api id="P:Symbiote.Core.Item.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="4c9e1cc9-55de-9c23-57b0-b5c90c93ab57" />
    </api>
    <api id="M:Symbiote.Core.Item.OnChange(System.Object)">
      <topicdata group="api" />
      <apidata name="OnChange" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="5d8e0bc9-96ea-862c-9295-c209ca06a4c5" />
    </api>
    <api id="P:Symbiote.Core.Item.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Parent" />
      <setter name="set_Parent" />
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="adaf1b85-24e3-0ba5-e1b9-536032ed5b46" />
    </api>
    <api id="P:Symbiote.Core.Item.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Path" />
      <setter name="set_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="8c813469-41b0-9eaa-f725-638a4498a957" />
    </api>
    <api id="M:Symbiote.Core.Item.Read">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="656229aa-e702-682c-1eeb-41e0101d589a" />
    </api>
    <api id="M:Symbiote.Core.Item.ReadAsync">
      <topicdata group="api" />
      <apidata name="ReadAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="b3e940b6-9075-4a93-5e61-11ecc260f924" />
    </api>
    <api id="M:Symbiote.Core.Item.ReadFromSource">
      <topicdata group="api" />
      <apidata name="ReadFromSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="d5522198-cd7b-58ef-7ffc-351eafcf79ce" />
    </api>
    <api id="M:Symbiote.Core.Item.ReadFromSourceAsync">
      <topicdata group="api" />
      <apidata name="ReadFromSourceAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="0f6a5422-2789-deee-6f67-ab6d3200962e" />
    </api>
    <api id="M:Symbiote.Core.Item.RemoveChild(Symbiote.Core.Item)">
      <topicdata group="api" />
      <apidata name="RemoveChild" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="2dfebe1f-9f6e-932e-522b-4d001201da59" />
    </api>
    <api id="M:Symbiote.Core.Item.SetParent(Symbiote.Core.Item)">
      <topicdata group="api" />
      <apidata name="SetParent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parent">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="a55cb708-b6d3-4d5f-e69d-55057345b08d" />
    </api>
    <api id="P:Symbiote.Core.Item.SourceFQN">
      <topicdata group="api" />
      <apidata name="SourceFQN" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceFQN" />
      <setter name="set_SourceFQN" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="a0fbab2e-4023-f1aa-ef95-7bdc75f8968b" />
    </api>
    <api id="P:Symbiote.Core.Item.SourceItem">
      <topicdata group="api" />
      <apidata name="SourceItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceItem" />
      <setter name="set_SourceItem" />
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="a14d5f55-433a-a0e4-0e90-476d5c92bb5f" />
    </api>
    <api id="M:Symbiote.Core.Item.SourceItemChanged(Symbiote.Core.Item,Symbiote.Core.ItemEventArgs)">
      <topicdata group="api" />
      <apidata name="SourceItemChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Symbiote.Core.ItemEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="64c425c2-ca31-54ec-de71-6e1c0c149488" />
    </api>
    <api id="M:Symbiote.Core.Item.SubscribeToSource">
      <topicdata group="api" />
      <apidata name="SubscribeToSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="6054a191-0e42-170c-0ec0-d13840d05420" />
    </api>
    <api id="M:Symbiote.Core.Item.ToJson">
      <topicdata group="api" />
      <apidata name="ToJson" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Item.ToJson" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="8f151f79-c82d-8f15-94a5-7bfeaa7938e8" />
    </api>
    <api id="M:Symbiote.Core.Item.ToJson(Newtonsoft.Json.Serialization.DefaultContractResolver)">
      <topicdata group="api" />
      <apidata name="ToJson" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Item.ToJson" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="contractResolver">
          <type api="T:Newtonsoft.Json.Serialization.DefaultContractResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="80b94d0f-6385-ad14-86a1-155d05ea1a44" />
    </api>
    <api id="M:Symbiote.Core.Item.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="b3d38c95-4d14-71c6-c6ab-d5c910f97c38" />
    </api>
    <api id="M:Symbiote.Core.Item.UnsubscribeFromSource">
      <topicdata group="api" />
      <apidata name="UnsubscribeFromSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="926906d1-ad95-fc7d-28e2-bdec286e4d9d" />
    </api>
    <api id="P:Symbiote.Core.Item.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="6325dcef-e67b-2dce-6c39-e74eb4a88e03" />
    </api>
    <api id="M:Symbiote.Core.Item.Write(System.Object)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="c6466461-b2c9-3310-7fdc-7704df57270d" />
    </api>
    <api id="P:Symbiote.Core.Item.Writeable">
      <topicdata group="api" />
      <apidata name="Writeable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Writeable" />
      <setter name="set_Writeable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="9c07ff9c-e60c-f702-9192-b3ec98d99856" />
    </api>
    <api id="M:Symbiote.Core.Item.WriteAsync(System.Object)">
      <topicdata group="api" />
      <apidata name="WriteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Result" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="708d854f-4b79-2fdc-e1e4-1d77788680f8" />
    </api>
    <api id="M:Symbiote.Core.Item.WriteToSource(System.Object)">
      <topicdata group="api" />
      <apidata name="WriteToSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="4f24606d-dded-b9e3-1192-18f3227bfa0a" />
    </api>
    <api id="M:Symbiote.Core.Item.WriteToSourceAsync(System.Object)">
      <topicdata group="api" />
      <apidata name="WriteToSourceAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Result" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="dde965f9-5950-d6e4-32d8-d7fd2607bd30" />
    </api>
    <api id="T:Symbiote.Core.Item.EventHandler`1">
      <topicdata group="api" />
      <apidata name="EventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="ItemEventArgs" />
      </templates>
      <parameters>
        <parameter name="sender">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="e">
          <template name="ItemEventArgs" index="0" api="T:Symbiote.Core.Item.EventHandler`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Item" ref="true" />
      </containers>
      <file name="de89be5f-de49-2506-e471-0a5d3403d1e3" />
    </api>
    <api id="T:Symbiote.Core.ItemEventArgs">
      <topicdata group="api" />
      <apidata name="ItemEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.ItemEventArgs.#ctor(System.Object)" />
        <element api="P:Symbiote.Core.ItemEventArgs.Value" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="3a68b238-2355-39a7-aa94-567dca8fd602" />
    </api>
    <api id="Methods.T:Symbiote.Core.ItemEventArgs">
      <topicdata name="ItemEventArgs" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.ItemEventArgs" />
      <apidata name="ItemEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ItemEventArgs" />
      </containers>
      <file name="d38e86f3-f4e4-6b2b-5b58-bcd8be2460fb" />
    </api>
    <api id="Properties.T:Symbiote.Core.ItemEventArgs">
      <topicdata name="ItemEventArgs" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.ItemEventArgs" />
      <apidata name="ItemEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.ItemEventArgs.Value" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ItemEventArgs" />
      </containers>
      <file name="3176ec7c-418a-7eaf-b021-dd22e1b76790" />
    </api>
    <api id="M:Symbiote.Core.ItemEventArgs.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ItemEventArgs" ref="true" />
      </containers>
      <file name="19ffc3ac-ef97-c7ad-3a57-b46fbd595172" />
    </api>
    <api id="P:Symbiote.Core.ItemEventArgs.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ItemEventArgs" ref="true" />
      </containers>
      <file name="3c2b4048-d517-e86f-cae5-7468796b5eff" />
    </api>
    <api id="T:Symbiote.Core.ManagerState">
      <topicdata group="api" />
      <apidata name="ManagerState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.ManagerState.Unknown" />
        <element api="F:Symbiote.Core.ManagerState.Starting" />
        <element api="F:Symbiote.Core.ManagerState.Running" />
        <element api="F:Symbiote.Core.ManagerState.Stopping" />
        <element api="F:Symbiote.Core.ManagerState.Stopped" />
        <element api="F:Symbiote.Core.ManagerState.Faulted" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="96d05bb9-148d-f75b-dab6-edacf5b8d602" />
    </api>
    <api id="F:Symbiote.Core.ManagerState.Faulted">
      <topicdata group="api" notopic="" />
      <apidata name="Faulted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </containers>
      <file name="358b14a4-0ff2-aa63-e370-bf5bef1a583d" />
    </api>
    <api id="F:Symbiote.Core.ManagerState.Running">
      <topicdata group="api" notopic="" />
      <apidata name="Running" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </containers>
      <file name="e6c655e8-d721-74c0-b666-3340d71f7a04" />
    </api>
    <api id="F:Symbiote.Core.ManagerState.Starting">
      <topicdata group="api" notopic="" />
      <apidata name="Starting" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </containers>
      <file name="ba063747-d874-a356-074c-8890374b09d4" />
    </api>
    <api id="F:Symbiote.Core.ManagerState.Stopped">
      <topicdata group="api" notopic="" />
      <apidata name="Stopped" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </containers>
      <file name="7410bd21-b8cb-d489-f4cf-61872dd5ce19" />
    </api>
    <api id="F:Symbiote.Core.ManagerState.Stopping">
      <topicdata group="api" notopic="" />
      <apidata name="Stopping" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </containers>
      <file name="c4e3192d-2b7e-d301-c7d7-f90d684bc3f5" />
    </api>
    <api id="F:Symbiote.Core.ManagerState.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </containers>
      <file name="b357ab60-fbea-2c92-d359-36ba668f899c" />
    </api>
    <api id="T:Symbiote.Core.Message">
      <topicdata group="api" />
      <apidata name="Message" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Message.#ctor(Symbiote.Core.MessageType,System.String)" />
        <element api="P:Symbiote.Core.Message.Text" />
        <element api="M:Symbiote.Core.Message.ToString" />
        <element api="P:Symbiote.Core.Message.Type" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="e767c025-0bef-ede5-e288-7b6212108152" />
    </api>
    <api id="Methods.T:Symbiote.Core.Message">
      <topicdata name="Message" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Message" />
      <apidata name="Message" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Message.ToString" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Message" />
      </containers>
      <file name="c9ddd902-1f52-002d-d55a-a2c7bb7e4503" />
    </api>
    <api id="Properties.T:Symbiote.Core.Message">
      <topicdata name="Message" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Message" />
      <apidata name="Message" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Message.Text" />
        <element api="P:Symbiote.Core.Message.Type" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Message" />
      </containers>
      <file name="214bea77-b67a-38f3-1939-15676ee1180f" />
    </api>
    <api id="M:Symbiote.Core.Message.#ctor(Symbiote.Core.MessageType,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type" optional="true">
          <type api="T:Symbiote.Core.MessageType" ref="false" />
          <argument>
            <type api="T:Symbiote.Core.MessageType" ref="false" />
            <enumValue>
              <field name="Info" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="text" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Message" ref="true" />
      </containers>
      <file name="ef1afdfa-2cc2-49bd-54d1-0df819649487" />
    </api>
    <api id="P:Symbiote.Core.Message.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Text" />
      <setter name="set_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Message" ref="true" />
      </containers>
      <file name="fbf1de7d-6352-2063-2d90-546c336d53d2" />
    </api>
    <api id="M:Symbiote.Core.Message.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Message" ref="true" />
      </containers>
      <file name="b0ebe23c-d0aa-8603-b9ff-2281774206ac" />
    </api>
    <api id="P:Symbiote.Core.Message.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:Symbiote.Core.MessageType" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Message" ref="true" />
      </containers>
      <file name="86a93e9b-24fb-45f5-dab8-3e368d0bf52a" />
    </api>
    <api id="T:Symbiote.Core.MessageType">
      <topicdata group="api" />
      <apidata name="MessageType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.MessageType.Any" />
        <element api="F:Symbiote.Core.MessageType.Info" />
        <element api="F:Symbiote.Core.MessageType.Warning" />
        <element api="F:Symbiote.Core.MessageType.Error" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="f063699f-cbcc-daf9-db97-f2c6c5a3dcee" />
    </api>
    <api id="F:Symbiote.Core.MessageType.Any">
      <topicdata group="api" notopic="" />
      <apidata name="Any" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.MessageType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.MessageType" ref="false" />
      </containers>
      <file name="6eb334f9-6e18-a1fb-f30d-b5fa23ee011b" />
    </api>
    <api id="F:Symbiote.Core.MessageType.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.MessageType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.MessageType" ref="false" />
      </containers>
      <file name="b6b04300-2853-1b52-f143-c304f1ef51fe" />
    </api>
    <api id="F:Symbiote.Core.MessageType.Info">
      <topicdata group="api" notopic="" />
      <apidata name="Info" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.MessageType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.MessageType" ref="false" />
      </containers>
      <file name="91486e03-4a8d-ef42-4f5b-3b0d18517fc2" />
    </api>
    <api id="F:Symbiote.Core.MessageType.Warning">
      <topicdata group="api" notopic="" />
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.MessageType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.MessageType" ref="false" />
      </containers>
      <file name="a287867c-564d-2bd6-7838-a45b0c32bef5" />
    </api>
    <api id="T:Symbiote.Core.Program">
      <topicdata group="api" />
      <apidata name="Program" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Program.#ctor" />
        <element api="M:Symbiote.Core.Program.#cctor" />
        <element api="F:Symbiote.Core.Program.logger" />
        <element api="M:Symbiote.Core.Program.Main(System.String[])" />
        <element api="F:Symbiote.Core.Program.manager" />
        <element api="M:Symbiote.Core.Program.Start(System.String[])" />
        <element api="M:Symbiote.Core.Program.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="4f53357b-80c1-57da-45d6-94dcb2b11cee" />
    </api>
    <api id="Methods.T:Symbiote.Core.Program">
      <topicdata name="Program" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Program" />
      <apidata name="Program" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Program.Main(System.String[])" />
        <element api="M:Symbiote.Core.Program.Start(System.String[])" />
        <element api="M:Symbiote.Core.Program.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Program" />
      </containers>
      <file name="dd6acef7-719d-63c1-ddbf-aa7448b02863" />
    </api>
    <api id="Fields.T:Symbiote.Core.Program">
      <topicdata name="Program" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Program" />
      <apidata name="Program" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Program.logger" />
        <element api="F:Symbiote.Core.Program.manager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Program" />
      </containers>
      <file name="95a50fd1-369b-e692-9325-33f0a1dc4f41" />
    </api>
    <api id="M:Symbiote.Core.Program.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Program" ref="true" />
      </containers>
      <file name="9c47e823-d558-c577-fe0c-e979cdb3eff4" />
    </api>
    <api id="M:Symbiote.Core.Program.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Program" ref="true" />
      </containers>
      <file name="b04b3eb8-c66e-6567-c555-6da932145a1d" />
    </api>
    <api id="F:Symbiote.Core.Program.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Program" ref="true" />
      </containers>
      <file name="c67ee2ad-9d21-2381-672f-5cb5650073d8" />
    </api>
    <api id="M:Symbiote.Core.Program.Main(System.String[])">
      <topicdata group="api" />
      <apidata name="Main" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Program" ref="true" />
      </containers>
      <file name="ece72d5e-ff77-11b2-831d-58047481a579" />
    </api>
    <api id="F:Symbiote.Core.Program.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Program" ref="true" />
      </containers>
      <file name="c7b4c7e3-56ac-8bef-0f11-5bda88859213" />
    </api>
    <api id="M:Symbiote.Core.Program.Start(System.String[])">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Program" ref="true" />
      </containers>
      <file name="af1cad46-b3ee-a977-0a03-6cea8e36031d" />
    </api>
    <api id="M:Symbiote.Core.Program.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Program" ref="true" />
      </containers>
      <file name="cfdb0126-88ca-8bbe-0096-f26dd0fb55b6" />
    </api>
    <api id="T:Symbiote.Core.ProgramManager">
      <topicdata group="api" />
      <apidata name="ProgramManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.IManager" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.ProgramManager.#ctor(System.Boolean)" />
        <element api="M:Symbiote.Core.ProgramManager.#cctor" />
        <element api="P:Symbiote.Core.ProgramManager.Configuration" />
        <element api="P:Symbiote.Core.ProgramManager.ConfigurationFileName" />
        <element api="P:Symbiote.Core.ProgramManager.ConfigurationManager" />
        <element api="P:Symbiote.Core.ProgramManager.Directories" />
        <element api="M:Symbiote.Core.ProgramManager.GetInstanceName" />
        <element api="F:Symbiote.Core.ProgramManager.instance" />
        <element api="M:Symbiote.Core.ProgramManager.Instance(System.Boolean)" />
        <element api="P:Symbiote.Core.ProgramManager.InstanceName" />
        <element api="F:Symbiote.Core.ProgramManager.logger" />
        <element api="P:Symbiote.Core.ProgramManager.ModelManager" />
        <element api="P:Symbiote.Core.ProgramManager.Platform" />
        <element api="P:Symbiote.Core.ProgramManager.PlatformManager" />
        <element api="P:Symbiote.Core.ProgramManager.PluginManager" />
        <element api="P:Symbiote.Core.ProgramManager.ProductName" />
        <element api="P:Symbiote.Core.ProgramManager.ProductVersion" />
        <element api="P:Symbiote.Core.ProgramManager.RegisteredTypes" />
        <element api="M:Symbiote.Core.ProgramManager.Restart" />
        <element api="P:Symbiote.Core.ProgramManager.SafeMode" />
        <element api="P:Symbiote.Core.ProgramManager.ServiceManager" />
        <element api="M:Symbiote.Core.ProgramManager.Start" />
        <element api="M:Symbiote.Core.ProgramManager.StartManager(Symbiote.Core.IManager)" />
        <element api="P:Symbiote.Core.ProgramManager.State" />
        <element api="M:Symbiote.Core.ProgramManager.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="9eb92dfe-271a-6435-e167-5239e696d284" />
    </api>
    <api id="Methods.T:Symbiote.Core.ProgramManager">
      <topicdata name="ProgramManager" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.ProgramManager" />
      <apidata name="ProgramManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.ProgramManager.GetInstanceName" />
        <element api="M:Symbiote.Core.ProgramManager.Instance(System.Boolean)" />
        <element api="M:Symbiote.Core.ProgramManager.Restart" />
        <element api="M:Symbiote.Core.ProgramManager.Start" />
        <element api="M:Symbiote.Core.ProgramManager.StartManager(Symbiote.Core.IManager)" />
        <element api="M:Symbiote.Core.ProgramManager.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" />
      </containers>
      <file name="cf2d8017-74a4-d03f-d514-70658837d03d" />
    </api>
    <api id="Properties.T:Symbiote.Core.ProgramManager">
      <topicdata name="ProgramManager" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.ProgramManager" />
      <apidata name="ProgramManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.ProgramManager.Configuration" />
        <element api="P:Symbiote.Core.ProgramManager.ConfigurationFileName" />
        <element api="P:Symbiote.Core.ProgramManager.ConfigurationManager" />
        <element api="P:Symbiote.Core.ProgramManager.Directories" />
        <element api="P:Symbiote.Core.ProgramManager.InstanceName" />
        <element api="P:Symbiote.Core.ProgramManager.ModelManager" />
        <element api="P:Symbiote.Core.ProgramManager.Platform" />
        <element api="P:Symbiote.Core.ProgramManager.PlatformManager" />
        <element api="P:Symbiote.Core.ProgramManager.PluginManager" />
        <element api="P:Symbiote.Core.ProgramManager.ProductName" />
        <element api="P:Symbiote.Core.ProgramManager.ProductVersion" />
        <element api="P:Symbiote.Core.ProgramManager.RegisteredTypes" />
        <element api="P:Symbiote.Core.ProgramManager.SafeMode" />
        <element api="P:Symbiote.Core.ProgramManager.ServiceManager" />
        <element api="P:Symbiote.Core.ProgramManager.State" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" />
      </containers>
      <file name="3857997a-5e65-d3dd-206a-f6c71706fcce" />
    </api>
    <api id="Fields.T:Symbiote.Core.ProgramManager">
      <topicdata name="ProgramManager" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.ProgramManager" />
      <apidata name="ProgramManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.ProgramManager.instance" />
        <element api="F:Symbiote.Core.ProgramManager.logger" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" />
      </containers>
      <file name="651992a7-307b-d6d9-ea0b-fc17c05356ae" />
    </api>
    <api id="M:Symbiote.Core.ProgramManager.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" special="true" />
      <parameters>
        <parameter name="safeMode" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="553ce1c5-8147-c3e9-065b-6554ca4984a5" />
    </api>
    <api id="M:Symbiote.Core.ProgramManager.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="31926925-dbbd-49d5-f684-51a8eca1f9c6" />
    </api>
    <api id="P:Symbiote.Core.ProgramManager.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Configuration" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="6556860c-5977-61d9-e71e-bb5cdfbd8b1f" />
    </api>
    <api id="P:Symbiote.Core.ProgramManager.ConfigurationFileName">
      <topicdata group="api" />
      <apidata name="ConfigurationFileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConfigurationFileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="7a67f350-bc05-3423-d5a2-63ee772135ba" />
    </api>
    <api id="P:Symbiote.Core.ProgramManager.ConfigurationManager">
      <topicdata group="api" />
      <apidata name="ConfigurationManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ConfigurationManager" />
      <setter name="set_ConfigurationManager" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="8c1ed36e-38da-e7e9-5f66-99682721a18b" />
    </api>
    <api id="P:Symbiote.Core.ProgramManager.Directories">
      <topicdata group="api" />
      <apidata name="Directories" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Directories" />
      <returns>
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="07b1ad4e-127e-aef4-0c20-0a38b66ae481" />
    </api>
    <api id="M:Symbiote.Core.ProgramManager.GetInstanceName">
      <topicdata group="api" />
      <apidata name="GetInstanceName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="6329c5dd-4c9d-ae61-f0f4-d3195744d877" />
    </api>
    <api id="F:Symbiote.Core.ProgramManager.instance">
      <topicdata group="api" />
      <apidata name="instance" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="c6de5d8a-83eb-278e-8b5d-cd17e550fb4c" />
    </api>
    <api id="M:Symbiote.Core.ProgramManager.Instance(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="safeMode" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="2c37d699-fc8a-b26a-5c1f-c07c42c6127d" />
    </api>
    <api id="P:Symbiote.Core.ProgramManager.InstanceName">
      <topicdata group="api" />
      <apidata name="InstanceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="7990856c-b8a8-1860-54f5-b07fd768b4e2" />
    </api>
    <api id="F:Symbiote.Core.ProgramManager.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="0aacfbeb-0337-12cb-2a0e-ece18a784b79" />
    </api>
    <api id="P:Symbiote.Core.ProgramManager.ModelManager">
      <topicdata group="api" />
      <apidata name="ModelManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ModelManager" />
      <setter name="set_ModelManager" />
      <returns>
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="6c733d24-5485-0445-ff4e-abc4633528ab" />
    </api>
    <api id="P:Symbiote.Core.ProgramManager.Platform">
      <topicdata group="api" />
      <apidata name="Platform" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Platform" />
      <returns>
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="4be30ff0-6f7a-9e88-d9a5-97e1ceb093ac" />
    </api>
    <api id="P:Symbiote.Core.ProgramManager.PlatformManager">
      <topicdata group="api" />
      <apidata name="PlatformManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PlatformManager" />
      <setter name="set_PlatformManager" />
      <returns>
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="1662a2ea-a49e-9e97-465a-2720aaf1e339" />
    </api>
    <api id="P:Symbiote.Core.ProgramManager.PluginManager">
      <topicdata group="api" />
      <apidata name="PluginManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PluginManager" />
      <setter name="set_PluginManager" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="a4120d60-41aa-04c6-0eaa-f87a66f08e49" />
    </api>
    <api id="P:Symbiote.Core.ProgramManager.ProductName">
      <topicdata group="api" />
      <apidata name="ProductName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProductName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="c5ff2d7e-47f6-0ee4-af25-0d87d7521fae" />
    </api>
    <api id="P:Symbiote.Core.ProgramManager.ProductVersion">
      <topicdata group="api" />
      <apidata name="ProductVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProductVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="5cc76ae2-f150-d2ae-331c-1741e09c28da" />
    </api>
    <api id="P:Symbiote.Core.ProgramManager.RegisteredTypes">
      <topicdata group="api" />
      <apidata name="RegisteredTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RegisteredTypes" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
            <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="f69422d2-a895-c395-91d6-8120005d5f8d" />
    </api>
    <api id="M:Symbiote.Core.ProgramManager.Restart">
      <topicdata group="api" />
      <apidata name="Restart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Restart">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="559c8c23-1bbe-f205-a84f-d51e39203eda" />
    </api>
    <api id="P:Symbiote.Core.ProgramManager.SafeMode">
      <topicdata group="api" />
      <apidata name="SafeMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_SafeMode" />
      <setter name="set_SafeMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="dd1ad609-4714-de4b-f6ea-64583a8a1528" />
    </api>
    <api id="P:Symbiote.Core.ProgramManager.ServiceManager">
      <topicdata group="api" />
      <apidata name="ServiceManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ServiceManager" />
      <setter name="set_ServiceManager" />
      <returns>
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="a243fef1-5054-9df8-5c01-b42eae24bfc6" />
    </api>
    <api id="M:Symbiote.Core.ProgramManager.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Start">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="f4715bc3-93b0-38c4-4cc2-b329d028a096" />
    </api>
    <api id="M:Symbiote.Core.ProgramManager.StartManager(Symbiote.Core.IManager)">
      <topicdata group="api" />
      <apidata name="StartManager" group="member" subgroup="method" />
      <memberdata visibility="assembly" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.IManager" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="f4a763d6-3540-a902-9b96-6cc4550d7a07" />
    </api>
    <api id="P:Symbiote.Core.ProgramManager.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_State" />
      <setter name="set_State" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.IManager.State">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="84c9010d-e906-0af3-87ab-29681955f382" />
    </api>
    <api id="M:Symbiote.Core.ProgramManager.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Stop">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </containers>
      <file name="29cafa71-5489-03f0-20f0-f64ba1c9b1c0" />
    </api>
    <api id="T:Symbiote.Core.ProjectInstaller">
      <topicdata group="api" />
      <apidata name="ProjectInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.Install.Installer" ref="true" />
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Symbiote.Core.ProjectInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ComponentModel" />
              <type api="T:System.ComponentModel.Component" ref="true" />
            </containers>
          </element>
          <element api="M:Symbiote.Core.ProjectInstaller.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)">
          <apidata name="Commit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)">
          <apidata name="Install" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateSaver">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)">
          <apidata name="OnCommitted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)">
          <apidata name="OnAfterInstall" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)">
          <apidata name="OnAfterRollback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)">
          <apidata name="OnAfterUninstall" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)">
          <apidata name="OnCommitting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)">
          <apidata name="OnBeforeInstall" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)">
          <apidata name="OnBeforeRollback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)">
          <apidata name="OnBeforeUninstall" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)">
          <apidata name="Rollback" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)">
          <apidata name="Uninstall" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.Install.Installer.Context">
          <apidata name="Context" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Context" />
          <setter name="set_Context" />
          <returns>
            <type api="T:System.Configuration.Install.InstallContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Configuration.Install.Installer.HelpText">
          <apidata name="HelpText" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HelpText" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Configuration.Install.ResDescriptionAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Desc_Installer_HelpText</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Configuration.Install.Installer.Installers">
          <apidata name="Installers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Installers" />
          <returns>
            <type api="T:System.Configuration.Install.InstallerCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Content" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Configuration.Install.Installer.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Parent" />
          <setter name="set_Parent" />
          <returns>
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Configuration.Install.InstallerParentConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Configuration.Install.ResDescriptionAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Desc_Installer_Parent</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="E:System.Configuration.Install.Installer.Committed">
          <apidata name="Committed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Committed" />
          <remover name="remove_Committed" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="E:System.Configuration.Install.Installer.AfterInstall">
          <apidata name="AfterInstall" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_AfterInstall" />
          <remover name="remove_AfterInstall" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="E:System.Configuration.Install.Installer.AfterRollback">
          <apidata name="AfterRollback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_AfterRollback" />
          <remover name="remove_AfterRollback" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="E:System.Configuration.Install.Installer.AfterUninstall">
          <apidata name="AfterUninstall" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_AfterUninstall" />
          <remover name="remove_AfterUninstall" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="E:System.Configuration.Install.Installer.Committing">
          <apidata name="Committing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Committing" />
          <remover name="remove_Committing" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="E:System.Configuration.Install.Installer.BeforeInstall">
          <apidata name="BeforeInstall" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_BeforeInstall" />
          <remover name="remove_BeforeInstall" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="E:System.Configuration.Install.Installer.BeforeRollback">
          <apidata name="BeforeRollback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_BeforeRollback" />
          <remover name="remove_BeforeRollback" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall">
          <apidata name="BeforeUninstall" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_BeforeUninstall" />
          <remover name="remove_BeforeUninstall" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Component.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Component.GetService(System.Type)">
          <apidata name="GetService" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="service">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Component.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents">
          <apidata name="CanRaiseEvents" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CanRaiseEvents" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.Events">
          <apidata name="Events" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Events" />
          <returns>
            <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.Site">
          <apidata name="Site" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Site" />
          <setter name="set_Site" />
          <returns>
            <type api="T:System.ComponentModel.ISite" ref="true" />
          </returns>
          <implements>
            <member api="P:System.ComponentModel.IComponent.Site">
              <type api="T:System.ComponentModel.IComponent" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ComponentModel.Component.Container">
          <apidata name="Container" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Container" />
          <returns>
            <type api="T:System.ComponentModel.IContainer" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ComponentModel.Component.DesignMode">
          <apidata name="DesignMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DesignMode" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="E:System.ComponentModel.Component.Disposed">
          <apidata name="Disposed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Disposed" />
          <remover name="remove_Disposed" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ComponentModel.IComponent.Disposed">
              <type api="T:System.ComponentModel.IComponent" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                <enumValue>
                  <field name="Advanced" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.ProjectInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone">
            <apidata name="MemberwiseClone" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
            <apidata name="MemberwiseClone" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="cloneIdentity">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.MarshalByRefObject" ref="true" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.MarshalByRefObject" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.ProjectInstaller.#ctor" />
        <element api="F:Symbiote.Core.ProjectInstaller.components" />
        <element api="M:Symbiote.Core.ProjectInstaller.InitializeComponent" />
        <element api="F:Symbiote.Core.ProjectInstaller.serviceInstaller" />
        <element api="F:Symbiote.Core.ProjectInstaller.serviceProcessInstaller" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="3bab1479-9cb2-6d03-2420-073ae56a310f" />
    </api>
    <api id="Methods.T:Symbiote.Core.ProjectInstaller">
      <topicdata name="ProjectInstaller" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.ProjectInstaller" />
      <apidata name="ProjectInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Symbiote.Core.ProjectInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ComponentModel" />
              <type api="T:System.ComponentModel.Component" ref="true" />
            </containers>
          </element>
          <element api="M:Symbiote.Core.ProjectInstaller.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)">
          <apidata name="Commit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)">
          <apidata name="Install" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateSaver">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)">
          <apidata name="OnCommitted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)">
          <apidata name="OnAfterInstall" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)">
          <apidata name="OnAfterRollback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)">
          <apidata name="OnAfterUninstall" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)">
          <apidata name="OnCommitting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)">
          <apidata name="OnBeforeInstall" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)">
          <apidata name="OnBeforeRollback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)">
          <apidata name="OnBeforeUninstall" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)">
          <apidata name="Rollback" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)">
          <apidata name="Uninstall" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="savedState">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Component.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Component.GetService(System.Type)">
          <apidata name="GetService" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="service">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Component.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.ProjectInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone">
            <apidata name="MemberwiseClone" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
            <apidata name="MemberwiseClone" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="cloneIdentity">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.MarshalByRefObject" ref="true" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.MarshalByRefObject" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.ProjectInstaller.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProjectInstaller" />
      </containers>
      <file name="997063ac-f9cc-4ee3-b1bd-327d56261f3f" />
    </api>
    <api id="Properties.T:Symbiote.Core.ProjectInstaller">
      <topicdata name="ProjectInstaller" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.ProjectInstaller" />
      <apidata name="ProjectInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Configuration.Install.Installer.Context">
          <apidata name="Context" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Context" />
          <setter name="set_Context" />
          <returns>
            <type api="T:System.Configuration.Install.InstallContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Configuration.Install.Installer.HelpText">
          <apidata name="HelpText" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HelpText" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Configuration.Install.ResDescriptionAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Desc_Installer_HelpText</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Configuration.Install.Installer.Installers">
          <apidata name="Installers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Installers" />
          <returns>
            <type api="T:System.Configuration.Install.InstallerCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Content" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Configuration.Install.Installer.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Parent" />
          <setter name="set_Parent" />
          <returns>
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Configuration.Install.InstallerParentConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Configuration.Install.ResDescriptionAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Desc_Installer_Parent</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents">
          <apidata name="CanRaiseEvents" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CanRaiseEvents" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.Events">
          <apidata name="Events" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Events" />
          <returns>
            <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.Site">
          <apidata name="Site" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Site" />
          <setter name="set_Site" />
          <returns>
            <type api="T:System.ComponentModel.ISite" ref="true" />
          </returns>
          <implements>
            <member api="P:System.ComponentModel.IComponent.Site">
              <type api="T:System.ComponentModel.IComponent" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ComponentModel.Component.Container">
          <apidata name="Container" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Container" />
          <returns>
            <type api="T:System.ComponentModel.IContainer" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ComponentModel.Component.DesignMode">
          <apidata name="DesignMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DesignMode" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProjectInstaller" />
      </containers>
      <file name="1269e18a-aa4a-c4ac-2ca4-7cfd293a40d3" />
    </api>
    <api id="Events.T:Symbiote.Core.ProjectInstaller">
      <topicdata name="ProjectInstaller" group="list" subgroup="Events" typeTopicId="T:Symbiote.Core.ProjectInstaller" />
      <apidata name="ProjectInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Configuration.Install.Installer.Committed">
          <apidata name="Committed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Committed" />
          <remover name="remove_Committed" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="E:System.Configuration.Install.Installer.AfterInstall">
          <apidata name="AfterInstall" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_AfterInstall" />
          <remover name="remove_AfterInstall" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="E:System.Configuration.Install.Installer.AfterRollback">
          <apidata name="AfterRollback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_AfterRollback" />
          <remover name="remove_AfterRollback" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="E:System.Configuration.Install.Installer.AfterUninstall">
          <apidata name="AfterUninstall" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_AfterUninstall" />
          <remover name="remove_AfterUninstall" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="E:System.Configuration.Install.Installer.Committing">
          <apidata name="Committing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Committing" />
          <remover name="remove_Committing" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="E:System.Configuration.Install.Installer.BeforeInstall">
          <apidata name="BeforeInstall" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_BeforeInstall" />
          <remover name="remove_BeforeInstall" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="E:System.Configuration.Install.Installer.BeforeRollback">
          <apidata name="BeforeRollback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_BeforeRollback" />
          <remover name="remove_BeforeRollback" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall">
          <apidata name="BeforeUninstall" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_BeforeUninstall" />
          <remover name="remove_BeforeUninstall" />
          <eventhandler>
            <type api="T:System.Configuration.Install.InstallEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Configuration.Install.InstallEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration.Install" />
            <type api="T:System.Configuration.Install.Installer" ref="true" />
          </containers>
        </element>
        <element api="E:System.ComponentModel.Component.Disposed">
          <apidata name="Disposed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Disposed" />
          <remover name="remove_Disposed" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ComponentModel.IComponent.Disposed">
              <type api="T:System.ComponentModel.IComponent" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                <enumValue>
                  <field name="Advanced" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProjectInstaller" />
      </containers>
      <file name="b4e748f3-a334-09e6-0748-d9f0c198362a" />
    </api>
    <api id="Fields.T:Symbiote.Core.ProjectInstaller">
      <topicdata name="ProjectInstaller" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.ProjectInstaller" />
      <apidata name="ProjectInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.ProjectInstaller.components" />
        <element api="F:Symbiote.Core.ProjectInstaller.serviceInstaller" />
        <element api="F:Symbiote.Core.ProjectInstaller.serviceProcessInstaller" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProjectInstaller" />
      </containers>
      <file name="23167fb9-c7a4-905c-bdd9-a53aa4e573db" />
    </api>
    <api id="Overload:Symbiote.Core.ProjectInstaller.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.ProjectInstaller.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProjectInstaller" ref="true" />
      </containers>
      <file name="30fdd9f6-9bd4-9671-c9ef-6f6a52fb6984" />
    </api>
    <api id="M:Symbiote.Core.ProjectInstaller.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProjectInstaller" ref="true" />
      </containers>
      <file name="293302a7-673d-e66b-2fbb-9e8f7c497350" />
    </api>
    <api id="F:Symbiote.Core.ProjectInstaller.components">
      <topicdata group="api" />
      <apidata name="components" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.IContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProjectInstaller" ref="true" />
      </containers>
      <file name="046d4656-f025-68ea-47e0-824a765b8b16" />
    </api>
    <api id="M:Symbiote.Core.ProjectInstaller.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Symbiote.Core.ProjectInstaller.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProjectInstaller" ref="true" />
      </containers>
      <file name="6440e5af-8e47-cdd5-3f55-eb798100f259" />
    </api>
    <api id="M:Symbiote.Core.ProjectInstaller.InitializeComponent">
      <topicdata group="api" />
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProjectInstaller" ref="true" />
      </containers>
      <file name="ab75c8f2-0c62-ad70-5a31-3515ca6d4019" />
    </api>
    <api id="F:Symbiote.Core.ProjectInstaller.serviceInstaller">
      <topicdata group="api" />
      <apidata name="serviceInstaller" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceInstaller" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProjectInstaller" ref="true" />
      </containers>
      <file name="36717a25-83b0-620c-e177-015513df7e25" />
    </api>
    <api id="F:Symbiote.Core.ProjectInstaller.serviceProcessInstaller">
      <topicdata group="api" />
      <apidata name="serviceProcessInstaller" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceProcess.ServiceProcessInstaller" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ProjectInstaller" ref="true" />
      </containers>
      <file name="148ac970-5bb9-b51a-fc50-1dad1a97e811" />
    </api>
    <api id="T:Symbiote.Core.RealtimeLogger">
      <topicdata group="api" />
      <apidata name="RealtimeLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.RealtimeLogger.#ctor" />
        <element api="M:Symbiote.Core.RealtimeLogger.#cctor" />
        <element api="M:Symbiote.Core.RealtimeLogger.AppendLog(System.String,System.String,System.String,System.String)" />
        <element api="M:Symbiote.Core.RealtimeLogger.AppendLogHistory(Symbiote.Core.RealtimeLoggerEventArgs)" />
        <element api="M:Symbiote.Core.RealtimeLogger.Initialize" />
        <element api="F:Symbiote.Core.RealtimeLogger.initialized" />
        <element api="E:Symbiote.Core.RealtimeLogger.LogArrived" />
        <element api="P:Symbiote.Core.RealtimeLogger.LogHistory" />
        <element api="F:Symbiote.Core.RealtimeLogger.logHistoryLimit" />
        <element api="P:Symbiote.Core.RealtimeLogger.LogHistoryLimit" />
        <element api="M:Symbiote.Core.RealtimeLogger.PruneLogHistory" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="0ea4b3c4-8389-31e7-8455-f8b2dca0923c" />
    </api>
    <api id="Methods.T:Symbiote.Core.RealtimeLogger">
      <topicdata name="RealtimeLogger" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.RealtimeLogger" />
      <apidata name="RealtimeLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.RealtimeLogger.AppendLog(System.String,System.String,System.String,System.String)" />
        <element api="M:Symbiote.Core.RealtimeLogger.AppendLogHistory(Symbiote.Core.RealtimeLoggerEventArgs)" />
        <element api="M:Symbiote.Core.RealtimeLogger.Initialize" />
        <element api="M:Symbiote.Core.RealtimeLogger.PruneLogHistory" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" />
      </containers>
      <file name="d34f5eff-470c-e0fc-581c-0b07ec5c44f1" />
    </api>
    <api id="Properties.T:Symbiote.Core.RealtimeLogger">
      <topicdata name="RealtimeLogger" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.RealtimeLogger" />
      <apidata name="RealtimeLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.RealtimeLogger.LogHistory" />
        <element api="P:Symbiote.Core.RealtimeLogger.LogHistoryLimit" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" />
      </containers>
      <file name="79f11839-9f9e-8caa-1b6b-075a79f32961" />
    </api>
    <api id="Events.T:Symbiote.Core.RealtimeLogger">
      <topicdata name="RealtimeLogger" group="list" subgroup="Events" typeTopicId="T:Symbiote.Core.RealtimeLogger" />
      <apidata name="RealtimeLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:Symbiote.Core.RealtimeLogger.LogArrived" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" />
      </containers>
      <file name="04901de1-e989-8196-6d69-765407f789b0" />
    </api>
    <api id="Fields.T:Symbiote.Core.RealtimeLogger">
      <topicdata name="RealtimeLogger" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.RealtimeLogger" />
      <apidata name="RealtimeLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.RealtimeLogger.initialized" />
        <element api="F:Symbiote.Core.RealtimeLogger.logHistoryLimit" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" />
      </containers>
      <file name="b467f6dd-b829-238b-e0b9-489266d3446c" />
    </api>
    <api id="M:Symbiote.Core.RealtimeLogger.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" ref="true" />
      </containers>
      <file name="12c5d667-980c-e225-3904-9dc09f23732e" />
    </api>
    <api id="M:Symbiote.Core.RealtimeLogger.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" ref="true" />
      </containers>
      <file name="bf59c70b-4d6c-5d93-241b-66f6ab1788bc" />
    </api>
    <api id="M:Symbiote.Core.RealtimeLogger.AppendLog(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AppendLog" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="level">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="logger">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" ref="true" />
      </containers>
      <file name="bde57a1a-39af-ea52-7efc-1722736687dd" />
    </api>
    <api id="M:Symbiote.Core.RealtimeLogger.AppendLogHistory(Symbiote.Core.RealtimeLoggerEventArgs)">
      <topicdata group="api" />
      <apidata name="AppendLogHistory" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventArgs">
          <type api="T:Symbiote.Core.RealtimeLoggerEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" ref="true" />
      </containers>
      <file name="274f5443-55ea-4b96-f10c-454393465493" />
    </api>
    <api id="M:Symbiote.Core.RealtimeLogger.Initialize">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" ref="true" />
      </containers>
      <file name="995c8841-25e7-8acb-0034-5ff91f6e795a" />
    </api>
    <api id="F:Symbiote.Core.RealtimeLogger.initialized">
      <topicdata group="api" />
      <apidata name="initialized" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" ref="true" />
      </containers>
      <file name="f957e4a9-4211-556c-08be-c5aa495927bf" />
    </api>
    <api id="E:Symbiote.Core.RealtimeLogger.LogArrived">
      <topicdata group="api" />
      <apidata name="LogArrived" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_LogArrived" />
      <remover name="remove_LogArrived" />
      <eventhandler>
        <type api="T:Symbiote.Core.RealtimeLogger.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.RealtimeLoggerEventArgs" ref="true" />
          </specialization>
          <type api="T:Symbiote.Core.RealtimeLogger" ref="true" />
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Symbiote.Core.RealtimeLoggerEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" ref="true" />
      </containers>
      <file name="aa5ec302-ee0f-03bd-255f-0f96d2edb106" />
    </api>
    <api id="P:Symbiote.Core.RealtimeLogger.LogHistory">
      <topicdata group="api" />
      <apidata name="LogHistory" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_LogHistory" />
      <setter name="set_LogHistory" />
      <returns>
        <type api="T:System.Collections.Generic.Queue`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.RealtimeLoggerEventArgs" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" ref="true" />
      </containers>
      <file name="0614d943-9e8c-dd7d-6e10-5efba553ea2e" />
    </api>
    <api id="F:Symbiote.Core.RealtimeLogger.logHistoryLimit">
      <topicdata group="api" />
      <apidata name="logHistoryLimit" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>200</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" ref="true" />
      </containers>
      <file name="da5c8d3f-bb41-d2ac-5119-48c18d1892d8" />
    </api>
    <api id="P:Symbiote.Core.RealtimeLogger.LogHistoryLimit">
      <topicdata group="api" />
      <apidata name="LogHistoryLimit" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LogHistoryLimit" />
      <setter name="set_LogHistoryLimit" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" ref="true" />
      </containers>
      <file name="0114c619-96d4-53f9-1e6e-1413b0f95efb" />
    </api>
    <api id="M:Symbiote.Core.RealtimeLogger.PruneLogHistory">
      <topicdata group="api" />
      <apidata name="PruneLogHistory" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" ref="true" />
      </containers>
      <file name="d73200f0-39a5-397b-773e-4e1ed1b70950" />
    </api>
    <api id="T:Symbiote.Core.RealtimeLogger.EventHandler`1">
      <topicdata group="api" />
      <apidata name="EventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="RealtimeLoggerEventArgs" />
      </templates>
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <template name="RealtimeLoggerEventArgs" index="0" api="T:Symbiote.Core.RealtimeLogger.EventHandler`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLogger" ref="true" />
      </containers>
      <file name="83fa6659-68d7-6b74-e9a4-17c24c9097aa" />
    </api>
    <api id="T:Symbiote.Core.RealtimeLoggerEventArgs">
      <topicdata group="api" />
      <apidata name="RealtimeLoggerEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.RealtimeLoggerEventArgs.#ctor(System.String,System.String,System.String,System.String)" />
        <element api="P:Symbiote.Core.RealtimeLoggerEventArgs.DateTime" />
        <element api="P:Symbiote.Core.RealtimeLoggerEventArgs.Level" />
        <element api="P:Symbiote.Core.RealtimeLoggerEventArgs.Logger" />
        <element api="P:Symbiote.Core.RealtimeLoggerEventArgs.Message" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="def9f244-2113-f9b9-8dc7-f65a23f01f15" />
    </api>
    <api id="Methods.T:Symbiote.Core.RealtimeLoggerEventArgs">
      <topicdata name="RealtimeLoggerEventArgs" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.RealtimeLoggerEventArgs" />
      <apidata name="RealtimeLoggerEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLoggerEventArgs" />
      </containers>
      <file name="e9f5d981-aeea-9f1c-c887-ecd0bc17dd58" />
    </api>
    <api id="Properties.T:Symbiote.Core.RealtimeLoggerEventArgs">
      <topicdata name="RealtimeLoggerEventArgs" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.RealtimeLoggerEventArgs" />
      <apidata name="RealtimeLoggerEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.RealtimeLoggerEventArgs.DateTime" />
        <element api="P:Symbiote.Core.RealtimeLoggerEventArgs.Level" />
        <element api="P:Symbiote.Core.RealtimeLoggerEventArgs.Logger" />
        <element api="P:Symbiote.Core.RealtimeLoggerEventArgs.Message" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLoggerEventArgs" />
      </containers>
      <file name="c7b6f15c-6bd7-c619-3e3a-b5ffbd5a092e" />
    </api>
    <api id="M:Symbiote.Core.RealtimeLoggerEventArgs.#ctor(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="level">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="logger">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLoggerEventArgs" ref="true" />
      </containers>
      <file name="df09657c-374d-b006-83d8-42d5f2808df1" />
    </api>
    <api id="P:Symbiote.Core.RealtimeLoggerEventArgs.DateTime">
      <topicdata group="api" />
      <apidata name="DateTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_DateTime" />
      <setter name="set_DateTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLoggerEventArgs" ref="true" />
      </containers>
      <file name="c1169756-3150-4a27-0b4e-0dc95ca14b5c" />
    </api>
    <api id="P:Symbiote.Core.RealtimeLoggerEventArgs.Level">
      <topicdata group="api" />
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Level" />
      <setter name="set_Level" />
      <returns>
        <type api="T:NLog.LogLevel" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLoggerEventArgs" ref="true" />
      </containers>
      <file name="527226bc-c246-5652-792a-b59550bcfa1b" />
    </api>
    <api id="P:Symbiote.Core.RealtimeLoggerEventArgs.Logger">
      <topicdata group="api" />
      <apidata name="Logger" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Logger" />
      <setter name="set_Logger" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLoggerEventArgs" ref="true" />
      </containers>
      <file name="7c68c4a0-360c-bb6d-4c89-5abdf903c741" />
    </api>
    <api id="P:Symbiote.Core.RealtimeLoggerEventArgs.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.RealtimeLoggerEventArgs" ref="true" />
      </containers>
      <file name="6f70f82e-c62d-a252-a0ed-d56d6235f451" />
    </api>
    <api id="T:Symbiote.Core.Result">
      <topicdata group="api" />
      <apidata name="Result" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Symbiote.Core.Result`1" ref="true" />
          <type api="T:Symbiote.Core.Plugin.PluginArchiveLoadResult" ref="true" />
          <type api="T:Symbiote.Core.Model.ModelBuildResult" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Result.#ctor(Symbiote.Core.ResultCode)" />
        <element api="M:Symbiote.Core.Result.AddError(System.String)" />
        <element api="M:Symbiote.Core.Result.AddInfo(System.String)" />
        <element api="M:Symbiote.Core.Result.AddWarning(System.String)" />
        <element api="M:Symbiote.Core.Result.Incorporate(Symbiote.Core.Result)" />
        <element api="M:Symbiote.Core.Result.LastErrorMessage" />
        <element api="M:Symbiote.Core.Result.LastInfoMessage" />
        <element api="M:Symbiote.Core.Result.LastWarningMessage" />
        <element api="M:Symbiote.Core.Result.Log(System.Action{System.String},System.String)" />
        <element api="Overload:Symbiote.Core.Result.LogAllMessages">
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},System.String,System.String)" />
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},Symbiote.Core.MessageType,System.String,System.String)" />
        </element>
        <element api="Overload:Symbiote.Core.Result.LogResult">
          <element api="M:Symbiote.Core.Result.LogResult(NLog.Logger,System.String)" />
          <element api="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.String)" />
          <element api="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)" />
        </element>
        <element api="P:Symbiote.Core.Result.Messages" />
        <element api="M:Symbiote.Core.Result.op_Implicit(Symbiote.Core.Result)~System.Boolean" />
        <element api="P:Symbiote.Core.Result.ResultCode" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="f7bb7371-902d-a20e-2bce-c5c8ff8fd78d" />
    </api>
    <api id="Methods.T:Symbiote.Core.Result">
      <topicdata name="Result" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Result" />
      <apidata name="Result" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Result.AddError(System.String)" />
        <element api="M:Symbiote.Core.Result.AddInfo(System.String)" />
        <element api="M:Symbiote.Core.Result.AddWarning(System.String)" />
        <element api="M:Symbiote.Core.Result.Incorporate(Symbiote.Core.Result)" />
        <element api="M:Symbiote.Core.Result.LastErrorMessage" />
        <element api="M:Symbiote.Core.Result.LastInfoMessage" />
        <element api="M:Symbiote.Core.Result.LastWarningMessage" />
        <element api="M:Symbiote.Core.Result.Log(System.Action{System.String},System.String)" />
        <element api="Overload:Symbiote.Core.Result.LogAllMessages">
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},System.String,System.String)" />
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},Symbiote.Core.MessageType,System.String,System.String)" />
        </element>
        <element api="Overload:Symbiote.Core.Result.LogResult">
          <element api="M:Symbiote.Core.Result.LogResult(NLog.Logger,System.String)" />
          <element api="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.String)" />
          <element api="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" />
      </containers>
      <file name="d0902f02-24ea-aa6a-c52a-28edbe366f6b" />
    </api>
    <api id="Operators.T:Symbiote.Core.Result">
      <topicdata name="Result" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Symbiote.Core.Result" />
      <apidata name="Result" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Result.op_Implicit(Symbiote.Core.Result)~System.Boolean" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" />
      </containers>
      <file name="c11c65ec-0646-da3a-6879-dcd523aab219" />
    </api>
    <api id="Properties.T:Symbiote.Core.Result">
      <topicdata name="Result" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Result" />
      <apidata name="Result" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Result.Messages" />
        <element api="P:Symbiote.Core.Result.ResultCode" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" />
      </containers>
      <file name="5a6d2ee2-9570-e5f8-9111-4aaa213c451d" />
    </api>
    <api id="Overload:Symbiote.Core.Result.LogAllMessages">
      <topicdata name="LogAllMessages" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="LogAllMessages" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},System.String,System.String)" />
        <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},Symbiote.Core.MessageType,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="7c46976e-8218-56db-48fb-8c519a1728c8" />
    </api>
    <api id="Overload:Symbiote.Core.Result.LogResult">
      <topicdata name="LogResult" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="LogResult" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Result.LogResult(NLog.Logger,System.String)" />
        <element api="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.String)" />
        <element api="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="2365b91c-c2fc-7d2c-d23b-f6ee5dcf5c70" />
    </api>
    <api id="M:Symbiote.Core.Result.#ctor(Symbiote.Core.ResultCode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="initialResultCode" optional="true">
          <type api="T:Symbiote.Core.ResultCode" ref="false" />
          <argument>
            <type api="T:Symbiote.Core.ResultCode" ref="false" />
            <enumValue>
              <field name="Success" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="3ca50d93-b137-c54e-e91e-c82a02e1f96b" />
    </api>
    <api id="M:Symbiote.Core.Result.AddError(System.String)">
      <topicdata group="api" />
      <apidata name="AddError" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="83100d7c-6152-5a0f-b684-dac79d9ad907" />
    </api>
    <api id="M:Symbiote.Core.Result.AddInfo(System.String)">
      <topicdata group="api" />
      <apidata name="AddInfo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="d80bdbde-8665-1862-223e-3d26b9da026e" />
    </api>
    <api id="M:Symbiote.Core.Result.AddWarning(System.String)">
      <topicdata group="api" />
      <apidata name="AddWarning" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="e647c81f-6509-b133-e142-c23df2a35425" />
    </api>
    <api id="M:Symbiote.Core.Result.Incorporate(Symbiote.Core.Result)">
      <topicdata group="api" />
      <apidata name="Incorporate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="Result">
          <type api="T:Symbiote.Core.Result" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="318b4705-df62-3905-a61e-109e536e19c3" />
    </api>
    <api id="M:Symbiote.Core.Result.LastErrorMessage">
      <topicdata group="api" />
      <apidata name="LastErrorMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="28584955-4ffb-44a7-7c97-6818aef10ee7" />
    </api>
    <api id="M:Symbiote.Core.Result.LastInfoMessage">
      <topicdata group="api" />
      <apidata name="LastInfoMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="7baa7b81-4dc9-f26c-fc74-4e7c7081f7d7" />
    </api>
    <api id="M:Symbiote.Core.Result.LastWarningMessage">
      <topicdata group="api" />
      <apidata name="LastWarningMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="ae5c7e8a-c5a5-eab5-9743-2b04bfcb0a16" />
    </api>
    <api id="M:Symbiote.Core.Result.Log(System.Action{System.String},System.String)">
      <topicdata group="api" />
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="6c83d388-9ed1-17d8-3ff3-a516cbe6d3f1" />
    </api>
    <api id="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},Symbiote.Core.MessageType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="LogAllMessages" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Result.LogAllMessages" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="messageType" optional="true">
          <type api="T:Symbiote.Core.MessageType" ref="false" />
          <argument>
            <type api="T:Symbiote.Core.MessageType" ref="false" />
            <enumValue>
              <field name="Any" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="header" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="footer" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="a1056df2-1c54-d1ce-792d-ce40086e2437" />
    </api>
    <api id="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="LogAllMessages" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Result.LogAllMessages" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="header" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="footer" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="240ec990-7943-fcd6-0969-eaff853de0ed" />
    </api>
    <api id="M:Symbiote.Core.Result.LogResult(NLog.Logger,System.String)">
      <topicdata group="api" />
      <apidata name="LogResult" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Result.LogResult" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="logger">
          <type api="T:NLog.Logger" ref="true" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="09851bdf-9b0e-8860-0aec-5e9d88d7c0ac" />
    </api>
    <api id="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)">
      <topicdata group="api" />
      <apidata name="LogResult" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Result.LogResult" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="successAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="warningAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="failureAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="385dfb82-1131-045d-250e-968b10f7701c" />
    </api>
    <api id="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.String)">
      <topicdata group="api" />
      <apidata name="LogResult" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Result.LogResult" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="d013416e-16a8-1288-d609-f35c3e2c8b7e" />
    </api>
    <api id="P:Symbiote.Core.Result.Messages">
      <topicdata group="api" />
      <apidata name="Messages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Messages" />
      <setter name="set_Messages" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Message" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="941b1437-671c-1b02-a79a-e9ada0cec552" />
    </api>
    <api id="M:Symbiote.Core.Result.op_Implicit(Symbiote.Core.Result)~System.Boolean">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Result">
          <type api="T:Symbiote.Core.Result" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="feab7bf8-a2c6-0745-4a77-600479f60897" />
    </api>
    <api id="P:Symbiote.Core.Result.ResultCode">
      <topicdata group="api" />
      <apidata name="ResultCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ResultCode" />
      <setter name="set_ResultCode" />
      <returns>
        <type api="T:Symbiote.Core.ResultCode" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result" ref="true" />
      </containers>
      <file name="6bccfd6f-c4e7-9e5b-f1b2-5130375de33f" />
    </api>
    <api id="T:Symbiote.Core.Result`1">
      <topicdata group="api" />
      <apidata name="Result" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Symbiote.Core.Result" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Symbiote.Core.Service.Web.ApiResult`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Symbiote.Core.Result.LastErrorMessage" />
        <element api="M:Symbiote.Core.Result.LastInfoMessage" />
        <element api="M:Symbiote.Core.Result.LastWarningMessage" />
        <element api="M:Symbiote.Core.Result.Log(System.Action{System.String},System.String)" />
        <element api="Overload:Symbiote.Core.Result`1.LogAllMessages">
          <element api="M:Symbiote.Core.Result`1.LogAllMessages(System.Action{System.String},System.String,System.String)" />
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},Symbiote.Core.MessageType,System.String,System.String)" />
        </element>
        <element api="P:Symbiote.Core.Result.Messages" />
        <element api="P:Symbiote.Core.Result.ResultCode" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Result`1.#ctor" />
        <element api="M:Symbiote.Core.Result`1.AddError(System.String)" />
        <element api="M:Symbiote.Core.Result`1.AddInfo(System.String)" />
        <element api="M:Symbiote.Core.Result`1.AddWarning(System.String)" />
        <element api="M:Symbiote.Core.Result`1.Incorporate(Symbiote.Core.Result)" />
        <element api="Overload:Symbiote.Core.Result`1.LogResult">
          <element api="M:Symbiote.Core.Result`1.LogResult(NLog.Logger,System.String)" />
          <element api="M:Symbiote.Core.Result`1.LogResult(System.Action{System.String},System.String)" />
          <element api="M:Symbiote.Core.Result`1.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)" />
        </element>
        <element api="P:Symbiote.Core.Result`1.ReturnValue" />
        <element api="M:Symbiote.Core.Result`1.SetReturnValue(`0)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="84ab0875-bd71-9f5a-18c0-0fa04e80063f" />
    </api>
    <api id="Methods.T:Symbiote.Core.Result`1">
      <topicdata name="Result" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Result`1" />
      <apidata name="Result" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Symbiote.Core.Result.LastErrorMessage" />
        <element api="M:Symbiote.Core.Result.LastInfoMessage" />
        <element api="M:Symbiote.Core.Result.LastWarningMessage" />
        <element api="M:Symbiote.Core.Result.Log(System.Action{System.String},System.String)" />
        <element api="Overload:Symbiote.Core.Result`1.LogAllMessages">
          <element api="M:Symbiote.Core.Result`1.LogAllMessages(System.Action{System.String},System.String,System.String)" />
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},Symbiote.Core.MessageType,System.String,System.String)" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Result`1.AddError(System.String)" />
        <element api="M:Symbiote.Core.Result`1.AddInfo(System.String)" />
        <element api="M:Symbiote.Core.Result`1.AddWarning(System.String)" />
        <element api="M:Symbiote.Core.Result`1.Incorporate(Symbiote.Core.Result)" />
        <element api="Overload:Symbiote.Core.Result`1.LogResult">
          <element api="M:Symbiote.Core.Result`1.LogResult(NLog.Logger,System.String)" />
          <element api="M:Symbiote.Core.Result`1.LogResult(System.Action{System.String},System.String)" />
          <element api="M:Symbiote.Core.Result`1.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)" />
        </element>
        <element api="M:Symbiote.Core.Result`1.SetReturnValue(`0)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result`1" />
      </containers>
      <file name="67cccc5f-da2b-ce13-23d4-818b870e5902" />
    </api>
    <api id="Properties.T:Symbiote.Core.Result`1">
      <topicdata name="Result" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Result`1" />
      <apidata name="Result" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Symbiote.Core.Result.Messages" />
        <element api="P:Symbiote.Core.Result.ResultCode" />
        <element api="P:Symbiote.Core.Result`1.ReturnValue" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result`1" />
      </containers>
      <file name="0d8f6ab4-8a3c-b905-2c23-e03558a8cffa" />
    </api>
    <api id="Overload:Symbiote.Core.Result`1.LogAllMessages">
      <topicdata name="LogAllMessages" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="LogAllMessages" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Result`1.LogAllMessages(System.Action{System.String},System.String,System.String)" />
        <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},Symbiote.Core.MessageType,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result`1" ref="true" />
      </containers>
      <file name="d7511c5a-989c-bb59-7d02-68ff4bb55211" />
    </api>
    <api id="Overload:Symbiote.Core.Result`1.LogResult">
      <topicdata name="LogResult" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="LogResult" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Result`1.LogResult(NLog.Logger,System.String)" />
        <element api="M:Symbiote.Core.Result`1.LogResult(System.Action{System.String},System.String)" />
        <element api="M:Symbiote.Core.Result`1.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result`1" ref="true" />
      </containers>
      <file name="20e4c41a-fabc-41cf-19f4-30070431162a" />
    </api>
    <api id="M:Symbiote.Core.Result`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result`1" ref="true" />
      </containers>
      <file name="0195a399-d71e-2355-113b-84046fd7f720" />
    </api>
    <api id="M:Symbiote.Core.Result`1.AddError(System.String)">
      <topicdata group="api" />
      <apidata name="AddError" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Symbiote.Core.Result`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result`1" ref="true" />
      </containers>
      <file name="6d4fa109-0370-4930-2b58-fb3c78d0833b" />
    </api>
    <api id="M:Symbiote.Core.Result`1.AddInfo(System.String)">
      <topicdata group="api" />
      <apidata name="AddInfo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Symbiote.Core.Result`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result`1" ref="true" />
      </containers>
      <file name="a07cc7f1-b88f-0a02-222d-5275942953cb" />
    </api>
    <api id="M:Symbiote.Core.Result`1.AddWarning(System.String)">
      <topicdata group="api" />
      <apidata name="AddWarning" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Symbiote.Core.Result`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result`1" ref="true" />
      </containers>
      <file name="1ee8bd29-1219-81ac-0e1e-3d0f6645a253" />
    </api>
    <api id="M:Symbiote.Core.Result`1.Incorporate(Symbiote.Core.Result)">
      <topicdata group="api" />
      <apidata name="Incorporate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="Result">
          <type api="T:Symbiote.Core.Result" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Symbiote.Core.Result`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result`1" ref="true" />
      </containers>
      <file name="8418979d-1542-68fe-25d2-282f6a6fa07f" />
    </api>
    <api id="M:Symbiote.Core.Result`1.LogAllMessages(System.Action{System.String},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="LogAllMessages" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Result`1.LogAllMessages" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="header" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="footer" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Symbiote.Core.Result`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result`1" ref="true" />
      </containers>
      <file name="c29ecf94-b79e-b7fa-3931-dddd43b1303a" />
    </api>
    <api id="M:Symbiote.Core.Result`1.LogResult(NLog.Logger,System.String)">
      <topicdata group="api" />
      <apidata name="LogResult" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Result`1.LogResult" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="logger">
          <type api="T:NLog.Logger" ref="true" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Symbiote.Core.Result`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result`1" ref="true" />
      </containers>
      <file name="2c572c21-b125-aac9-348e-596cc4877808" />
    </api>
    <api id="M:Symbiote.Core.Result`1.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)">
      <topicdata group="api" />
      <apidata name="LogResult" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Result`1.LogResult" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="successAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="warningAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="failureAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result`1" ref="true" />
      </containers>
      <file name="035e4c8a-055f-be80-51f7-31cb872e92a2" />
    </api>
    <api id="M:Symbiote.Core.Result`1.LogResult(System.Action{System.String},System.String)">
      <topicdata group="api" />
      <apidata name="LogResult" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Result`1.LogResult" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Symbiote.Core.Result`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result`1" ref="true" />
      </containers>
      <file name="1fd664f8-80d9-28d0-d53a-dc53e7b7f4a2" />
    </api>
    <api id="P:Symbiote.Core.Result`1.ReturnValue">
      <topicdata group="api" />
      <apidata name="ReturnValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReturnValue" />
      <setter name="set_ReturnValue" />
      <returns>
        <template name="T" index="0" api="T:Symbiote.Core.Result`1" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result`1" ref="true" />
      </containers>
      <file name="2cc53b3e-2e4a-1078-82f4-166a9ea4c895" />
    </api>
    <api id="M:Symbiote.Core.Result`1.SetReturnValue(`0)">
      <topicdata group="api" />
      <apidata name="SetReturnValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="returnValue">
          <template name="T" index="0" api="T:Symbiote.Core.Result`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Symbiote.Core.Result`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Result`1" ref="true" />
      </containers>
      <file name="e9447425-8847-ef49-5f36-8ba3c6899f62" />
    </api>
    <api id="T:Symbiote.Core.ResultCode">
      <topicdata group="api" />
      <apidata name="ResultCode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.ResultCode.Unknown" />
        <element api="F:Symbiote.Core.ResultCode.Success" />
        <element api="F:Symbiote.Core.ResultCode.Warning" />
        <element api="F:Symbiote.Core.ResultCode.Failure" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="4f913c79-f720-bae0-d064-fb262772b738" />
    </api>
    <api id="F:Symbiote.Core.ResultCode.Failure">
      <topicdata group="api" notopic="" />
      <apidata name="Failure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ResultCode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ResultCode" ref="false" />
      </containers>
      <file name="d8df9adb-b00d-56b1-412a-e6e00ab762ab" />
    </api>
    <api id="F:Symbiote.Core.ResultCode.Success">
      <topicdata group="api" notopic="" />
      <apidata name="Success" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ResultCode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ResultCode" ref="false" />
      </containers>
      <file name="020349c5-8563-195e-b1e2-fff09e26f52f" />
    </api>
    <api id="F:Symbiote.Core.ResultCode.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ResultCode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ResultCode" ref="false" />
      </containers>
      <file name="6480966e-ce36-c7b2-c7c3-f71819ece862" />
    </api>
    <api id="F:Symbiote.Core.ResultCode.Warning">
      <topicdata group="api" notopic="" />
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ResultCode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.ResultCode" ref="false" />
      </containers>
      <file name="d7e16c20-7360-b4ee-cb87-7a6f38d4988a" />
    </api>
    <api id="T:Symbiote.Core.Utility">
      <topicdata group="api" />
      <apidata name="Utility" group="type" subgroup="class" />
      <typedata visibility="assembly" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Symbiote.Core.Utility.Clone``1(System.Collections.Generic.IList{``0})" />
        <element api="M:Symbiote.Core.Utility.ComputeHash(System.String,System.String)" />
        <element api="M:Symbiote.Core.Utility.DisableLoggingLevel(NLog.LogLevel)" />
        <element api="M:Symbiote.Core.Utility.GetAssemblyAttribute``1(System.Reflection.Assembly)" />
        <element api="Overload:Symbiote.Core.Utility.GetSetting">
          <element api="M:Symbiote.Core.Utility.GetSetting(System.String)" />
          <element api="M:Symbiote.Core.Utility.GetSetting(System.String,System.String)" />
        </element>
        <element api="M:Symbiote.Core.Utility.ModifyService(System.String)" />
        <element api="M:Symbiote.Core.Utility.PrintLogo(NLog.Logger)" />
        <element api="M:Symbiote.Core.Utility.PrintModel(NLog.Logger,Symbiote.Core.Item,System.Int32)" />
        <element api="M:Symbiote.Core.Utility.SetLoggingLevel(System.String)" />
        <element api="M:Symbiote.Core.Utility.ShortGuid" />
        <element api="M:Symbiote.Core.Utility.SubArray``1(``0[],System.Int32,System.Int32)" />
        <element api="M:Symbiote.Core.Utility.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <element api="M:Symbiote.Core.Utility.UpdateSetting(System.String,System.String)" />
        <element api="M:Symbiote.Core.Utility.WildcardToRegex(System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="bcf80b6c-1b85-f553-4aac-28b072867a65" />
    </api>
    <api id="Methods.T:Symbiote.Core.Utility">
      <topicdata name="Utility" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Utility" />
      <apidata name="Utility" group="type" subgroup="class" />
      <typedata visibility="assembly" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Utility.Clone``1(System.Collections.Generic.IList{``0})" />
        <element api="M:Symbiote.Core.Utility.ComputeHash(System.String,System.String)" />
        <element api="M:Symbiote.Core.Utility.DisableLoggingLevel(NLog.LogLevel)" />
        <element api="M:Symbiote.Core.Utility.GetAssemblyAttribute``1(System.Reflection.Assembly)" />
        <element api="Overload:Symbiote.Core.Utility.GetSetting">
          <element api="M:Symbiote.Core.Utility.GetSetting(System.String)" />
          <element api="M:Symbiote.Core.Utility.GetSetting(System.String,System.String)" />
        </element>
        <element api="M:Symbiote.Core.Utility.ModifyService(System.String)" />
        <element api="M:Symbiote.Core.Utility.PrintLogo(NLog.Logger)" />
        <element api="M:Symbiote.Core.Utility.PrintModel(NLog.Logger,Symbiote.Core.Item,System.Int32)" />
        <element api="M:Symbiote.Core.Utility.SetLoggingLevel(System.String)" />
        <element api="M:Symbiote.Core.Utility.ShortGuid" />
        <element api="M:Symbiote.Core.Utility.SubArray``1(``0[],System.Int32,System.Int32)" />
        <element api="M:Symbiote.Core.Utility.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <element api="M:Symbiote.Core.Utility.UpdateSetting(System.String,System.String)" />
        <element api="M:Symbiote.Core.Utility.WildcardToRegex(System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" />
      </containers>
      <file name="f1c6df40-9bd4-6142-2caf-e40d5423eb8c" />
    </api>
    <api id="Overload:Symbiote.Core.Utility.GetSetting">
      <topicdata name="GetSetting" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetSetting" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Utility.GetSetting(System.String)" />
        <element api="M:Symbiote.Core.Utility.GetSetting(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <file name="4c49c251-9bdc-25b9-9044-cc2d5e7f4748" />
    </api>
    <api id="M:Symbiote.Core.Utility.Clone``1(System.Collections.Generic.IList{``0})">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.ICloneable" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="listToClone">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Symbiote.Core.Utility.Clone``1(System.Collections.Generic.IList{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Symbiote.Core.Utility.Clone``1(System.Collections.Generic.IList{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="0dfa755c-5935-2760-7619-73f18423293d" />
    </api>
    <api id="M:Symbiote.Core.Utility.ComputeHash(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ComputeHash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="salt" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <file name="1a1833ba-37e8-d0b5-33c1-8445af1a263c" />
    </api>
    <api id="M:Symbiote.Core.Utility.DisableLoggingLevel(NLog.LogLevel)">
      <topicdata group="api" />
      <apidata name="DisableLoggingLevel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <file name="0da67f0e-053b-7d87-e150-0bf8e868eab0" />
    </api>
    <api id="M:Symbiote.Core.Utility.GetAssemblyAttribute``1(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="GetAssemblyAttribute" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="ass">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Symbiote.Core.Utility.GetAssemblyAttribute``1(System.Reflection.Assembly)" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="a81d7a8c-d784-2e68-fddd-7c64cb1d4404" />
    </api>
    <api id="M:Symbiote.Core.Utility.GetSetting(System.String)">
      <topicdata group="api" />
      <apidata name="GetSetting" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" overload="Overload:Symbiote.Core.Utility.GetSetting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <file name="fe053471-44e4-a59e-8def-4a3de33093e3" />
    </api>
    <api id="M:Symbiote.Core.Utility.GetSetting(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetSetting" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" overload="Overload:Symbiote.Core.Utility.GetSetting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultSetting">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <file name="f98bac0a-7ff5-2eb4-aecf-3ce46a5820a2" />
    </api>
    <api id="M:Symbiote.Core.Utility.ModifyService(System.String)">
      <topicdata group="api" />
      <apidata name="ModifyService" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <file name="2d8e88a3-1191-0c6e-9f49-270c9c0bd249" />
    </api>
    <api id="M:Symbiote.Core.Utility.PrintLogo(NLog.Logger)">
      <topicdata group="api" />
      <apidata name="PrintLogo" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logger">
          <type api="T:NLog.Logger" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <file name="719aea21-0304-ff62-54b3-d88899e0c6ba" />
    </api>
    <api id="M:Symbiote.Core.Utility.PrintModel(NLog.Logger,Symbiote.Core.Item,System.Int32)">
      <topicdata group="api" />
      <apidata name="PrintModel" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logger">
          <type api="T:NLog.Logger" ref="true" />
        </parameter>
        <parameter name="root">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="indent">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <file name="b57df8c2-120a-9034-f433-40fb4b5f2f07" />
    </api>
    <api id="M:Symbiote.Core.Utility.SetLoggingLevel(System.String)">
      <topicdata group="api" />
      <apidata name="SetLoggingLevel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <file name="27117bca-02d3-4c40-2cfe-1e08ed58144d" />
    </api>
    <api id="M:Symbiote.Core.Utility.ShortGuid">
      <topicdata group="api" />
      <apidata name="ShortGuid" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <file name="32640224-eaf2-73d4-4ac1-9ab212520ebb" />
    </api>
    <api id="M:Symbiote.Core.Utility.SubArray``1(``0[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="SubArray" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Symbiote.Core.Utility.SubArray``1(``0[],System.Int32,System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Symbiote.Core.Utility.SubArray``1(``0[],System.Int32,System.Int32)" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ff23f5af-ef7a-6f1f-292f-d17183d3744e" />
    </api>
    <api id="M:Symbiote.Core.Utility.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="TakeLast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Symbiote.Core.Utility.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="N">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Symbiote.Core.Utility.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="d6edc071-f701-11bd-38db-4cc545fd0b41" />
    </api>
    <api id="M:Symbiote.Core.Utility.UpdateSetting(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateSetting" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <file name="6b776d35-2fd2-e62f-3894-2c18a73936d1" />
    </api>
    <api id="M:Symbiote.Core.Utility.WildcardToRegex(System.String)">
      <topicdata group="api" />
      <apidata name="WildcardToRegex" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pattern" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.Utility" ref="true" />
      </containers>
      <file name="9b690c50-9753-3520-864c-4aa916de70f6" />
    </api>
    <api id="T:Symbiote.Core.WindowsService">
      <topicdata group="api" />
      <apidata name="WindowsService" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Symbiote.Core.WindowsService.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ComponentModel" />
              <type api="T:System.ComponentModel.Component" ref="true" />
            </containers>
          </element>
          <element api="M:Symbiote.Core.WindowsService.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)">
          <apidata name="RequestAdditionalTime" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="milliseconds">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.OnContinue">
          <apidata name="OnContinue" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.OnPause">
          <apidata name="OnPause" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <apidata name="OnPowerEvent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="powerStatus">
              <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)">
          <apidata name="OnSessionChange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="changeDescription">
              <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.OnShutdown">
          <apidata name="OnShutdown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <apidata name="OnCustomCommand" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="command">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.Stop">
          <apidata name="Stop" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.ServiceMainCallback(System.Int32,System.IntPtr)">
          <apidata name="ServiceMainCallback" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="argCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="argPointer">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                <enumValue>
                  <field name="Never" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.AutoLog">
          <apidata name="AutoLog" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_AutoLog" />
          <setter name="set_AutoLog" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>SBAutoLog</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.ExitCode">
          <apidata name="ExitCode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ExitCode" />
          <setter name="set_ExitCode" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
          <apidata name="CanHandlePowerEvent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CanHandlePowerEvent" />
          <setter name="set_CanHandlePowerEvent" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent">
          <apidata name="CanHandleSessionChangeEvent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CanHandleSessionChangeEvent" />
          <setter name="set_CanHandleSessionChangeEvent" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <apidata name="CanPauseAndContinue" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CanPauseAndContinue" />
          <setter name="set_CanPauseAndContinue" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <apidata name="CanShutdown" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CanShutdown" />
          <setter name="set_CanShutdown" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.CanStop">
          <apidata name="CanStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CanStop" />
          <setter name="set_CanStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.EventLog">
          <apidata name="EventLog" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_EventLog" />
          <returns>
            <type api="T:System.Diagnostics.EventLog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.ServiceHandle">
          <apidata name="ServiceHandle" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ServiceHandle" />
          <returns>
            <type api="T:System.IntPtr" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                <enumValue>
                  <field name="Advanced" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.ServiceName">
          <apidata name="ServiceName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ServiceName" />
          <setter name="set_ServiceName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>SBServiceName</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.ComponentModel.Component.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Component.GetService(System.Type)">
          <apidata name="GetService" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="service">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Component.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents">
          <apidata name="CanRaiseEvents" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CanRaiseEvents" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.Events">
          <apidata name="Events" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Events" />
          <returns>
            <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.Site">
          <apidata name="Site" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Site" />
          <setter name="set_Site" />
          <returns>
            <type api="T:System.ComponentModel.ISite" ref="true" />
          </returns>
          <implements>
            <member api="P:System.ComponentModel.IComponent.Site">
              <type api="T:System.ComponentModel.IComponent" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ComponentModel.Component.Container">
          <apidata name="Container" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Container" />
          <returns>
            <type api="T:System.ComponentModel.IContainer" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ComponentModel.Component.DesignMode">
          <apidata name="DesignMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DesignMode" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="E:System.ComponentModel.Component.Disposed">
          <apidata name="Disposed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Disposed" />
          <remover name="remove_Disposed" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ComponentModel.IComponent.Disposed">
              <type api="T:System.ComponentModel.IComponent" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                <enumValue>
                  <field name="Advanced" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.WindowsService.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone">
            <apidata name="MemberwiseClone" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
            <apidata name="MemberwiseClone" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="cloneIdentity">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.MarshalByRefObject" ref="true" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.MarshalByRefObject" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.WindowsService.#ctor" />
        <element api="F:Symbiote.Core.WindowsService.components" />
        <element api="M:Symbiote.Core.WindowsService.InitializeComponent" />
        <element api="M:Symbiote.Core.WindowsService.OnStart(System.String[])" />
        <element api="M:Symbiote.Core.WindowsService.OnStop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="95167af5-d924-4336-0d51-647f542a6e84" />
    </api>
    <api id="Methods.T:Symbiote.Core.WindowsService">
      <topicdata name="WindowsService" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.WindowsService" />
      <apidata name="WindowsService" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <elements>
        <element api="Overload:Symbiote.Core.WindowsService.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ComponentModel" />
              <type api="T:System.ComponentModel.Component" ref="true" />
            </containers>
          </element>
          <element api="M:Symbiote.Core.WindowsService.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)">
          <apidata name="RequestAdditionalTime" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="milliseconds">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.OnContinue">
          <apidata name="OnContinue" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.OnPause">
          <apidata name="OnPause" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <apidata name="OnPowerEvent" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="powerStatus">
              <type api="T:System.ServiceProcess.PowerBroadcastStatus" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)">
          <apidata name="OnSessionChange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="changeDescription">
              <type api="T:System.ServiceProcess.SessionChangeDescription" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.OnShutdown">
          <apidata name="OnShutdown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <apidata name="OnCustomCommand" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="command">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.Stop">
          <apidata name="Stop" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceProcess.ServiceBase.ServiceMainCallback(System.Int32,System.IntPtr)">
          <apidata name="ServiceMainCallback" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="argCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="argPointer">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                <enumValue>
                  <field name="Never" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.ComponentModel.Component.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Finalize">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Component.GetService(System.Type)">
          <apidata name="GetService" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="service">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Component.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.WindowsService.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone">
            <apidata name="MemberwiseClone" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
            <apidata name="MemberwiseClone" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="cloneIdentity">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.MarshalByRefObject" ref="true" />
            </returns>
            <containers>
              <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.MarshalByRefObject" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.WindowsService.InitializeComponent" />
        <element api="M:Symbiote.Core.WindowsService.OnStart(System.String[])" />
        <element api="M:Symbiote.Core.WindowsService.OnStop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.WindowsService" />
      </containers>
      <file name="29a6ce38-7070-32a9-3b78-24694bc2a57c" />
    </api>
    <api id="Properties.T:Symbiote.Core.WindowsService">
      <topicdata name="WindowsService" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.WindowsService" />
      <apidata name="WindowsService" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <elements>
        <element api="P:System.ServiceProcess.ServiceBase.AutoLog">
          <apidata name="AutoLog" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_AutoLog" />
          <setter name="set_AutoLog" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>SBAutoLog</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.ExitCode">
          <apidata name="ExitCode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ExitCode" />
          <setter name="set_ExitCode" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
          <apidata name="CanHandlePowerEvent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CanHandlePowerEvent" />
          <setter name="set_CanHandlePowerEvent" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent">
          <apidata name="CanHandleSessionChangeEvent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CanHandleSessionChangeEvent" />
          <setter name="set_CanHandleSessionChangeEvent" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <apidata name="CanPauseAndContinue" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CanPauseAndContinue" />
          <setter name="set_CanPauseAndContinue" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <apidata name="CanShutdown" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CanShutdown" />
          <setter name="set_CanShutdown" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.CanStop">
          <apidata name="CanStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CanStop" />
          <setter name="set_CanStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.EventLog">
          <apidata name="EventLog" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_EventLog" />
          <returns>
            <type api="T:System.Diagnostics.EventLog" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.ServiceHandle">
          <apidata name="ServiceHandle" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ServiceHandle" />
          <returns>
            <type api="T:System.IntPtr" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                <enumValue>
                  <field name="Advanced" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ServiceProcess.ServiceBase.ServiceName">
          <apidata name="ServiceName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ServiceName" />
          <setter name="set_ServiceName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceProcess" module="System.ServiceProcess" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceProcess" />
            <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>SBServiceName</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents">
          <apidata name="CanRaiseEvents" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CanRaiseEvents" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.Events">
          <apidata name="Events" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Events" />
          <returns>
            <type api="T:System.ComponentModel.EventHandlerList" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="P:System.ComponentModel.Component.Site">
          <apidata name="Site" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Site" />
          <setter name="set_Site" />
          <returns>
            <type api="T:System.ComponentModel.ISite" ref="true" />
          </returns>
          <implements>
            <member api="P:System.ComponentModel.IComponent.Site">
              <type api="T:System.ComponentModel.IComponent" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ComponentModel.Component.Container">
          <apidata name="Container" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Container" />
          <returns>
            <type api="T:System.ComponentModel.IContainer" ref="true" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.ComponentModel.Component.DesignMode">
          <apidata name="DesignMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DesignMode" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
                <enumValue>
                  <field name="Hidden" />
                </enumValue>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.WindowsService" />
      </containers>
      <file name="d5e585ae-92c9-c06e-abf8-c7b9295ca2f1" />
    </api>
    <api id="Events.T:Symbiote.Core.WindowsService">
      <topicdata name="WindowsService" group="list" subgroup="Events" typeTopicId="T:Symbiote.Core.WindowsService" />
      <apidata name="WindowsService" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed">
          <apidata name="Disposed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Disposed" />
          <remover name="remove_Disposed" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ComponentModel.IComponent.Disposed">
              <type api="T:System.ComponentModel.IComponent" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
              <argument>
                <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                <enumValue>
                  <field name="Advanced" />
                </enumValue>
              </argument>
            </attribute>
          </attributes>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.WindowsService" />
      </containers>
      <file name="107f2fde-f0c5-2b75-bc7a-06d7f2403450" />
    </api>
    <api id="Fields.T:Symbiote.Core.WindowsService">
      <topicdata name="WindowsService" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.WindowsService" />
      <apidata name="WindowsService" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.WindowsService.components" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.WindowsService" />
      </containers>
      <file name="14404e9d-aa9a-7eb0-54a2-700321122db9" />
    </api>
    <api id="Overload:Symbiote.Core.WindowsService.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel" />
            <type api="T:System.ComponentModel.Component" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.WindowsService.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.WindowsService" ref="true" />
      </containers>
      <file name="98320f7b-f5ca-9ed2-683b-bb7696f091f1" />
    </api>
    <api id="M:Symbiote.Core.WindowsService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.WindowsService" ref="true" />
      </containers>
      <file name="0135e5ac-42b5-1ac5-6c4a-0649b293b099" />
    </api>
    <api id="F:Symbiote.Core.WindowsService.components">
      <topicdata group="api" />
      <apidata name="components" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.IContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.WindowsService" ref="true" />
      </containers>
      <file name="ed56c2cf-2226-0516-460a-c46ce10fc58c" />
    </api>
    <api id="M:Symbiote.Core.WindowsService.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Symbiote.Core.WindowsService.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.WindowsService" ref="true" />
      </containers>
      <file name="f5e4b1df-456c-219d-3ec9-d78802ea3a46" />
    </api>
    <api id="M:Symbiote.Core.WindowsService.InitializeComponent">
      <topicdata group="api" />
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.WindowsService" ref="true" />
      </containers>
      <file name="ab038532-a161-37bf-81b1-410bbdba1694" />
    </api>
    <api id="M:Symbiote.Core.WindowsService.OnStart(System.String[])">
      <topicdata group="api" />
      <apidata name="OnStart" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.WindowsService" ref="true" />
      </containers>
      <file name="e3d8bf78-d0f0-875d-f04e-fb9a21d45aac" />
    </api>
    <api id="M:Symbiote.Core.WindowsService.OnStop">
      <topicdata group="api" />
      <apidata name="OnStop" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceProcess.ServiceBase.OnStop">
          <type api="T:System.ServiceProcess.ServiceBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.WindowsService" ref="true" />
      </containers>
      <file name="b3de2147-037e-8485-8945-15d0db32db50" />
    </api>
    <api id="T:Symbiote.Core.xLogger">
      <topicdata group="api" />
      <apidata name="xLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:NLog.Logger" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:NLog.Logger.loggerType">
          <apidata name="loggerType" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="true" serialized="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="F:NLog.Logger.configuration">
          <apidata name="configuration" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="false" volatile="true" serialized="true" />
          <returns>
            <type api="T:NLog.Internal.LoggerConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="F:NLog.Logger.isTraceEnabled">
          <apidata name="isTraceEnabled" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="false" volatile="true" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="F:NLog.Logger.isDebugEnabled">
          <apidata name="isDebugEnabled" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="false" volatile="true" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="F:NLog.Logger.isInfoEnabled">
          <apidata name="isInfoEnabled" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="false" volatile="true" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="F:NLog.Logger.isWarnEnabled">
          <apidata name="isWarnEnabled" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="false" volatile="true" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="F:NLog.Logger.isErrorEnabled">
          <apidata name="isErrorEnabled" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="false" volatile="true" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="F:NLog.Logger.isFatalEnabled">
          <apidata name="isFatalEnabled" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="false" volatile="true" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="M:NLog.Logger.IsEnabled(NLog.LogLevel)">
          <apidata name="IsEnabled" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="level">
              <type api="T:NLog.LogLevel" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:NLog.ILoggerBase.IsEnabled(NLog.LogLevel)">
              <type api="T:NLog.ILoggerBase" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Log">
          <element api="M:NLog.Logger.Log(NLog.LogEventInfo)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="logEvent">
                <type api="T:NLog.LogEventInfo" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogEventInfo)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log(System.Type,NLog.LogEventInfo)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="wrapperType">
                <type api="T:System.Type" ref="true" />
              </parameter>
              <parameter name="logEvent">
                <type api="T:NLog.LogEventInfo" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(System.Type,NLog.LogEventInfo)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log``1(NLog.LogLevel,``0)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Log``1(NLog.LogLevel,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``1(NLog.LogLevel,``0)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,NLog.LogMessageGenerator)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,NLog.LogMessageGenerator)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.Object)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.Object)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log``1(NLog.LogLevel,System.IFormatProvider,``0)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Log``1(NLog.LogLevel,System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``1(NLog.LogLevel,System.IFormatProvider,``0)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Object[])">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Object[])">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Exception)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Exception)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use Log(LogLevel level, Exception exception, [Localizable(false)] string message, params object[] args)</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log``1(NLog.LogLevel,System.String,``0)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Log``1(NLog.LogLevel,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``1(NLog.LogLevel,System.String,``0)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.Object)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.Object)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Boolean)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Boolean)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Char)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Char)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Byte)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Byte)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.String)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.String)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Int32)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Int32)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Int64)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Int64)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Single)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Single)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Double)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Double)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Decimal)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Decimal)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Object)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Object)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.SByte)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.SByte)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.UInt32)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.UInt32)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.UInt64)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.UInt64)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.Exception,System.String,System.Object[])">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.Exception,System.String,System.Object[])">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log``1(NLog.LogLevel,System.IFormatProvider,System.String,``0)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Log``1(NLog.LogLevel,System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``1(NLog.LogLevel,System.IFormatProvider,System.String,``0)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log``2(NLog.LogLevel,System.String,``0,``1)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Log``2(NLog.LogLevel,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Log``2(NLog.LogLevel,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``2(NLog.LogLevel,System.String,``0,``1)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Object,System.Object)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Object,System.Object)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Boolean)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Char)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Char)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Byte)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Byte)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.String)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.String)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Int32)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Int32)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Int64)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Int64)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Single)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Single)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Double)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Double)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Decimal)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Object)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Object)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.SByte)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.SByte)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.UInt32)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.UInt32)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.UInt64)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.UInt64)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.Exception,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log``2(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Log``2(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Log``2(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``2(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log``3(NLog.LogLevel,System.String,``0,``1,``2)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Log``3(NLog.LogLevel,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Log``3(NLog.LogLevel,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Log``3(NLog.LogLevel,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``3(NLog.LogLevel,System.String,``0,``1,``2)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Object,System.Object,System.Object)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Object,System.Object,System.Object)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log``3(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Log``3(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Log``3(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Log``3(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``3(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1,``2)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:NLog.Logger.LogException(NLog.LogLevel,System.String,System.Exception)">
          <apidata name="LogException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="level">
              <type api="T:NLog.LogLevel" ref="true" />
            </parameter>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exception">
              <type api="T:System.Exception" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:NLog.ILoggerBase.LogException(NLog.LogLevel,System.String,System.Exception)">
              <type api="T:NLog.ILoggerBase" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Use Log(LogLevel, String, Exception) method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.WriteToTargets">
          <element api="M:NLog.Logger.WriteToTargets(NLog.LogEventInfo)">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="logEvent">
                <type api="T:NLog.LogEventInfo" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.WriteToTargets(System.Type,NLog.LogEventInfo)">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="wrapperType">
                <type api="T:System.Type" ref="true" />
              </parameter>
              <parameter name="logEvent">
                <type api="T:NLog.LogEventInfo" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.WriteToTargets(NLog.LogLevel,System.IFormatProvider,System.String)">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.WriteToTargets``1(NLog.LogLevel,System.IFormatProvider,``0)">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.WriteToTargets``1(NLog.LogLevel,System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.WriteToTargets(NLog.LogLevel,System.String,System.Exception)">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="ex">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use WriteToTargets(Exception ex, LogLevel level, IFormatProvider formatProvider, string message, object[] args) method instead.</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.WriteToTargets(NLog.LogLevel,System.String,System.Object[])">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.WriteToTargets(NLog.LogLevel,System.Exception,System.String,System.Object[])">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="ex">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.WriteToTargets(NLog.LogLevel,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.WriteToTargets(NLog.LogLevel,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="ex">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:NLog.Logger.PrepareLogEventInfo(NLog.LogEventInfo)">
          <apidata name="PrepareLogEventInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="logEvent">
              <type api="T:NLog.LogEventInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:NLog.LogEventInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Swallow">
          <element api="M:NLog.Logger.Swallow(System.Action)">
            <apidata name="Swallow" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="action">
                <type api="T:System.Action" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ISuppress.Swallow(System.Action)">
                <type api="T:NLog.ISuppress" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Swallow``1(System.Func{``0})">
            <apidata name="Swallow" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="func">
                <type api="T:System.Func`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="M:NLog.Logger.Swallow``1(System.Func{``0})" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <template name="T" index="0" api="M:NLog.Logger.Swallow``1(System.Func{``0})" />
            </returns>
            <implements>
              <member api="M:NLog.ISuppress.Swallow``1(System.Func{``0})">
                <type api="T:NLog.ISuppress" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Swallow``1(System.Func{``0},``0)">
            <apidata name="Swallow" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="func">
                <type api="T:System.Func`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="M:NLog.Logger.Swallow``1(System.Func{``0},``0)" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="fallback">
                <template name="T" index="0" api="M:NLog.Logger.Swallow``1(System.Func{``0},``0)" />
              </parameter>
            </parameters>
            <returns>
              <template name="T" index="0" api="M:NLog.Logger.Swallow``1(System.Func{``0},``0)" />
            </returns>
            <implements>
              <member api="M:NLog.ISuppress.Swallow``1(System.Func{``0},``0)">
                <type api="T:NLog.ISuppress" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.SwallowAsync">
          <element api="M:NLog.Logger.SwallowAsync(System.Threading.Tasks.Task)">
            <apidata name="SwallowAsync" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="task">
                <type api="T:System.Threading.Tasks.Task" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </returns>
            <implements>
              <member api="M:NLog.ISuppress.SwallowAsync(System.Threading.Tasks.Task)">
                <type api="T:NLog.ISuppress" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.SwallowAsync(System.Func{System.Threading.Tasks.Task})">
            <apidata name="SwallowAsync" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="asyncAction">
                <type api="T:System.Func`1" ref="true">
                  <specialization>
                    <type api="T:System.Threading.Tasks.Task" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </returns>
            <implements>
              <member api="M:NLog.ISuppress.SwallowAsync(System.Func{System.Threading.Tasks.Task})">
                <type api="T:NLog.ISuppress" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <apidata name="SwallowAsync" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TResult" />
            </templates>
            <parameters>
              <parameter name="asyncFunc">
                <type api="T:System.Func`1" ref="true">
                  <specialization>
                    <type api="T:System.Threading.Tasks.Task`1" ref="true">
                      <specialization>
                        <template name="TResult" index="0" api="M:NLog.Logger.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}})" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="M:NLog.Logger.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}})" />
                </specialization>
              </type>
            </returns>
            <implements>
              <member api="M:NLog.ISuppress.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}})">
                <type api="T:NLog.ISuppress" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}},``0)">
            <apidata name="SwallowAsync" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TResult" />
            </templates>
            <parameters>
              <parameter name="asyncFunc">
                <type api="T:System.Func`1" ref="true">
                  <specialization>
                    <type api="T:System.Threading.Tasks.Task`1" ref="true">
                      <specialization>
                        <template name="TResult" index="0" api="M:NLog.Logger.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}},``0)" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </parameter>
              <parameter name="fallback">
                <template name="TResult" index="0" api="M:NLog.Logger.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="M:NLog.Logger.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}},``0)" />
                </specialization>
              </type>
            </returns>
            <implements>
              <member api="M:NLog.ISuppress.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}},``0)">
                <type api="T:NLog.ISuppress" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:NLog.Logger.Initialize(System.String,NLog.Internal.LoggerConfiguration,NLog.LogFactory)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="assembly" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="loggerConfiguration">
              <type api="T:NLog.Internal.LoggerConfiguration" ref="true" />
            </parameter>
            <parameter name="factory">
              <type api="T:NLog.LogFactory" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="M:NLog.Logger.SetConfiguration(NLog.Internal.LoggerConfiguration)">
          <apidata name="SetConfiguration" group="member" subgroup="method" />
          <memberdata visibility="assembly" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="newConfiguration">
              <type api="T:NLog.Internal.LoggerConfiguration" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="M:NLog.Logger.GetTargetsForLevel(NLog.LogLevel)">
          <apidata name="GetTargetsForLevel" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="level">
              <type api="T:NLog.LogLevel" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:NLog.Internal.TargetWithFilterChain" ref="true" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Trace">
          <element api="M:NLog.Logger.Trace``1(``0)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Trace``1(``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``1(``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Trace(NLog.LogMessageGenerator)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(NLog.LogMessageGenerator)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Trace(System.String)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Trace(System.Object)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace``1(System.IFormatProvider,``0)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Trace``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``1(System.IFormatProvider,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Object[])">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Exception)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Exception)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use Trace(Exception exception, string message, params object[] args) method instead.</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace``1(System.String,``0)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Trace``1(System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``1(System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.Object)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Boolean)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Char)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Byte)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.String)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Int32)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Int64)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Single)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Double)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Decimal)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Object)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.SByte)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.UInt32)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.UInt64)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.Exception,System.String,System.Object[])">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.Exception,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Trace``1(System.IFormatProvider,System.String,``0)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Trace``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``1(System.IFormatProvider,System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace``2(System.String,``0,``1)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Trace``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Trace``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``2(System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Object,System.Object)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Char)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.String)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Single)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Double)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Object)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.SByte)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.UInt32)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.UInt64)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.Exception,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Trace``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Trace``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``2(System.IFormatProvider,System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace``3(System.String,``0,``1,``2)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Trace``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Trace``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Trace``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``3(System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Object,System.Object,System.Object)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Object,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Trace``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Trace``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Trace``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``3(System.IFormatProvider,System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="M:NLog.Logger.TraceException(System.String,System.Exception)">
          <apidata name="TraceException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exception">
              <type api="T:System.Exception" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:NLog.ILogger.TraceException(System.String,System.Exception)">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Use Trace(Exception exception, string message, params object[] args) method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Debug">
          <element api="M:NLog.Logger.Debug``1(``0)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Debug``1(``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``1(``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Debug(NLog.LogMessageGenerator)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(NLog.LogMessageGenerator)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Debug(System.String)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Debug(System.Object)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug``1(System.IFormatProvider,``0)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Debug``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``1(System.IFormatProvider,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Object[])">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Exception)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Exception)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use Debug(Exception exception, string message, params object[] args) method instead.</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug``1(System.String,``0)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Debug``1(System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``1(System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.Object)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Boolean)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Char)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Byte)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.String)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Int32)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Int64)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Single)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Double)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Decimal)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Object)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.SByte)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.UInt32)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.UInt64)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.Exception,System.String,System.Object[])">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.Exception,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Debug``1(System.IFormatProvider,System.String,``0)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Debug``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``1(System.IFormatProvider,System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug``2(System.String,``0,``1)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Debug``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Debug``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``2(System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Object,System.Object)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Char)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.String)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Single)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Double)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Object)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.SByte)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.UInt32)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.UInt64)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.Exception,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Debug``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Debug``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``2(System.IFormatProvider,System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug``3(System.String,``0,``1,``2)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Debug``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Debug``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Debug``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``3(System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Object,System.Object,System.Object)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Object,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Debug``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Debug``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Debug``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``3(System.IFormatProvider,System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="M:NLog.Logger.DebugException(System.String,System.Exception)">
          <apidata name="DebugException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exception">
              <type api="T:System.Exception" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:NLog.ILogger.DebugException(System.String,System.Exception)">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Use Debug(Exception exception, string message, params object[] args) method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Info">
          <element api="M:NLog.Logger.Info``1(``0)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Info``1(``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``1(``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Info(NLog.LogMessageGenerator)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(NLog.LogMessageGenerator)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Info(System.String)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Info(System.Object)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info``1(System.IFormatProvider,``0)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Info``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``1(System.IFormatProvider,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Object[])">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Exception)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Exception)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use Info(Exception exception, string message, params object[] args) method instead.</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info``1(System.String,``0)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Info``1(System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``1(System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.Object)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Boolean)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Char)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Byte)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.String)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Int32)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Int64)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Single)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Double)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Decimal)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Object)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.SByte)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.UInt32)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.UInt64)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.Exception,System.String,System.Object[])">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.Exception,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Info``1(System.IFormatProvider,System.String,``0)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Info``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``1(System.IFormatProvider,System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info``2(System.String,``0,``1)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Info``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Info``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``2(System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Object,System.Object)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Char)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.String)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Single)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Double)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Object)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.SByte)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.UInt32)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.UInt64)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.Exception,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Info``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Info``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``2(System.IFormatProvider,System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info``3(System.String,``0,``1,``2)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Info``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Info``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Info``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``3(System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Object,System.Object,System.Object)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Object,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Info``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Info``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Info``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``3(System.IFormatProvider,System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="M:NLog.Logger.InfoException(System.String,System.Exception)">
          <apidata name="InfoException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exception">
              <type api="T:System.Exception" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:NLog.ILogger.InfoException(System.String,System.Exception)">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Use Info(Exception exception, string message, params object[] args) method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Warn">
          <element api="M:NLog.Logger.Warn``1(``0)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Warn``1(``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``1(``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Warn(NLog.LogMessageGenerator)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(NLog.LogMessageGenerator)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Warn(System.String)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Warn(System.Object)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn``1(System.IFormatProvider,``0)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Warn``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``1(System.IFormatProvider,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Object[])">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Exception)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Exception)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use Warn(Exception exception, string message, params object[] args) method instead.</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn``1(System.String,``0)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Warn``1(System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``1(System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.Object)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Boolean)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Char)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Byte)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.String)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Int32)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Int64)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Single)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Double)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Decimal)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Object)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.SByte)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.UInt32)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.UInt64)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.Exception,System.String,System.Object[])">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.Exception,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Warn``1(System.IFormatProvider,System.String,``0)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Warn``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``1(System.IFormatProvider,System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn``2(System.String,``0,``1)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Warn``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Warn``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``2(System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Object,System.Object)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Char)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.String)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Single)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Double)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Object)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.SByte)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.UInt32)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.UInt64)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.Exception,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Warn``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Warn``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``2(System.IFormatProvider,System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn``3(System.String,``0,``1,``2)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Warn``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Warn``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Warn``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``3(System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Object,System.Object,System.Object)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Object,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Warn``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Warn``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Warn``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``3(System.IFormatProvider,System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="M:NLog.Logger.WarnException(System.String,System.Exception)">
          <apidata name="WarnException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exception">
              <type api="T:System.Exception" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:NLog.ILogger.WarnException(System.String,System.Exception)">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Use Warn(Exception exception, string message, params object[] args) method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Error">
          <element api="M:NLog.Logger.Error``1(``0)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Error``1(``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``1(``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Error(NLog.LogMessageGenerator)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(NLog.LogMessageGenerator)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Error(System.String)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Error(System.Object)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error``1(System.IFormatProvider,``0)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Error``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``1(System.IFormatProvider,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Object[])">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Exception)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Exception)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use Error(Exception exception, string message, params object[] args) method instead.</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error``1(System.String,``0)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Error``1(System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``1(System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.Object)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Boolean)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Char)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Byte)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.String)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Int32)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Int64)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Single)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Double)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Decimal)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Object)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.SByte)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.UInt32)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.UInt64)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.Exception,System.String,System.Object[])">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.Exception,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Error``1(System.IFormatProvider,System.String,``0)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Error``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``1(System.IFormatProvider,System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error``2(System.String,``0,``1)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Error``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Error``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``2(System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Object,System.Object)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Char)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.String)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Single)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Double)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Object)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.SByte)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.UInt32)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.UInt64)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.Exception,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Error``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Error``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``2(System.IFormatProvider,System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error``3(System.String,``0,``1,``2)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Error``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Error``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Error``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``3(System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Object,System.Object,System.Object)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Object,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Error``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Error``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Error``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``3(System.IFormatProvider,System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="M:NLog.Logger.ErrorException(System.String,System.Exception)">
          <apidata name="ErrorException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exception">
              <type api="T:System.Exception" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:NLog.ILogger.ErrorException(System.String,System.Exception)">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Use Error(Exception exception, string message, params object[] args) method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Fatal">
          <element api="M:NLog.Logger.Fatal``1(``0)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Fatal``1(``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``1(``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Fatal(NLog.LogMessageGenerator)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(NLog.LogMessageGenerator)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Fatal(System.Object)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal``1(System.IFormatProvider,``0)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Fatal``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``1(System.IFormatProvider,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Object[])">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Exception)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Exception)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use Fatal(Exception exception, string message, params object[] args) method instead.</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal``1(System.String,``0)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Fatal``1(System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``1(System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.Object)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Boolean)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Char)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Byte)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.String)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Int32)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Int64)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Single)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Double)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Decimal)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Object)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.SByte)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.UInt32)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.UInt64)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.Exception,System.String,System.Object[])">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.Exception,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Fatal``1(System.IFormatProvider,System.String,``0)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Fatal``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``1(System.IFormatProvider,System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal``2(System.String,``0,``1)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Fatal``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Fatal``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``2(System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Object,System.Object)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Char)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.String)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Single)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Double)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Object)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.SByte)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.UInt32)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.UInt64)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.Exception,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Fatal``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Fatal``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``2(System.IFormatProvider,System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal``3(System.String,``0,``1,``2)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Fatal``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Fatal``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Fatal``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``3(System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Object,System.Object,System.Object)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Object,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Fatal``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Fatal``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Fatal``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``3(System.IFormatProvider,System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="M:NLog.Logger.FatalException(System.String,System.Exception)">
          <apidata name="FatalException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exception">
              <type api="T:System.Exception" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:NLog.ILogger.FatalException(System.String,System.Exception)">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Use Fatal(Exception exception, string message, params object[] args) method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.ConditionalDebug">
          <element api="M:NLog.Logger.ConditionalDebug``1(``0)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.ConditionalDebug``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(NLog.LogMessageGenerator)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.Object)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug``1(System.IFormatProvider,``0)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.ConditionalDebug``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Object[])">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug``1(System.String,``0)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.ConditionalDebug``1(System.String,``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.Object)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Boolean)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Char)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Byte)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.String)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Int32)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Int64)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Single)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Double)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Decimal)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Object)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.Exception,System.String,System.Object[])">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug``1(System.IFormatProvider,System.String,``0)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.ConditionalDebug``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug``2(System.String,``0,``1)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalDebug``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalDebug``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Object,System.Object)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Char)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.String)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Single)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Double)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Object)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalDebug``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalDebug``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug``3(System.String,``0,``1,``2)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalDebug``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalDebug``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.ConditionalDebug``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Object,System.Object,System.Object)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalDebug``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalDebug``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.ConditionalDebug``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.ConditionalTrace">
          <element api="M:NLog.Logger.ConditionalTrace``1(``0)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.ConditionalTrace``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(NLog.LogMessageGenerator)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.Object)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace``1(System.IFormatProvider,``0)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.ConditionalTrace``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Object[])">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace``1(System.String,``0)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.ConditionalTrace``1(System.String,``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.Object)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Boolean)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Char)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Byte)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.String)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Int32)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Int64)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Single)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Double)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Decimal)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Object)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.Exception,System.String,System.Object[])">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace``1(System.IFormatProvider,System.String,``0)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.ConditionalTrace``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace``2(System.String,``0,``1)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalTrace``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalTrace``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Object,System.Object)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Char)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.String)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Single)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Double)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Object)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalTrace``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalTrace``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace``3(System.String,``0,``1,``2)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalTrace``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalTrace``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.ConditionalTrace``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Object,System.Object,System.Object)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalTrace``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalTrace``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.ConditionalTrace``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="P:NLog.Logger.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" set-visibility="private" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:NLog.ILoggerBase.Name">
              <type api="T:NLog.ILoggerBase" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="P:NLog.Logger.Factory">
          <apidata name="Factory" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" set-visibility="private" />
          <getter name="get_Factory" />
          <setter name="set_Factory" />
          <returns>
            <type api="T:NLog.LogFactory" ref="true" />
          </returns>
          <implements>
            <member api="P:NLog.ILoggerBase.Factory">
              <type api="T:NLog.ILoggerBase" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="P:NLog.Logger.IsTraceEnabled">
          <apidata name="IsTraceEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsTraceEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:NLog.ILogger.IsTraceEnabled">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="P:NLog.Logger.IsDebugEnabled">
          <apidata name="IsDebugEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsDebugEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:NLog.ILogger.IsDebugEnabled">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="P:NLog.Logger.IsInfoEnabled">
          <apidata name="IsInfoEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsInfoEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:NLog.ILogger.IsInfoEnabled">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="P:NLog.Logger.IsWarnEnabled">
          <apidata name="IsWarnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsWarnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:NLog.ILogger.IsWarnEnabled">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="P:NLog.Logger.IsErrorEnabled">
          <apidata name="IsErrorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsErrorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:NLog.ILogger.IsErrorEnabled">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="P:NLog.Logger.IsFatalEnabled">
          <apidata name="IsFatalEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsFatalEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:NLog.ILogger.IsFatalEnabled">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="E:NLog.Logger.LoggerReconfigured">
          <apidata name="LoggerReconfigured" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LoggerReconfigured" />
          <remover name="remove_LoggerReconfigured" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:NLog.ILoggerBase.LoggerReconfigured">
              <type api="T:NLog.ILoggerBase" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.xLogger.#ctor" />
        <element api="M:Symbiote.Core.xLogger.#cctor" />
        <element api="F:Symbiote.Core.xLogger.AutoPruneAge" />
        <element api="F:Symbiote.Core.xLogger.AutoPruneEnabled" />
        <element api="Overload:Symbiote.Core.xLogger.Checkpoint">
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.String[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.String[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)" />
        </element>
        <element api="F:Symbiote.Core.xLogger.CheckpointPrefix" />
        <element api="Overload:Symbiote.Core.xLogger.EnterMethod">
          <element api="M:Symbiote.Core.xLogger.EnterMethod(System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.EnterMethod(System.Boolean,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.EnterMethod(System.Object[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.EnterMethod(System.Object[],System.Boolean,System.String,System.String,System.Int32)" />
        </element>
        <element api="F:Symbiote.Core.xLogger.EnterPrefix" />
        <element api="Overload:Symbiote.Core.xLogger.Exception">
          <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.String[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.String[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)" />
        </element>
        <element api="F:Symbiote.Core.xLogger.ExceptionFooterPrefix" />
        <element api="F:Symbiote.Core.xLogger.ExceptionHeaderPrefix" />
        <element api="F:Symbiote.Core.xLogger.ExceptionLinePrefix" />
        <element api="F:Symbiote.Core.xLogger.ExceptionPrefix" />
        <element api="F:Symbiote.Core.xLogger.ExecutionDurationPrefix" />
        <element api="Overload:Symbiote.Core.xLogger.ExitMethod">
          <element api="M:Symbiote.Core.xLogger.ExitMethod(System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.ExitMethod(System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.ExitMethod(System.Object,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.ExitMethod(System.Object,System.Guid,System.String,System.String,System.Int32)" />
        </element>
        <element api="F:Symbiote.Core.xLogger.ExitPrefix" />
        <element api="F:Symbiote.Core.xLogger.FinalLinePrefix" />
        <element api="F:Symbiote.Core.xLogger.Footer" />
        <element api="M:Symbiote.Core.xLogger.GetCallingStackFrame" />
        <element api="M:Symbiote.Core.xLogger.GetColloquialTypeName(System.Type)" />
        <element api="M:Symbiote.Core.xLogger.GetExceptionSerialization(System.Exception)" />
        <element api="M:Symbiote.Core.xLogger.GetInvertedStackExcerpt" />
        <element api="M:Symbiote.Core.xLogger.GetMethodSignature(System.Reflection.MethodBase)" />
        <element api="M:Symbiote.Core.xLogger.GetObjectSerialization(System.Object)" />
        <element api="F:Symbiote.Core.xLogger.Header" />
        <element api="M:Symbiote.Core.xLogger.Heading(NLog.LogLevel,System.String)" />
        <element api="F:Symbiote.Core.xLogger.Indent" />
        <element api="F:Symbiote.Core.xLogger.InnerSeparator" />
        <element api="F:Symbiote.Core.xLogger.LinePrefix" />
        <element api="F:Symbiote.Core.xLogger.LinePrefixVariable" />
        <element api="M:Symbiote.Core.xLogger.LogExecutionDuration(NLog.LogLevel,System.String,System.Guid,System.Boolean,System.String)" />
        <element api="M:Symbiote.Core.xLogger.LogFooter(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.LogHeader(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.LogInnerSeparator(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.LogOuterSeparator(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.LogStackTrace(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.LogVariables(NLog.LogLevel,System.Object[],System.String[],System.String)" />
        <element api="Overload:Symbiote.Core.xLogger.Multiline">
          <element api="M:Symbiote.Core.xLogger.Multiline(NLog.LogLevel,System.String)" />
          <element api="M:Symbiote.Core.xLogger.Multiline(NLog.LogLevel,System.String[])" />
        </element>
        <element api="Overload:Symbiote.Core.xLogger.MultilineWrapped">
          <element api="M:Symbiote.Core.xLogger.MultilineWrapped(NLog.LogLevel,System.String)" />
          <element api="M:Symbiote.Core.xLogger.MultilineWrapped(NLog.LogLevel,System.String[])" />
        </element>
        <element api="M:Symbiote.Core.xLogger.Names(System.String[])" />
        <element api="F:Symbiote.Core.xLogger.OuterSeparator" />
        <element api="M:Symbiote.Core.xLogger.Params(System.Object[])" />
        <element api="F:Symbiote.Core.xLogger.PersistedMethodListLock" />
        <element api="P:Symbiote.Core.xLogger.PersistedMethods" />
        <element api="F:Symbiote.Core.xLogger.Prefix" />
        <element api="M:Symbiote.Core.xLogger.PrunePersistedMethods(System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Separator(NLog.LogLevel)" />
        <element api="Overload:Symbiote.Core.xLogger.StackTrace">
          <element api="M:Symbiote.Core.xLogger.StackTrace(System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.StackTrace(NLog.LogLevel,System.String,System.String,System.Int32)" />
        </element>
        <element api="F:Symbiote.Core.xLogger.StackTracePrefix" />
        <element api="M:Symbiote.Core.xLogger.SubHeading(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.SubSubHeading(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.Vars(System.Object[])" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
      </containers>
      <file name="c0051a5a-f29c-417d-eaee-b24fa8a5c5ba" />
    </api>
    <api id="Methods.T:Symbiote.Core.xLogger">
      <topicdata name="xLogger" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.xLogger" />
      <apidata name="xLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:NLog.Logger.IsEnabled(NLog.LogLevel)">
          <apidata name="IsEnabled" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="level">
              <type api="T:NLog.LogLevel" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:NLog.ILoggerBase.IsEnabled(NLog.LogLevel)">
              <type api="T:NLog.ILoggerBase" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Log">
          <element api="M:NLog.Logger.Log(NLog.LogEventInfo)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="logEvent">
                <type api="T:NLog.LogEventInfo" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogEventInfo)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log(System.Type,NLog.LogEventInfo)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="wrapperType">
                <type api="T:System.Type" ref="true" />
              </parameter>
              <parameter name="logEvent">
                <type api="T:NLog.LogEventInfo" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(System.Type,NLog.LogEventInfo)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log``1(NLog.LogLevel,``0)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Log``1(NLog.LogLevel,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``1(NLog.LogLevel,``0)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,NLog.LogMessageGenerator)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,NLog.LogMessageGenerator)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.Object)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.Object)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log``1(NLog.LogLevel,System.IFormatProvider,``0)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Log``1(NLog.LogLevel,System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``1(NLog.LogLevel,System.IFormatProvider,``0)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Object[])">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Object[])">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Exception)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Exception)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use Log(LogLevel level, Exception exception, [Localizable(false)] string message, params object[] args)</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log``1(NLog.LogLevel,System.String,``0)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Log``1(NLog.LogLevel,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``1(NLog.LogLevel,System.String,``0)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.Object)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.Object)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Boolean)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Boolean)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Char)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Char)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Byte)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Byte)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.String)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.String)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Int32)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Int32)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Int64)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Int64)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Single)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Single)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Double)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Double)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Decimal)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Decimal)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Object)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Object)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.SByte)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.SByte)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.UInt32)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.UInt32)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.UInt64)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.UInt64)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.Exception,System.String,System.Object[])">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.Exception,System.String,System.Object[])">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log``1(NLog.LogLevel,System.IFormatProvider,System.String,``0)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Log``1(NLog.LogLevel,System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``1(NLog.LogLevel,System.IFormatProvider,System.String,``0)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log``2(NLog.LogLevel,System.String,``0,``1)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Log``2(NLog.LogLevel,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Log``2(NLog.LogLevel,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``2(NLog.LogLevel,System.String,``0,``1)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Object,System.Object)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Object,System.Object)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Boolean)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Char)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Char)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Byte)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Byte)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.String)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.String)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Int32)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Int32)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Int64)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Int64)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Single)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Single)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Double)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Double)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Decimal)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Object)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.Object)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.SByte)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.SByte)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.UInt32)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.UInt32)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.UInt64)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.IFormatProvider,System.String,System.UInt64)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.Exception,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log``2(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Log``2(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Log``2(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``2(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Log``3(NLog.LogLevel,System.String,``0,``1,``2)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Log``3(NLog.LogLevel,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Log``3(NLog.LogLevel,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Log``3(NLog.LogLevel,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``3(NLog.LogLevel,System.String,``0,``1,``2)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log(NLog.LogLevel,System.String,System.Object,System.Object,System.Object)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log(NLog.LogLevel,System.String,System.Object,System.Object,System.Object)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Log``3(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="Log" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Log``3(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Log``3(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Log``3(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILoggerBase.Log``3(NLog.LogLevel,System.IFormatProvider,System.String,``0,``1,``2)">
                <type api="T:NLog.ILoggerBase" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:NLog.Logger.LogException(NLog.LogLevel,System.String,System.Exception)">
          <apidata name="LogException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="level">
              <type api="T:NLog.LogLevel" ref="true" />
            </parameter>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exception">
              <type api="T:System.Exception" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:NLog.ILoggerBase.LogException(NLog.LogLevel,System.String,System.Exception)">
              <type api="T:NLog.ILoggerBase" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Use Log(LogLevel, String, Exception) method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.WriteToTargets">
          <element api="M:NLog.Logger.WriteToTargets(NLog.LogEventInfo)">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="logEvent">
                <type api="T:NLog.LogEventInfo" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.WriteToTargets(System.Type,NLog.LogEventInfo)">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="wrapperType">
                <type api="T:System.Type" ref="true" />
              </parameter>
              <parameter name="logEvent">
                <type api="T:NLog.LogEventInfo" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.WriteToTargets(NLog.LogLevel,System.IFormatProvider,System.String)">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.WriteToTargets``1(NLog.LogLevel,System.IFormatProvider,``0)">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.WriteToTargets``1(NLog.LogLevel,System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.WriteToTargets(NLog.LogLevel,System.String,System.Exception)">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="ex">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use WriteToTargets(Exception ex, LogLevel level, IFormatProvider formatProvider, string message, object[] args) method instead.</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.WriteToTargets(NLog.LogLevel,System.String,System.Object[])">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.WriteToTargets(NLog.LogLevel,System.Exception,System.String,System.Object[])">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="ex">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.WriteToTargets(NLog.LogLevel,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.WriteToTargets(NLog.LogLevel,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="WriteToTargets" group="member" subgroup="method" />
            <memberdata visibility="assembly" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="level">
                <type api="T:NLog.LogLevel" ref="true" />
              </parameter>
              <parameter name="ex">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:NLog.Logger.PrepareLogEventInfo(NLog.LogEventInfo)">
          <apidata name="PrepareLogEventInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="logEvent">
              <type api="T:NLog.LogEventInfo" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:NLog.LogEventInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Swallow">
          <element api="M:NLog.Logger.Swallow(System.Action)">
            <apidata name="Swallow" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="action">
                <type api="T:System.Action" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ISuppress.Swallow(System.Action)">
                <type api="T:NLog.ISuppress" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Swallow``1(System.Func{``0})">
            <apidata name="Swallow" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="func">
                <type api="T:System.Func`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="M:NLog.Logger.Swallow``1(System.Func{``0})" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <template name="T" index="0" api="M:NLog.Logger.Swallow``1(System.Func{``0})" />
            </returns>
            <implements>
              <member api="M:NLog.ISuppress.Swallow``1(System.Func{``0})">
                <type api="T:NLog.ISuppress" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Swallow``1(System.Func{``0},``0)">
            <apidata name="Swallow" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="func">
                <type api="T:System.Func`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="M:NLog.Logger.Swallow``1(System.Func{``0},``0)" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="fallback">
                <template name="T" index="0" api="M:NLog.Logger.Swallow``1(System.Func{``0},``0)" />
              </parameter>
            </parameters>
            <returns>
              <template name="T" index="0" api="M:NLog.Logger.Swallow``1(System.Func{``0},``0)" />
            </returns>
            <implements>
              <member api="M:NLog.ISuppress.Swallow``1(System.Func{``0},``0)">
                <type api="T:NLog.ISuppress" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.SwallowAsync">
          <element api="M:NLog.Logger.SwallowAsync(System.Threading.Tasks.Task)">
            <apidata name="SwallowAsync" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="task">
                <type api="T:System.Threading.Tasks.Task" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </returns>
            <implements>
              <member api="M:NLog.ISuppress.SwallowAsync(System.Threading.Tasks.Task)">
                <type api="T:NLog.ISuppress" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.SwallowAsync(System.Func{System.Threading.Tasks.Task})">
            <apidata name="SwallowAsync" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="asyncAction">
                <type api="T:System.Func`1" ref="true">
                  <specialization>
                    <type api="T:System.Threading.Tasks.Task" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </returns>
            <implements>
              <member api="M:NLog.ISuppress.SwallowAsync(System.Func{System.Threading.Tasks.Task})">
                <type api="T:NLog.ISuppress" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <apidata name="SwallowAsync" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TResult" />
            </templates>
            <parameters>
              <parameter name="asyncFunc">
                <type api="T:System.Func`1" ref="true">
                  <specialization>
                    <type api="T:System.Threading.Tasks.Task`1" ref="true">
                      <specialization>
                        <template name="TResult" index="0" api="M:NLog.Logger.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}})" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="M:NLog.Logger.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}})" />
                </specialization>
              </type>
            </returns>
            <implements>
              <member api="M:NLog.ISuppress.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}})">
                <type api="T:NLog.ISuppress" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}},``0)">
            <apidata name="SwallowAsync" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TResult" />
            </templates>
            <parameters>
              <parameter name="asyncFunc">
                <type api="T:System.Func`1" ref="true">
                  <specialization>
                    <type api="T:System.Threading.Tasks.Task`1" ref="true">
                      <specialization>
                        <template name="TResult" index="0" api="M:NLog.Logger.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}},``0)" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </parameter>
              <parameter name="fallback">
                <template name="TResult" index="0" api="M:NLog.Logger.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="M:NLog.Logger.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}},``0)" />
                </specialization>
              </type>
            </returns>
            <implements>
              <member api="M:NLog.ISuppress.SwallowAsync``1(System.Func{System.Threading.Tasks.Task{``0}},``0)">
                <type api="T:NLog.ISuppress" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:NLog.Logger.Initialize(System.String,NLog.Internal.LoggerConfiguration,NLog.LogFactory)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="assembly" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="loggerConfiguration">
              <type api="T:NLog.Internal.LoggerConfiguration" ref="true" />
            </parameter>
            <parameter name="factory">
              <type api="T:NLog.LogFactory" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="M:NLog.Logger.SetConfiguration(NLog.Internal.LoggerConfiguration)">
          <apidata name="SetConfiguration" group="member" subgroup="method" />
          <memberdata visibility="assembly" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="newConfiguration">
              <type api="T:NLog.Internal.LoggerConfiguration" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="M:NLog.Logger.GetTargetsForLevel(NLog.LogLevel)">
          <apidata name="GetTargetsForLevel" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="level">
              <type api="T:NLog.LogLevel" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:NLog.Internal.TargetWithFilterChain" ref="true" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Trace">
          <element api="M:NLog.Logger.Trace``1(``0)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Trace``1(``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``1(``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Trace(NLog.LogMessageGenerator)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(NLog.LogMessageGenerator)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Trace(System.String)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Trace(System.Object)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace``1(System.IFormatProvider,``0)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Trace``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``1(System.IFormatProvider,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Object[])">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Exception)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Exception)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use Trace(Exception exception, string message, params object[] args) method instead.</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace``1(System.String,``0)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Trace``1(System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``1(System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.Object)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Boolean)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Char)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Byte)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.String)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Int32)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Int64)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Single)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Double)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Decimal)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Object)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.SByte)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.UInt32)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.UInt64)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.Exception,System.String,System.Object[])">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.Exception,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Trace``1(System.IFormatProvider,System.String,``0)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Trace``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``1(System.IFormatProvider,System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace``2(System.String,``0,``1)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Trace``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Trace``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``2(System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Object,System.Object)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Char)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.String)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Single)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Double)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.Object)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.SByte)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.UInt32)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.IFormatProvider,System.String,System.UInt64)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.IFormatProvider,System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.Exception,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Trace``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Trace``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``2(System.IFormatProvider,System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace``3(System.String,``0,``1,``2)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Trace``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Trace``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Trace``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``3(System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace(System.String,System.Object,System.Object,System.Object)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace(System.String,System.Object,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Trace``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="Trace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Trace``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Trace``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Trace``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Trace``3(System.IFormatProvider,System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="M:NLog.Logger.TraceException(System.String,System.Exception)">
          <apidata name="TraceException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exception">
              <type api="T:System.Exception" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:NLog.ILogger.TraceException(System.String,System.Exception)">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Use Trace(Exception exception, string message, params object[] args) method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Debug">
          <element api="M:NLog.Logger.Debug``1(``0)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Debug``1(``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``1(``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Debug(NLog.LogMessageGenerator)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(NLog.LogMessageGenerator)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Debug(System.String)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Debug(System.Object)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug``1(System.IFormatProvider,``0)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Debug``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``1(System.IFormatProvider,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Object[])">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Exception)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Exception)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use Debug(Exception exception, string message, params object[] args) method instead.</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug``1(System.String,``0)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Debug``1(System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``1(System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.Object)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Boolean)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Char)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Byte)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.String)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Int32)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Int64)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Single)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Double)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Decimal)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Object)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.SByte)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.UInt32)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.UInt64)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.Exception,System.String,System.Object[])">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.Exception,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Debug``1(System.IFormatProvider,System.String,``0)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Debug``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``1(System.IFormatProvider,System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug``2(System.String,``0,``1)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Debug``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Debug``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``2(System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Object,System.Object)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Char)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.String)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Single)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Double)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.Object)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.SByte)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.UInt32)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.IFormatProvider,System.String,System.UInt64)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.IFormatProvider,System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.Exception,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Debug``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Debug``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``2(System.IFormatProvider,System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug``3(System.String,``0,``1,``2)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Debug``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Debug``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Debug``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``3(System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug(System.String,System.Object,System.Object,System.Object)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug(System.String,System.Object,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Debug``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="Debug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Debug``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Debug``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Debug``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Debug``3(System.IFormatProvider,System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="M:NLog.Logger.DebugException(System.String,System.Exception)">
          <apidata name="DebugException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exception">
              <type api="T:System.Exception" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:NLog.ILogger.DebugException(System.String,System.Exception)">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Use Debug(Exception exception, string message, params object[] args) method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Info">
          <element api="M:NLog.Logger.Info``1(``0)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Info``1(``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``1(``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Info(NLog.LogMessageGenerator)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(NLog.LogMessageGenerator)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Info(System.String)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Info(System.Object)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info``1(System.IFormatProvider,``0)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Info``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``1(System.IFormatProvider,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Object[])">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Exception)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Exception)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use Info(Exception exception, string message, params object[] args) method instead.</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info``1(System.String,``0)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Info``1(System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``1(System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.Object)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Boolean)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Char)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Byte)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.String)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Int32)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Int64)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Single)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Double)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Decimal)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Object)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.SByte)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.UInt32)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.UInt64)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.Exception,System.String,System.Object[])">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.Exception,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Info``1(System.IFormatProvider,System.String,``0)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Info``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``1(System.IFormatProvider,System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info``2(System.String,``0,``1)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Info``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Info``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``2(System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Object,System.Object)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Char)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.String)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Single)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Double)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.Object)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.SByte)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.UInt32)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.IFormatProvider,System.String,System.UInt64)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.IFormatProvider,System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.Exception,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Info``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Info``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``2(System.IFormatProvider,System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info``3(System.String,``0,``1,``2)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Info``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Info``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Info``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``3(System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info(System.String,System.Object,System.Object,System.Object)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info(System.String,System.Object,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Info``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="Info" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Info``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Info``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Info``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Info``3(System.IFormatProvider,System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="M:NLog.Logger.InfoException(System.String,System.Exception)">
          <apidata name="InfoException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exception">
              <type api="T:System.Exception" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:NLog.ILogger.InfoException(System.String,System.Exception)">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Use Info(Exception exception, string message, params object[] args) method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Warn">
          <element api="M:NLog.Logger.Warn``1(``0)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Warn``1(``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``1(``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Warn(NLog.LogMessageGenerator)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(NLog.LogMessageGenerator)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Warn(System.String)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Warn(System.Object)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn``1(System.IFormatProvider,``0)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Warn``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``1(System.IFormatProvider,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Object[])">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Exception)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Exception)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use Warn(Exception exception, string message, params object[] args) method instead.</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn``1(System.String,``0)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Warn``1(System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``1(System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.Object)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Boolean)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Char)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Byte)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.String)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Int32)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Int64)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Single)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Double)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Decimal)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Object)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.SByte)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.UInt32)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.UInt64)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.Exception,System.String,System.Object[])">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.Exception,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Warn``1(System.IFormatProvider,System.String,``0)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Warn``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``1(System.IFormatProvider,System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn``2(System.String,``0,``1)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Warn``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Warn``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``2(System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Object,System.Object)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Char)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.String)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Single)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Double)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.Object)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.SByte)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.UInt32)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.IFormatProvider,System.String,System.UInt64)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.IFormatProvider,System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.Exception,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Warn``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Warn``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``2(System.IFormatProvider,System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn``3(System.String,``0,``1,``2)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Warn``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Warn``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Warn``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``3(System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn(System.String,System.Object,System.Object,System.Object)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn(System.String,System.Object,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Warn``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="Warn" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Warn``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Warn``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Warn``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Warn``3(System.IFormatProvider,System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="M:NLog.Logger.WarnException(System.String,System.Exception)">
          <apidata name="WarnException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exception">
              <type api="T:System.Exception" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:NLog.ILogger.WarnException(System.String,System.Exception)">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Use Warn(Exception exception, string message, params object[] args) method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Error">
          <element api="M:NLog.Logger.Error``1(``0)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Error``1(``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``1(``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Error(NLog.LogMessageGenerator)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(NLog.LogMessageGenerator)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Error(System.String)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Error(System.Object)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error``1(System.IFormatProvider,``0)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Error``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``1(System.IFormatProvider,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Object[])">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Exception)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Exception)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use Error(Exception exception, string message, params object[] args) method instead.</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error``1(System.String,``0)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Error``1(System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``1(System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.Object)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Boolean)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Char)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Byte)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.String)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Int32)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Int64)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Single)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Double)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Decimal)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Object)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.SByte)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.UInt32)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.UInt64)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.Exception,System.String,System.Object[])">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.Exception,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Error``1(System.IFormatProvider,System.String,``0)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Error``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``1(System.IFormatProvider,System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error``2(System.String,``0,``1)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Error``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Error``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``2(System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Object,System.Object)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Char)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.String)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Single)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Double)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.Object)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.SByte)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.UInt32)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.IFormatProvider,System.String,System.UInt64)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.IFormatProvider,System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.Exception,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Error``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Error``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``2(System.IFormatProvider,System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error``3(System.String,``0,``1,``2)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Error``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Error``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Error``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``3(System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error(System.String,System.Object,System.Object,System.Object)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error(System.String,System.Object,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Error``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="Error" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Error``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Error``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Error``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Error``3(System.IFormatProvider,System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="M:NLog.Logger.ErrorException(System.String,System.Exception)">
          <apidata name="ErrorException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exception">
              <type api="T:System.Exception" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:NLog.ILogger.ErrorException(System.String,System.Exception)">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Use Error(Exception exception, string message, params object[] args) method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Fatal">
          <element api="M:NLog.Logger.Fatal``1(``0)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Fatal``1(``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``1(``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Fatal(NLog.LogMessageGenerator)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(NLog.LogMessageGenerator)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Fatal(System.Object)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal``1(System.IFormatProvider,``0)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.Fatal``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``1(System.IFormatProvider,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Object[])">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Exception)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Exception)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ObsoleteAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Use Fatal(Exception exception, string message, params object[] args) method instead.</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal``1(System.String,``0)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Fatal``1(System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``1(System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.Object)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Boolean)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Char)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Byte)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.String)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Int32)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Int64)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Single)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Double)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Decimal)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Object)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.SByte)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.UInt32)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.UInt64)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.Exception,System.String,System.Object[])">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.Exception,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
          </element>
          <element api="M:NLog.Logger.Fatal``1(System.IFormatProvider,System.String,``0)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.Fatal``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``1(System.IFormatProvider,System.String,``0)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal``2(System.String,``0,``1)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Fatal``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Fatal``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``2(System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Object,System.Object)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Boolean)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Char)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Char)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Byte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.String)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.String)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Int32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Int64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Single)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Single)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Double)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Double)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Decimal)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.Object)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.SByte)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.SByte" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.SByte)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.UInt32)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt32" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.UInt32)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.IFormatProvider,System.String,System.UInt64)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.UInt64" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.IFormatProvider,System.String,System.UInt64)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.CLSCompliantAttribute" ref="true" />
                <argument>
                  <type api="T:System.Boolean" ref="false" />
                  <value>False</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.Exception,System.IFormatProvider,System.String,System.Object[])">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Fatal``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Fatal``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``2(System.IFormatProvider,System.String,``0,``1)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal``3(System.String,``0,``1,``2)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Fatal``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Fatal``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Fatal``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``3(System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal(System.String,System.Object,System.Object,System.Object)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal(System.String,System.Object,System.Object,System.Object)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
                <argument>
                  <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
                  <enumValue>
                    <field name="Never" />
                  </enumValue>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.Fatal``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="Fatal" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.Fatal``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.Fatal``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.Fatal``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:NLog.ILogger.Fatal``3(System.IFormatProvider,System.String,``0,``1,``2)">
                <type api="T:NLog.ILogger" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="M:NLog.Logger.FatalException(System.String,System.Exception)">
          <apidata name="FatalException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="message">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exception">
              <type api="T:System.Exception" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:NLog.ILogger.FatalException(System.String,System.Exception)">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Use Fatal(Exception exception, string message, params object[] args) method instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.ConditionalDebug">
          <element api="M:NLog.Logger.ConditionalDebug``1(``0)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.ConditionalDebug``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(NLog.LogMessageGenerator)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.Object)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug``1(System.IFormatProvider,``0)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.ConditionalDebug``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Object[])">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug``1(System.String,``0)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.ConditionalDebug``1(System.String,``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.Object)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Boolean)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Char)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Byte)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.String)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Int32)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Int64)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Single)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Double)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Decimal)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Object)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.Exception,System.String,System.Object[])">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug``1(System.IFormatProvider,System.String,``0)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.ConditionalDebug``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug``2(System.String,``0,``1)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalDebug``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalDebug``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Object,System.Object)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Char)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.String)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Single)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Double)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.IFormatProvider,System.String,System.Object)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalDebug``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalDebug``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug``3(System.String,``0,``1,``2)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalDebug``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalDebug``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.ConditionalDebug``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug(System.String,System.Object,System.Object,System.Object)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalDebug``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="ConditionalDebug" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalDebug``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalDebug``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.ConditionalDebug``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.ConditionalTrace">
          <element api="M:NLog.Logger.ConditionalTrace``1(``0)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.ConditionalTrace``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(NLog.LogMessageGenerator)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="messageFunc">
                <type api="T:NLog.LogMessageGenerator" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.Object)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace``1(System.IFormatProvider,``0)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:NLog.Logger.ConditionalTrace``1(System.IFormatProvider,``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Object[])">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace``1(System.String,``0)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.ConditionalTrace``1(System.String,``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.Object)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="value">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Boolean)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Char)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Byte)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.String)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Int32)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Int64)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Single)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Double)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Decimal)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Object)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.Exception,System.String,System.Object[])">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Object[])">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace``1(System.IFormatProvider,System.String,``0)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <template name="TArgument" index="0" api="M:NLog.Logger.ConditionalTrace``1(System.IFormatProvider,System.String,``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace``2(System.String,``0,``1)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalTrace``2(System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalTrace``2(System.String,``0,``1)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Object,System.Object)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Boolean)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Char)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Char" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Byte)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Byte" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.String)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Int32)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int32" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Int64)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Int64" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Single)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Single" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Double)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Double" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Decimal)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Decimal" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.IFormatProvider,System.String,System.Object)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="args" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Object" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace``2(System.IFormatProvider,System.String,``0,``1)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalTrace``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalTrace``2(System.IFormatProvider,System.String,``0,``1)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace``3(System.String,``0,``1,``2)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalTrace``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalTrace``3(System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.ConditionalTrace``3(System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace(System.String,System.Object,System.Object,System.Object)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="arg1">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg2">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="arg3">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
          <element api="M:NLog.Logger.ConditionalTrace``3(System.IFormatProvider,System.String,``0,``1,``2)">
            <apidata name="ConditionalTrace" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TArgument1" />
              <template name="TArgument2" />
              <template name="TArgument3" />
            </templates>
            <parameters>
              <parameter name="formatProvider">
                <type api="T:System.IFormatProvider" ref="true" />
              </parameter>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="argument1">
                <template name="TArgument1" index="0" api="M:NLog.Logger.ConditionalTrace``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument2">
                <template name="TArgument2" index="1" api="M:NLog.Logger.ConditionalTrace``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
              <parameter name="argument3">
                <template name="TArgument3" index="2" api="M:NLog.Logger.ConditionalTrace``3(System.IFormatProvider,System.String,``0,``1,``2)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:NLog" />
              <type api="T:NLog.Logger" ref="true" />
            </containers>
            <attributes>
              <attribute>
                <type api="T:JetBrains.Annotations.StringFormatMethodAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>message</value>
                </argument>
              </attribute>
              <attribute>
                <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>DEBUG</value>
                </argument>
              </attribute>
            </attributes>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Checkpoint">
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.String[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.String[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)" />
        </element>
        <element api="Overload:Symbiote.Core.xLogger.EnterMethod">
          <element api="M:Symbiote.Core.xLogger.EnterMethod(System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.EnterMethod(System.Boolean,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.EnterMethod(System.Object[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.EnterMethod(System.Object[],System.Boolean,System.String,System.String,System.Int32)" />
        </element>
        <element api="Overload:Symbiote.Core.xLogger.Exception">
          <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.String[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.String[],System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)" />
        </element>
        <element api="Overload:Symbiote.Core.xLogger.ExitMethod">
          <element api="M:Symbiote.Core.xLogger.ExitMethod(System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.ExitMethod(System.Guid,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.ExitMethod(System.Object,System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.ExitMethod(System.Object,System.Guid,System.String,System.String,System.Int32)" />
        </element>
        <element api="M:Symbiote.Core.xLogger.GetCallingStackFrame" />
        <element api="M:Symbiote.Core.xLogger.GetColloquialTypeName(System.Type)" />
        <element api="M:Symbiote.Core.xLogger.GetExceptionSerialization(System.Exception)" />
        <element api="M:Symbiote.Core.xLogger.GetInvertedStackExcerpt" />
        <element api="M:Symbiote.Core.xLogger.GetMethodSignature(System.Reflection.MethodBase)" />
        <element api="M:Symbiote.Core.xLogger.GetObjectSerialization(System.Object)" />
        <element api="M:Symbiote.Core.xLogger.Heading(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.LogExecutionDuration(NLog.LogLevel,System.String,System.Guid,System.Boolean,System.String)" />
        <element api="M:Symbiote.Core.xLogger.LogFooter(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.LogHeader(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.LogInnerSeparator(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.LogOuterSeparator(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.LogStackTrace(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.LogVariables(NLog.LogLevel,System.Object[],System.String[],System.String)" />
        <element api="Overload:Symbiote.Core.xLogger.Multiline">
          <element api="M:Symbiote.Core.xLogger.Multiline(NLog.LogLevel,System.String)" />
          <element api="M:Symbiote.Core.xLogger.Multiline(NLog.LogLevel,System.String[])" />
        </element>
        <element api="Overload:Symbiote.Core.xLogger.MultilineWrapped">
          <element api="M:Symbiote.Core.xLogger.MultilineWrapped(NLog.LogLevel,System.String)" />
          <element api="M:Symbiote.Core.xLogger.MultilineWrapped(NLog.LogLevel,System.String[])" />
        </element>
        <element api="M:Symbiote.Core.xLogger.Names(System.String[])" />
        <element api="M:Symbiote.Core.xLogger.Params(System.Object[])" />
        <element api="M:Symbiote.Core.xLogger.PrunePersistedMethods(System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Separator(NLog.LogLevel)" />
        <element api="Overload:Symbiote.Core.xLogger.StackTrace">
          <element api="M:Symbiote.Core.xLogger.StackTrace(System.String,System.String,System.Int32)" />
          <element api="M:Symbiote.Core.xLogger.StackTrace(NLog.LogLevel,System.String,System.String,System.Int32)" />
        </element>
        <element api="M:Symbiote.Core.xLogger.SubHeading(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.SubSubHeading(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.Vars(System.Object[])" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" />
      </containers>
      <file name="62f9b7f7-83bf-6548-18d1-28c2f7f3cce5" />
    </api>
    <api id="Properties.T:Symbiote.Core.xLogger">
      <topicdata name="xLogger" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.xLogger" />
      <apidata name="xLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:NLog.Logger.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" set-visibility="private" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:NLog.ILoggerBase.Name">
              <type api="T:NLog.ILoggerBase" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="P:NLog.Logger.Factory">
          <apidata name="Factory" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" set-visibility="private" />
          <getter name="get_Factory" />
          <setter name="set_Factory" />
          <returns>
            <type api="T:NLog.LogFactory" ref="true" />
          </returns>
          <implements>
            <member api="P:NLog.ILoggerBase.Factory">
              <type api="T:NLog.ILoggerBase" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="P:NLog.Logger.IsTraceEnabled">
          <apidata name="IsTraceEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsTraceEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:NLog.ILogger.IsTraceEnabled">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="P:NLog.Logger.IsDebugEnabled">
          <apidata name="IsDebugEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsDebugEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:NLog.ILogger.IsDebugEnabled">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="P:NLog.Logger.IsInfoEnabled">
          <apidata name="IsInfoEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsInfoEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:NLog.ILogger.IsInfoEnabled">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="P:NLog.Logger.IsWarnEnabled">
          <apidata name="IsWarnEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsWarnEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:NLog.ILogger.IsWarnEnabled">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="P:NLog.Logger.IsErrorEnabled">
          <apidata name="IsErrorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsErrorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:NLog.ILogger.IsErrorEnabled">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="P:NLog.Logger.IsFatalEnabled">
          <apidata name="IsFatalEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsFatalEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:NLog.ILogger.IsFatalEnabled">
              <type api="T:NLog.ILogger" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="P:Symbiote.Core.xLogger.PersistedMethods" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" />
      </containers>
      <file name="f40f0061-9084-278e-8e98-272550ab2333" />
    </api>
    <api id="Events.T:Symbiote.Core.xLogger">
      <topicdata name="xLogger" group="list" subgroup="Events" typeTopicId="T:Symbiote.Core.xLogger" />
      <apidata name="xLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:NLog.Logger.LoggerReconfigured">
          <apidata name="LoggerReconfigured" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LoggerReconfigured" />
          <remover name="remove_LoggerReconfigured" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.EventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:NLog.ILoggerBase.LoggerReconfigured">
              <type api="T:NLog.ILoggerBase" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" />
      </containers>
      <file name="01cc684a-a126-23f4-29bc-b43bdfbc328a" />
    </api>
    <api id="Fields.T:Symbiote.Core.xLogger">
      <topicdata name="xLogger" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.xLogger" />
      <apidata name="xLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:NLog.Logger.loggerType">
          <apidata name="loggerType" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="true" serialized="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="F:NLog.Logger.configuration">
          <apidata name="configuration" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="false" volatile="true" serialized="true" />
          <returns>
            <type api="T:NLog.Internal.LoggerConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="F:NLog.Logger.isTraceEnabled">
          <apidata name="isTraceEnabled" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="false" volatile="true" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="F:NLog.Logger.isDebugEnabled">
          <apidata name="isDebugEnabled" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="false" volatile="true" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="F:NLog.Logger.isInfoEnabled">
          <apidata name="isInfoEnabled" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="false" volatile="true" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="F:NLog.Logger.isWarnEnabled">
          <apidata name="isWarnEnabled" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="false" volatile="true" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="F:NLog.Logger.isErrorEnabled">
          <apidata name="isErrorEnabled" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="false" volatile="true" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="F:NLog.Logger.isFatalEnabled">
          <apidata name="isFatalEnabled" group="member" subgroup="field" />
          <memberdata visibility="private" />
          <fielddata literal="false" initonly="false" volatile="true" serialized="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="NLog" module="NLog" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:NLog" />
            <type api="T:NLog.Logger" ref="true" />
          </containers>
        </element>
        <element api="F:Symbiote.Core.xLogger.AutoPruneAge" />
        <element api="F:Symbiote.Core.xLogger.AutoPruneEnabled" />
        <element api="F:Symbiote.Core.xLogger.CheckpointPrefix" />
        <element api="F:Symbiote.Core.xLogger.EnterPrefix" />
        <element api="F:Symbiote.Core.xLogger.ExceptionFooterPrefix" />
        <element api="F:Symbiote.Core.xLogger.ExceptionHeaderPrefix" />
        <element api="F:Symbiote.Core.xLogger.ExceptionLinePrefix" />
        <element api="F:Symbiote.Core.xLogger.ExceptionPrefix" />
        <element api="F:Symbiote.Core.xLogger.ExecutionDurationPrefix" />
        <element api="F:Symbiote.Core.xLogger.ExitPrefix" />
        <element api="F:Symbiote.Core.xLogger.FinalLinePrefix" />
        <element api="F:Symbiote.Core.xLogger.Footer" />
        <element api="F:Symbiote.Core.xLogger.Header" />
        <element api="F:Symbiote.Core.xLogger.Indent" />
        <element api="F:Symbiote.Core.xLogger.InnerSeparator" />
        <element api="F:Symbiote.Core.xLogger.LinePrefix" />
        <element api="F:Symbiote.Core.xLogger.LinePrefixVariable" />
        <element api="F:Symbiote.Core.xLogger.OuterSeparator" />
        <element api="F:Symbiote.Core.xLogger.PersistedMethodListLock" />
        <element api="F:Symbiote.Core.xLogger.Prefix" />
        <element api="F:Symbiote.Core.xLogger.StackTracePrefix" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" />
      </containers>
      <file name="26b76b4c-9566-9848-88ec-0a8134b7b21c" />
    </api>
    <api id="Overload:Symbiote.Core.xLogger.Checkpoint">
      <topicdata name="Checkpoint" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Checkpoint" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String)" />
        <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Checkpoint(System.Guid,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.Guid,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.String[],System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Guid,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.Guid,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.String[],System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="8b9a28a6-39fa-6a65-7a7d-886e2d2a7d99" />
    </api>
    <api id="Overload:Symbiote.Core.xLogger.EnterMethod">
      <topicdata name="EnterMethod" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="EnterMethod" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.xLogger.EnterMethod(System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.EnterMethod(System.Boolean,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.EnterMethod(System.Object[],System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.EnterMethod(System.Object[],System.Boolean,System.String,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="1977e5a1-9fc8-d940-6110-a5455bf9ea15" />
    </api>
    <api id="Overload:Symbiote.Core.xLogger.Exception">
      <topicdata name="Exception" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Exception" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Guid,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Guid,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.Guid,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.String[],System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.Guid,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.String[],System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="e8fb37ab-c9c0-c3b4-3b09-2123e0cd0354" />
    </api>
    <api id="Overload:Symbiote.Core.xLogger.ExitMethod">
      <topicdata name="ExitMethod" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ExitMethod" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.xLogger.ExitMethod(System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.ExitMethod(System.Guid,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.ExitMethod(System.Object,System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.ExitMethod(System.Object,System.Guid,System.String,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="acaa5f1b-c2a6-508e-5224-657b14e658cc" />
    </api>
    <api id="Overload:Symbiote.Core.xLogger.Multiline">
      <topicdata name="Multiline" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Multiline" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.xLogger.Multiline(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.Multiline(NLog.LogLevel,System.String[])" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="0c682801-7e38-1d62-2226-cf6706d09d5d" />
    </api>
    <api id="Overload:Symbiote.Core.xLogger.MultilineWrapped">
      <topicdata name="MultilineWrapped" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="MultilineWrapped" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.xLogger.MultilineWrapped(NLog.LogLevel,System.String)" />
        <element api="M:Symbiote.Core.xLogger.MultilineWrapped(NLog.LogLevel,System.String[])" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="93aa0371-62f3-abcc-1927-e0485a83b07e" />
    </api>
    <api id="Overload:Symbiote.Core.xLogger.StackTrace">
      <topicdata name="StackTrace" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="StackTrace" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.xLogger.StackTrace(System.String,System.String,System.Int32)" />
        <element api="M:Symbiote.Core.xLogger.StackTrace(NLog.LogLevel,System.String,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="6df7b11a-562a-41ab-5c56-f6e3bf592a69" />
    </api>
    <api id="M:Symbiote.Core.xLogger.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="0e8b16cd-21a0-2a62-8adb-3e747edbe407" />
    </api>
    <api id="M:Symbiote.Core.xLogger.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="61b2b280-69a7-085f-0c37-5a7fb19deac3" />
    </api>
    <api id="F:Symbiote.Core.xLogger.AutoPruneAge">
      <topicdata group="api" />
      <apidata name="AutoPruneAge" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="68ca50e7-4e81-9f7a-742f-6927be4d8b8a" />
    </api>
    <api id="F:Symbiote.Core.xLogger.AutoPruneEnabled">
      <topicdata group="api" />
      <apidata name="AutoPruneEnabled" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="b59cf691-e152-3d9f-4ee6-87e416ea138b" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Checkpoint(System.Guid,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Checkpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Checkpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="e144e420-b74e-4fb4-7fb1-70cd20cce236" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.Guid,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Checkpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Checkpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="f55454d1-356b-5344-075e-f66bb700938e" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Checkpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Checkpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="17497ccd-e08d-8f4c-8d0f-c688944cc2d2" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Checkpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Checkpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="variableNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="1ee7be40-d93f-0980-b6c1-7abafcb3e87d" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Checkpoint(System.Object[],System.String[],System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Checkpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Checkpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="variableNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="7dea37cb-7c21-b4c7-c40a-ce1c0fb4f6f8" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Checkpoint(System.String)">
      <topicdata group="api" />
      <apidata name="Checkpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Checkpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="b527cba4-b6a8-a64d-377b-7733038f8de1" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Guid,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Checkpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Checkpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="dd0ed8e6-2ee6-49c2-5f57-f07b8ed5d2af" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.Guid,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Checkpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Checkpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="592ff041-a16a-cdce-52c3-1062e1241fd2" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Checkpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Checkpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="f82f546a-783a-1a5e-3591-82303d8d1513" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Checkpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Checkpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="variableNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="2948da21-68a7-65e4-9a98-816ae00abc85" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.Object[],System.String[],System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Checkpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Checkpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="variableNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="1a7e3c73-2f42-924e-1ac4-b3396b19c3c2" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Checkpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Checkpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="5405f3eb-c7e6-af57-bb1e-13d036d9241f" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Checkpoint(System.String,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Checkpoint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Checkpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="1aba8559-5d12-bd29-a961-a286c6a96d39" />
    </api>
    <api id="F:Symbiote.Core.xLogger.CheckpointPrefix">
      <topicdata group="api" />
      <apidata name="CheckpointPrefix" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="97375a87-0c1f-0f22-df8d-62f5e75fbe15" />
    </api>
    <api id="M:Symbiote.Core.xLogger.EnterMethod(System.Boolean,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="EnterMethod" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.EnterMethod" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="persist">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="e3ca4053-c107-cc8e-7959-945bbd53492f" />
    </api>
    <api id="M:Symbiote.Core.xLogger.EnterMethod(System.Object[],System.Boolean,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="EnterMethod" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.EnterMethod" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="persist">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="29f7567e-abbd-731c-fd4e-1102c0d97792" />
    </api>
    <api id="M:Symbiote.Core.xLogger.EnterMethod(System.Object[],System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="EnterMethod" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.EnterMethod" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="27fd831d-a354-7eea-35af-3cc0789100ba" />
    </api>
    <api id="M:Symbiote.Core.xLogger.EnterMethod(System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="EnterMethod" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.EnterMethod" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="bb416de9-3372-07c6-54e4-351bb02fafb9" />
    </api>
    <api id="F:Symbiote.Core.xLogger.EnterPrefix">
      <topicdata group="api" />
      <apidata name="EnterPrefix" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="cc271d10-a7c5-cfbc-459e-09ae650537a7" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Guid,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Exception" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="9d329454-7ed2-dd2a-7ded-3e0fa5252778" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.Guid,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Exception" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="cda239cb-5a5b-bbdd-b751-0170c1b5c454" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Exception" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="a85c6be4-0f7b-257c-0173-66ff4f019045" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Exception" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="variableNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="6a309d30-1524-6915-779e-b0cbb9db807f" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.Object[],System.String[],System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Exception" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="variableNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="9bae26d7-58ac-8178-f5d4-d502df782a33" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Exception(NLog.LogLevel,System.Exception,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Exception" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="d6bb7790-eea7-fc62-6b63-54f00f7970c6" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Guid,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Exception" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="f4c8bb36-3954-0a93-959d-86556568c3e7" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.Guid,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Exception" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="725fa144-dfb2-f5bd-4917-84ce6f493190" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Exception" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="aa2a64c4-be89-a0d5-7c08-52f7113ced93" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.String[],System.Guid,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Exception" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="variableNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="42a44ee5-bf76-1f28-940f-ec6df93839bf" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Exception(System.Exception,System.Object[],System.String[],System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Exception" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="variableNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="e978f539-a44d-2933-0432-c1b43029f5ac" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Exception(System.Exception,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Exception" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="19797712-7522-5b76-13bb-3a451695707b" />
    </api>
    <api id="F:Symbiote.Core.xLogger.ExceptionFooterPrefix">
      <topicdata group="api" />
      <apidata name="ExceptionFooterPrefix" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="23cf3e1e-bb61-1348-8fd5-16b29b6ef5fc" />
    </api>
    <api id="F:Symbiote.Core.xLogger.ExceptionHeaderPrefix">
      <topicdata group="api" />
      <apidata name="ExceptionHeaderPrefix" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="8ef3a1c2-8dd4-5f1e-8fad-37eb6d83cbf6" />
    </api>
    <api id="F:Symbiote.Core.xLogger.ExceptionLinePrefix">
      <topicdata group="api" />
      <apidata name="ExceptionLinePrefix" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="ffc67a27-6d1c-9951-ccc6-ae0dd607a9f8" />
    </api>
    <api id="F:Symbiote.Core.xLogger.ExceptionPrefix">
      <topicdata group="api" />
      <apidata name="ExceptionPrefix" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="f7f8ff60-a4df-d800-b3f5-17ea168bb7ea" />
    </api>
    <api id="F:Symbiote.Core.xLogger.ExecutionDurationPrefix">
      <topicdata group="api" />
      <apidata name="ExecutionDurationPrefix" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="e690b367-ac27-d462-7b18-37d4600df7c1" />
    </api>
    <api id="M:Symbiote.Core.xLogger.ExitMethod(System.Guid,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="ExitMethod" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.ExitMethod" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="39c445c2-e61b-c847-6a8c-2a4d58ff35e2" />
    </api>
    <api id="M:Symbiote.Core.xLogger.ExitMethod(System.Object,System.Guid,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="ExitMethod" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.ExitMethod" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="returnValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="6b628ee3-2aa2-a8ca-643a-240c5581ccc2" />
    </api>
    <api id="M:Symbiote.Core.xLogger.ExitMethod(System.Object,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="ExitMethod" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.ExitMethod" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="returnValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="93d5d112-63b8-81ee-6fc8-596df3fd7e54" />
    </api>
    <api id="M:Symbiote.Core.xLogger.ExitMethod(System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="ExitMethod" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.ExitMethod" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="409206df-fac8-522e-6889-9fe43ad968cc" />
    </api>
    <api id="F:Symbiote.Core.xLogger.ExitPrefix">
      <topicdata group="api" />
      <apidata name="ExitPrefix" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="825bd411-dbf3-6172-8719-11ffe7e41489" />
    </api>
    <api id="F:Symbiote.Core.xLogger.FinalLinePrefix">
      <topicdata group="api" />
      <apidata name="FinalLinePrefix" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="59e06fa9-ce19-c2dc-ae31-953dc7a26c7e" />
    </api>
    <api id="F:Symbiote.Core.xLogger.Footer">
      <topicdata group="api" />
      <apidata name="Footer" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="67db81e5-2876-1245-fab6-3f428947f739" />
    </api>
    <api id="M:Symbiote.Core.xLogger.GetCallingStackFrame">
      <topicdata group="api" />
      <apidata name="GetCallingStackFrame" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="b5bc91c3-4d3d-ec98-fa1b-3105d6fb5b0c" />
    </api>
    <api id="M:Symbiote.Core.xLogger.GetColloquialTypeName(System.Type)">
      <topicdata group="api" />
      <apidata name="GetColloquialTypeName" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="1fa604fc-5eef-af25-f845-b33539fca17e" />
    </api>
    <api id="M:Symbiote.Core.xLogger.GetExceptionSerialization(System.Exception)">
      <topicdata group="api" />
      <apidata name="GetExceptionSerialization" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="5f4623b9-e9f7-2627-8172-0597d0d629f3" />
    </api>
    <api id="M:Symbiote.Core.xLogger.GetInvertedStackExcerpt">
      <topicdata group="api" />
      <apidata name="GetInvertedStackExcerpt" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Diagnostics.StackFrame" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="01d3a4ec-6ba4-68f0-2c21-05e55bbebf8d" />
    </api>
    <api id="M:Symbiote.Core.xLogger.GetMethodSignature(System.Reflection.MethodBase)">
      <topicdata group="api" />
      <apidata name="GetMethodSignature" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="methodBase" optional="true">
          <type api="T:System.Reflection.MethodBase" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="c018a9d5-69c1-71b8-99d7-7abf41c2e2e3" />
    </api>
    <api id="M:Symbiote.Core.xLogger.GetObjectSerialization(System.Object)">
      <topicdata group="api" />
      <apidata name="GetObjectSerialization" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="ad4a354e-cd6c-fbbe-66c7-256f21456977" />
    </api>
    <api id="F:Symbiote.Core.xLogger.Header">
      <topicdata group="api" />
      <apidata name="Header" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="17ae75c6-a271-6c16-c319-edde001e6b65" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Heading(NLog.LogLevel,System.String)">
      <topicdata group="api" />
      <apidata name="Heading" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="86f8be49-6949-12e4-7509-9796816fd06d" />
    </api>
    <api id="F:Symbiote.Core.xLogger.Indent">
      <topicdata group="api" />
      <apidata name="Indent" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="40dad8be-d90d-fc93-e2bd-f5319a72a236" />
    </api>
    <api id="F:Symbiote.Core.xLogger.InnerSeparator">
      <topicdata group="api" />
      <apidata name="InnerSeparator" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="fe05a483-7af7-6b51-4d4e-1c6f178d6a16" />
    </api>
    <api id="F:Symbiote.Core.xLogger.LinePrefix">
      <topicdata group="api" />
      <apidata name="LinePrefix" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="f7549a4d-02c4-3d65-2fa5-81c4f945c09f" />
    </api>
    <api id="F:Symbiote.Core.xLogger.LinePrefixVariable">
      <topicdata group="api" />
      <apidata name="LinePrefixVariable" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="78d0bdbf-47ac-b900-9781-bed9668f5091" />
    </api>
    <api id="M:Symbiote.Core.xLogger.LogExecutionDuration(NLog.LogLevel,System.String,System.Guid,System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="LogExecutionDuration" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="remove" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
        <parameter name="prefix" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="df5fb7fc-f85c-68bd-fd7e-5a24f5125b08" />
    </api>
    <api id="M:Symbiote.Core.xLogger.LogFooter(NLog.LogLevel,System.String)">
      <topicdata group="api" />
      <apidata name="LogFooter" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="prefix" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="278f42c8-b357-e2f4-5bc5-acfda4ed844c" />
    </api>
    <api id="M:Symbiote.Core.xLogger.LogHeader(NLog.LogLevel,System.String)">
      <topicdata group="api" />
      <apidata name="LogHeader" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="prefix" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="382274d2-34e7-45aa-b2f9-dae5c35857da" />
    </api>
    <api id="M:Symbiote.Core.xLogger.LogInnerSeparator(NLog.LogLevel,System.String)">
      <topicdata group="api" />
      <apidata name="LogInnerSeparator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="prefix" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="79e75675-af24-a4bd-a65e-c8f2546bdd12" />
    </api>
    <api id="M:Symbiote.Core.xLogger.LogOuterSeparator(NLog.LogLevel,System.String)">
      <topicdata group="api" />
      <apidata name="LogOuterSeparator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="prefix" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="3b61f1eb-3200-533d-947b-f98e0aaa0923" />
    </api>
    <api id="M:Symbiote.Core.xLogger.LogStackTrace(NLog.LogLevel,System.String)">
      <topicdata group="api" />
      <apidata name="LogStackTrace" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="prefix" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="de8422cf-349e-0ee1-5252-38a0d568666e" />
    </api>
    <api id="M:Symbiote.Core.xLogger.LogVariables(NLog.LogLevel,System.Object[],System.String[],System.String)">
      <topicdata group="api" />
      <apidata name="LogVariables" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="variables">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="variableNames" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="prefix" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="d8a6d2df-e7ee-ecb1-a1da-bb24781f9e64" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Multiline(NLog.LogLevel,System.String)">
      <topicdata group="api" />
      <apidata name="Multiline" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Multiline" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="43741346-eb37-5679-780b-499ce27cde68" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Multiline(NLog.LogLevel,System.String[])">
      <topicdata group="api" />
      <apidata name="Multiline" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.Multiline" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="message">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="ee6f5ecf-d93d-8975-0ee7-da2057c45a9a" />
    </api>
    <api id="M:Symbiote.Core.xLogger.MultilineWrapped(NLog.LogLevel,System.String)">
      <topicdata group="api" />
      <apidata name="MultilineWrapped" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.MultilineWrapped" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="3ea3f162-c871-6b89-175d-f39889ea2ba5" />
    </api>
    <api id="M:Symbiote.Core.xLogger.MultilineWrapped(NLog.LogLevel,System.String[])">
      <topicdata group="api" />
      <apidata name="MultilineWrapped" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.MultilineWrapped" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="message">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="70d1abb8-e466-b26b-e62b-37819f386cfa" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Names(System.String[])">
      <topicdata group="api" />
      <apidata name="Names" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="names" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="36910b0e-008f-1708-8665-307951516f31" />
    </api>
    <api id="F:Symbiote.Core.xLogger.OuterSeparator">
      <topicdata group="api" />
      <apidata name="OuterSeparator" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="ed39c36c-8ac4-6266-388d-d7176f4bfcd1" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Params(System.Object[])">
      <topicdata group="api" />
      <apidata name="Params" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="c5b312e7-895a-b977-6de8-aa149a43d8be" />
    </api>
    <api id="F:Symbiote.Core.xLogger.PersistedMethodListLock">
      <topicdata group="api" />
      <apidata name="PersistedMethodListLock" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="25f61162-b120-0965-25e8-bf4b1bdc5cfb" />
    </api>
    <api id="P:Symbiote.Core.xLogger.PersistedMethods">
      <topicdata group="api" />
      <apidata name="PersistedMethods" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PersistedMethods" />
      <setter name="set_PersistedMethods" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.Guid" ref="false" />
                <type api="T:System.DateTime" ref="false" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="e7bd92fd-2d8f-39fa-4856-43e99e535784" />
    </api>
    <api id="F:Symbiote.Core.xLogger.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="ebf219cf-d90a-c2a8-fca1-9d120e3e9987" />
    </api>
    <api id="M:Symbiote.Core.xLogger.PrunePersistedMethods(System.Int32)">
      <topicdata group="api" />
      <apidata name="PrunePersistedMethods" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="age">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="bebfa1f0-0c8e-e0bf-a5a4-d9db528a084b" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Separator(NLog.LogLevel)">
      <topicdata group="api" />
      <apidata name="Separator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="be740ec4-10ff-7346-83dc-35c6ec7786a5" />
    </api>
    <api id="M:Symbiote.Core.xLogger.StackTrace(NLog.LogLevel,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="StackTrace" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.StackTrace" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="77030f7d-491e-bcc2-c47b-3dd6e0de2033" />
    </api>
    <api id="M:Symbiote.Core.xLogger.StackTrace(System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="StackTrace" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.xLogger.StackTrace" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="filePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerFilePathAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="lineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="b65ee075-6541-9ea8-1bcd-e3fd3b2ae3cf" />
    </api>
    <api id="F:Symbiote.Core.xLogger.StackTracePrefix">
      <topicdata group="api" />
      <apidata name="StackTracePrefix" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="d7d8de2e-a6ba-35a6-f74b-4eb1a5d264e0" />
    </api>
    <api id="M:Symbiote.Core.xLogger.SubHeading(NLog.LogLevel,System.String)">
      <topicdata group="api" />
      <apidata name="SubHeading" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="ac5ffcca-da68-8ddb-b295-74fa179ec675" />
    </api>
    <api id="M:Symbiote.Core.xLogger.SubSubHeading(NLog.LogLevel,System.String)">
      <topicdata group="api" />
      <apidata name="SubSubHeading" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="ad5e8be8-3859-ce39-b2b1-81e3e7a110a2" />
    </api>
    <api id="M:Symbiote.Core.xLogger.Vars(System.Object[])">
      <topicdata group="api" />
      <apidata name="Vars" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variables" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="9b2d6173-7fb8-9701-2934-a2724028ecf6" />
    </api>
    <api id="T:Symbiote.Core.xLogger.ExcludedParam">
      <topicdata group="api" />
      <apidata name="ExcludedParam" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.xLogger.ExcludedParam.#ctor" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="70759581-8b36-0704-224c-f5dbc2b74630" />
    </api>
    <api id="Methods.T:Symbiote.Core.xLogger.ExcludedParam">
      <topicdata name="ExcludedParam" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.xLogger.ExcludedParam" />
      <apidata name="ExcludedParam" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger.ExcludedParam" />
      </containers>
      <file name="2689ec66-4420-4243-770d-f6fa2da2ca00" />
    </api>
    <api id="M:Symbiote.Core.xLogger.ExcludedParam.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger.ExcludedParam" ref="true">
          <type api="T:Symbiote.Core.xLogger" ref="true" />
        </type>
      </containers>
      <file name="2bb65967-f7cf-072a-2479-81f5e8f41c90" />
    </api>
    <api id="T:Symbiote.Core.xLogger.UnspecifiedReturnValue">
      <topicdata group="api" />
      <apidata name="UnspecifiedReturnValue" group="type" subgroup="class" />
      <typedata visibility="private" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.xLogger.UnspecifiedReturnValue.#ctor" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </containers>
      <file name="52bd09e0-d0d0-5cb3-9fb1-480758df2ac6" />
    </api>
    <api id="Methods.T:Symbiote.Core.xLogger.UnspecifiedReturnValue">
      <topicdata name="UnspecifiedReturnValue" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.xLogger.UnspecifiedReturnValue" />
      <apidata name="UnspecifiedReturnValue" group="type" subgroup="class" />
      <typedata visibility="private" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger.UnspecifiedReturnValue" />
      </containers>
      <file name="dd88fc67-94a1-bf49-be85-670196a7cac5" />
    </api>
    <api id="M:Symbiote.Core.xLogger.UnspecifiedReturnValue.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core" />
        <type api="T:Symbiote.Core.xLogger.UnspecifiedReturnValue" ref="true">
          <type api="T:Symbiote.Core.xLogger" ref="true" />
        </type>
      </containers>
      <file name="1d01fc61-f0ed-413b-a692-c42b647da64c" />
    </api>
    <api id="N:Symbiote.Core.Configuration">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Configuration" group="namespace" />
      <elements>
        <element api="T:Symbiote.Core.Configuration.IConfigurable`1" />
        <element api="T:Symbiote.Core.Configuration.ConfigurationDefinition" />
        <element api="T:Symbiote.Core.Configuration.ConfigurationManager" />
      </elements>
      <file name="df347f3e-98bb-535b-adc2-5e2589d35dd4" />
    </api>
    <api id="T:Symbiote.Core.Configuration.ConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="ConfigurationDefinition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationDefinition.#ctor">
          <element api="M:Symbiote.Core.Configuration.ConfigurationDefinition.#ctor" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationDefinition.#ctor(System.String,System.String,System.Type)" />
        </element>
        <element api="P:Symbiote.Core.Configuration.ConfigurationDefinition.Form" />
        <element api="P:Symbiote.Core.Configuration.ConfigurationDefinition.Model" />
        <element api="P:Symbiote.Core.Configuration.ConfigurationDefinition.Schema" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
      </containers>
      <file name="89391e27-b66e-9ae7-ec3f-9c07c10d21e8" />
    </api>
    <api id="Methods.T:Symbiote.Core.Configuration.ConfigurationDefinition">
      <topicdata name="ConfigurationDefinition" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Configuration.ConfigurationDefinition" />
      <apidata name="ConfigurationDefinition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" />
      </containers>
      <file name="6cd77013-8327-5fc6-0df9-f3eff9734cf1" />
    </api>
    <api id="Properties.T:Symbiote.Core.Configuration.ConfigurationDefinition">
      <topicdata name="ConfigurationDefinition" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Configuration.ConfigurationDefinition" />
      <apidata name="ConfigurationDefinition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Configuration.ConfigurationDefinition.Form" />
        <element api="P:Symbiote.Core.Configuration.ConfigurationDefinition.Model" />
        <element api="P:Symbiote.Core.Configuration.ConfigurationDefinition.Schema" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" />
      </containers>
      <file name="9190550d-c791-15ff-7784-25d70586efae" />
    </api>
    <api id="Overload:Symbiote.Core.Configuration.ConfigurationDefinition.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Symbiote.Core.Configuration.ConfigurationDefinition.#ctor" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationDefinition.#ctor(System.String,System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </containers>
      <file name="a8ac1acb-12a1-fd59-eeba-50b72d816177" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationDefinition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Symbiote.Core.Configuration.ConfigurationDefinition.#ctor" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </containers>
      <file name="433b2d55-d05a-3230-ff59-8dd9b4d98a16" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationDefinition.#ctor(System.String,System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Symbiote.Core.Configuration.ConfigurationDefinition.#ctor" />
      <parameters>
        <parameter name="form">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="schema">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="model">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </containers>
      <file name="b7d26a07-d8a0-8069-e071-05009a820d88" />
    </api>
    <api id="P:Symbiote.Core.Configuration.ConfigurationDefinition.Form">
      <topicdata group="api" />
      <apidata name="Form" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Form" />
      <setter name="set_Form" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </containers>
      <file name="7acbc1f4-b588-470d-302e-9bf7cfbdb2ab" />
    </api>
    <api id="P:Symbiote.Core.Configuration.ConfigurationDefinition.Model">
      <topicdata group="api" />
      <apidata name="Model" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Model" />
      <setter name="set_Model" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </containers>
      <file name="7028ff6c-cf44-8c2f-e4ef-d22c92468057" />
    </api>
    <api id="P:Symbiote.Core.Configuration.ConfigurationDefinition.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Schema" />
      <setter name="set_Schema" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </containers>
      <file name="aadc983b-65e4-17fc-aa6d-bc5272ec9ccc" />
    </api>
    <api id="T:Symbiote.Core.Configuration.ConfigurationManager">
      <topicdata group="api" />
      <apidata name="ConfigurationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.IManager" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.#ctor(Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.#cctor" />
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.AddInstanceConfiguration">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.AddInstanceConfiguration``1(System.Type,System.Object,System.String)" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.AddInstanceConfiguration``1(System.Type,System.Object,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
        </element>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.BuildNewConfiguration" />
        <element api="P:Symbiote.Core.Configuration.ConfigurationManager.Configuration" />
        <element api="P:Symbiote.Core.Configuration.ConfigurationManager.ConfigurationFileName" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.GetConfigurationFileDrive" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.GetConfigurationFileName" />
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.GetInstanceConfiguration">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.GetInstanceConfiguration``1(System.Type,System.String)" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.GetInstanceConfiguration``1(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
        </element>
        <element api="F:Symbiote.Core.Configuration.ConfigurationManager.instance" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.Instance(Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.IsConfigurable(System.Type)" />
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.IsConfigured">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.IsConfigured(System.Type,System.String)" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.IsConfigured(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
        </element>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.IsRegistered(System.Type)" />
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.LoadConfiguration">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.LoadConfiguration" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.LoadConfiguration(System.String)" />
        </element>
        <element api="F:Symbiote.Core.Configuration.ConfigurationManager.logger" />
        <element api="F:Symbiote.Core.Configuration.ConfigurationManager.manager" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.MoveConfigurationFile(System.String)" />
        <element api="P:Symbiote.Core.Configuration.ConfigurationManager.RegisteredTypes" />
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.RegisterType">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.RegisterType(System.Type,System.Boolean)" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.RegisterType(System.Type,Symbiote.Core.Configuration.ConfigurationDefinition,System.Collections.Generic.Dictionary{System.Type,Symbiote.Core.Configuration.ConfigurationDefinition})" />
        </element>
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.RemoveInstanceConfiguration">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.RemoveInstanceConfiguration(System.Type,System.String)" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.RemoveInstanceConfiguration(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
        </element>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.Restart" />
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}})" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
        </element>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.SetConfigurationFileName(System.String)" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.Start" />
        <element api="P:Symbiote.Core.Configuration.ConfigurationManager.State" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.Stop" />
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.UpdateInstanceConfiguration">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.UpdateInstanceConfiguration(System.Type,System.Object,System.String)" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.UpdateInstanceConfiguration(System.Type,System.Object,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
        </element>
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.ValidateConfiguration">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.ValidateConfiguration" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.ValidateConfiguration(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}})" />
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
      </containers>
      <file name="8c00852c-7730-a1cb-c1a1-de654acef82d" />
    </api>
    <api id="Methods.T:Symbiote.Core.Configuration.ConfigurationManager">
      <topicdata name="ConfigurationManager" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Configuration.ConfigurationManager" />
      <apidata name="ConfigurationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.AddInstanceConfiguration">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.AddInstanceConfiguration``1(System.Type,System.Object,System.String)" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.AddInstanceConfiguration``1(System.Type,System.Object,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
        </element>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.BuildNewConfiguration" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.GetConfigurationFileDrive" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.GetConfigurationFileName" />
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.GetInstanceConfiguration">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.GetInstanceConfiguration``1(System.Type,System.String)" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.GetInstanceConfiguration``1(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
        </element>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.Instance(Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.IsConfigurable(System.Type)" />
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.IsConfigured">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.IsConfigured(System.Type,System.String)" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.IsConfigured(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
        </element>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.IsRegistered(System.Type)" />
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.LoadConfiguration">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.LoadConfiguration" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.LoadConfiguration(System.String)" />
        </element>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.MoveConfigurationFile(System.String)" />
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.RegisterType">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.RegisterType(System.Type,System.Boolean)" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.RegisterType(System.Type,Symbiote.Core.Configuration.ConfigurationDefinition,System.Collections.Generic.Dictionary{System.Type,Symbiote.Core.Configuration.ConfigurationDefinition})" />
        </element>
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.RemoveInstanceConfiguration">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.RemoveInstanceConfiguration(System.Type,System.String)" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.RemoveInstanceConfiguration(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
        </element>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.Restart" />
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}})" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
        </element>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.SetConfigurationFileName(System.String)" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.Start" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.Stop" />
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.UpdateInstanceConfiguration">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.UpdateInstanceConfiguration(System.Type,System.Object,System.String)" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.UpdateInstanceConfiguration(System.Type,System.Object,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
        </element>
        <element api="Overload:Symbiote.Core.Configuration.ConfigurationManager.ValidateConfiguration">
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.ValidateConfiguration" />
          <element api="M:Symbiote.Core.Configuration.ConfigurationManager.ValidateConfiguration(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}})" />
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" />
      </containers>
      <file name="174bbb14-0749-9414-7ba2-1a6d2cd97638" />
    </api>
    <api id="Properties.T:Symbiote.Core.Configuration.ConfigurationManager">
      <topicdata name="ConfigurationManager" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Configuration.ConfigurationManager" />
      <apidata name="ConfigurationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Configuration.ConfigurationManager.Configuration" />
        <element api="P:Symbiote.Core.Configuration.ConfigurationManager.ConfigurationFileName" />
        <element api="P:Symbiote.Core.Configuration.ConfigurationManager.RegisteredTypes" />
        <element api="P:Symbiote.Core.Configuration.ConfigurationManager.State" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" />
      </containers>
      <file name="15f07172-4966-50c5-0f70-056c073e31bf" />
    </api>
    <api id="Fields.T:Symbiote.Core.Configuration.ConfigurationManager">
      <topicdata name="ConfigurationManager" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Configuration.ConfigurationManager" />
      <apidata name="ConfigurationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Configuration.ConfigurationManager.instance" />
        <element api="F:Symbiote.Core.Configuration.ConfigurationManager.logger" />
        <element api="F:Symbiote.Core.Configuration.ConfigurationManager.manager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" />
      </containers>
      <file name="12833960-1492-6bbb-2e90-771c115fdc08" />
    </api>
    <api id="Overload:Symbiote.Core.Configuration.ConfigurationManager.AddInstanceConfiguration">
      <topicdata name="AddInstanceConfiguration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AddInstanceConfiguration" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.AddInstanceConfiguration``1(System.Type,System.Object,System.String)" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.AddInstanceConfiguration``1(System.Type,System.Object,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="c9313726-ffc9-ca3f-a71a-a8d887c7170e" />
    </api>
    <api id="Overload:Symbiote.Core.Configuration.ConfigurationManager.GetInstanceConfiguration">
      <topicdata name="GetInstanceConfiguration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetInstanceConfiguration" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.GetInstanceConfiguration``1(System.Type,System.String)" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.GetInstanceConfiguration``1(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="d80905ff-3fe3-9d3f-84f1-0ed25aa6c82f" />
    </api>
    <api id="Overload:Symbiote.Core.Configuration.ConfigurationManager.IsConfigured">
      <topicdata name="IsConfigured" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="IsConfigured" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.IsConfigured(System.Type,System.String)" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.IsConfigured(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="3da4a412-d950-7c4d-d5bb-919a8e4207ab" />
    </api>
    <api id="Overload:Symbiote.Core.Configuration.ConfigurationManager.LoadConfiguration">
      <topicdata name="LoadConfiguration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="LoadConfiguration" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.LoadConfiguration" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.LoadConfiguration(System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="08bdedd2-3de0-74ab-d74a-f39fde0ed8e3" />
    </api>
    <api id="Overload:Symbiote.Core.Configuration.ConfigurationManager.RegisterType">
      <topicdata name="RegisterType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RegisterType" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.RegisterType(System.Type,System.Boolean)" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.RegisterType(System.Type,Symbiote.Core.Configuration.ConfigurationDefinition,System.Collections.Generic.Dictionary{System.Type,Symbiote.Core.Configuration.ConfigurationDefinition})" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="b587871e-4fef-2564-5239-d78dc8540359" />
    </api>
    <api id="Overload:Symbiote.Core.Configuration.ConfigurationManager.RemoveInstanceConfiguration">
      <topicdata name="RemoveInstanceConfiguration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RemoveInstanceConfiguration" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.RemoveInstanceConfiguration(System.Type,System.String)" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.RemoveInstanceConfiguration(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="bde9ed58-bb10-5f27-34db-4a7416b8cd5e" />
    </api>
    <api id="Overload:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration">
      <topicdata name="SaveConfiguration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="SaveConfiguration" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}})" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="bc2e4ca4-a869-5e42-acbe-5f1797004ff3" />
    </api>
    <api id="Overload:Symbiote.Core.Configuration.ConfigurationManager.UpdateInstanceConfiguration">
      <topicdata name="UpdateInstanceConfiguration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="UpdateInstanceConfiguration" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.UpdateInstanceConfiguration(System.Type,System.Object,System.String)" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.UpdateInstanceConfiguration(System.Type,System.Object,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="a68fedd1-1bd6-3b77-d39d-d4d6a8156893" />
    </api>
    <api id="Overload:Symbiote.Core.Configuration.ConfigurationManager.ValidateConfiguration">
      <topicdata name="ValidateConfiguration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ValidateConfiguration" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.ValidateConfiguration" />
        <element api="M:Symbiote.Core.Configuration.ConfigurationManager.ValidateConfiguration(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}})" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="96fd5777-6535-cf55-c879-eb2b996c2c7f" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.#ctor(Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" special="true" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="ee32c1f9-766a-5aa1-37d0-07d75aebbaa6" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="678816fb-905a-5fa8-006e-23607b7e154b" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.AddInstanceConfiguration``1(System.Type,System.Object,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)">
      <topicdata group="api" />
      <apidata name="AddInstanceConfiguration" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.AddInstanceConfiguration" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instanceConfiguration">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="configuration">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="instanceName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Symbiote.Core.Configuration.ConfigurationManager.AddInstanceConfiguration``1(System.Type,System.Object,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="2df45e84-8f77-5605-4698-68da930bbf3d" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.AddInstanceConfiguration``1(System.Type,System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="AddInstanceConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.AddInstanceConfiguration" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instanceConfiguration">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="instanceName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Symbiote.Core.Configuration.ConfigurationManager.AddInstanceConfiguration``1(System.Type,System.Object,System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="7ab8ea13-1e2f-691b-03d0-238b33475689" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.BuildNewConfiguration">
      <topicdata group="api" />
      <apidata name="BuildNewConfiguration" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
                <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="73bd6771-4d3a-fff0-b0cd-c3aa29456f45" />
    </api>
    <api id="P:Symbiote.Core.Configuration.ConfigurationManager.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Configuration" />
      <setter name="set_Configuration" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="89a7c1bf-d4dd-d028-1570-e1b33f58bc49" />
    </api>
    <api id="P:Symbiote.Core.Configuration.ConfigurationManager.ConfigurationFileName">
      <topicdata group="api" />
      <apidata name="ConfigurationFileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ConfigurationFileName" />
      <setter name="set_ConfigurationFileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="85308712-afb8-104b-1632-61b5220462d1" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.GetConfigurationFileDrive">
      <topicdata group="api" />
      <apidata name="GetConfigurationFileDrive" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="705a3dc5-0574-cf18-9441-a8401be58301" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.GetConfigurationFileName">
      <topicdata group="api" />
      <apidata name="GetConfigurationFileName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="86334f76-f7a5-daed-a422-0b1557e8b6cf" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.GetInstanceConfiguration``1(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)">
      <topicdata group="api" />
      <apidata name="GetInstanceConfiguration" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.GetInstanceConfiguration" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="configuration">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="instanceName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Symbiote.Core.Configuration.ConfigurationManager.GetInstanceConfiguration``1(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="af074956-4f67-8bcb-c300-60e05d1f3ac7" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.GetInstanceConfiguration``1(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="GetInstanceConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.GetInstanceConfiguration" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instanceName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Symbiote.Core.Configuration.ConfigurationManager.GetInstanceConfiguration``1(System.Type,System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="27f52408-e73f-6204-30a0-30b3b546758c" />
    </api>
    <api id="F:Symbiote.Core.Configuration.ConfigurationManager.instance">
      <topicdata group="api" />
      <apidata name="instance" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="05e09335-4816-b65f-8bbe-91d6ca8c702b" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.Instance(Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="0fc7d686-43f9-200d-507a-39ce168612e8" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.IsConfigurable(System.Type)">
      <topicdata group="api" />
      <apidata name="IsConfigurable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="ce48103b-2b56-566b-dd06-bc5e08868232" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.IsConfigured(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)">
      <topicdata group="api" />
      <apidata name="IsConfigured" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.IsConfigured" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="configuration">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="instanceName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="00659b00-b317-03dd-cc2f-2f94f95b4f3c" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.IsConfigured(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="IsConfigured" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.IsConfigured" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instanceName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="5bb3e02a-5cd8-04ec-8280-48558aaf1137" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.IsRegistered(System.Type)">
      <topicdata group="api" />
      <apidata name="IsRegistered" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="6c696e0a-2293-8d88-0e9c-31ce1893bbb5" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.LoadConfiguration">
      <topicdata group="api" />
      <apidata name="LoadConfiguration" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.LoadConfiguration" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
                <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="a4e13b86-7c94-9cea-c3a2-047de5806185" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.LoadConfiguration(System.String)">
      <topicdata group="api" />
      <apidata name="LoadConfiguration" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.LoadConfiguration" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
                <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="65a1abb0-180e-7c5c-ef6e-28f85bb728f0" />
    </api>
    <api id="F:Symbiote.Core.Configuration.ConfigurationManager.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="f80ef752-5f61-40ad-6e9d-d72f77ade17b" />
    </api>
    <api id="F:Symbiote.Core.Configuration.ConfigurationManager.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="d193b5d9-bca2-4b80-c0ce-49ff8d7d7296" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.MoveConfigurationFile(System.String)">
      <topicdata group="api" />
      <apidata name="MoveConfigurationFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="738836e3-998a-a3db-79a7-99c6a5aed85a" />
    </api>
    <api id="P:Symbiote.Core.Configuration.ConfigurationManager.RegisteredTypes">
      <topicdata group="api" />
      <apidata name="RegisteredTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_RegisteredTypes" />
      <setter name="set_RegisteredTypes" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
            <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="72c4c010-6e50-d53d-4766-7cd1cdf2acae" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.RegisterType(System.Type,Symbiote.Core.Configuration.ConfigurationDefinition,System.Collections.Generic.Dictionary{System.Type,Symbiote.Core.Configuration.ConfigurationDefinition})">
      <topicdata group="api" />
      <apidata name="RegisterType" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.RegisterType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="definition">
          <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
        </parameter>
        <parameter name="registeredTypes">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="c03394fd-764b-5fb4-932a-8ea52721d330" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.RegisterType(System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="RegisterType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.RegisterType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="throwExceptionOnFailure" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="3e928495-f3da-d477-5c30-b8a572d171e0" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.RemoveInstanceConfiguration(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)">
      <topicdata group="api" />
      <apidata name="RemoveInstanceConfiguration" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.RemoveInstanceConfiguration" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="configuration">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="instanceName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="c268eac8-b664-b6f8-3486-643fd022ca9a" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.RemoveInstanceConfiguration(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="RemoveInstanceConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.RemoveInstanceConfiguration" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instanceName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="b27b76ab-57d9-34bf-d031-89cf9c7b53b4" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.Restart">
      <topicdata group="api" />
      <apidata name="Restart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Restart">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="cba6c72b-3afe-52ba-a390-54e1e20bde18" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration">
      <topicdata group="api" />
      <apidata name="SaveConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="c2fdf36d-9332-4958-7da4-09707e0caae0" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}})">
      <topicdata group="api" />
      <apidata name="SaveConfiguration" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="configuration">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="bea10d0d-19ed-7b85-dc07-3ebffc1651d0" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)">
      <topicdata group="api" />
      <apidata name="SaveConfiguration" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.SaveConfiguration" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="configuration">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="3ec3f914-7b54-0747-2300-90c6c762b107" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.SetConfigurationFileName(System.String)">
      <topicdata group="api" />
      <apidata name="SetConfigurationFileName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="5b555a71-b8a4-4e95-766d-eeba17543394" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Start">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="995b880a-623d-1bd0-84fa-a356eba7df74" />
    </api>
    <api id="P:Symbiote.Core.Configuration.ConfigurationManager.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_State" />
      <setter name="set_State" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.IManager.State">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="fcc256f5-c2a4-a314-5d52-ca4d1e68e59c" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Stop">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="6f4e32e7-0f51-085a-f459-c6abb7a1138e" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.UpdateInstanceConfiguration(System.Type,System.Object,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)">
      <topicdata group="api" />
      <apidata name="UpdateInstanceConfiguration" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.UpdateInstanceConfiguration" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instanceConfiguration">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="configuration">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="instanceName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="8168d28d-b7a1-d714-ecb6-1ef6e74d9344" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.UpdateInstanceConfiguration(System.Type,System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateInstanceConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.UpdateInstanceConfiguration" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="instanceConfiguration">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="instanceName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="fc5e880c-d1f9-4b76-12e0-7d6de2bd3c76" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.ValidateConfiguration">
      <topicdata group="api" />
      <apidata name="ValidateConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.ValidateConfiguration" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="03196591-bb7b-932d-c175-47aa33f276b5" />
    </api>
    <api id="M:Symbiote.Core.Configuration.ConfigurationManager.ValidateConfiguration(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Object}})">
      <topicdata group="api" />
      <apidata name="ValidateConfiguration" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Configuration.ConfigurationManager.ValidateConfiguration" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="configuration">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
      </containers>
      <file name="787e376f-7984-dbfe-ce16-4fb2e1329d61" />
    </api>
    <api id="T:Symbiote.Core.Configuration.IConfigurable`1">
      <topicdata group="api" />
      <apidata name="IConfigurable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <implementors>
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </implementors>
      <elements>
        <element api="P:Symbiote.Core.Configuration.IConfigurable`1.Configuration" />
        <element api="P:Symbiote.Core.Configuration.IConfigurable`1.ConfigurationDefinition" />
        <element api="Overload:Symbiote.Core.Configuration.IConfigurable`1.Configure">
          <element api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure" />
          <element api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure(`0)" />
        </element>
        <element api="M:Symbiote.Core.Configuration.IConfigurable`1.SaveConfiguration" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
      </containers>
      <file name="4bc10c60-4a09-f81d-9362-a383f9a4d2af" />
    </api>
    <api id="Methods.T:Symbiote.Core.Configuration.IConfigurable`1">
      <topicdata name="IConfigurable" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Configuration.IConfigurable`1" />
      <apidata name="IConfigurable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:Symbiote.Core.Configuration.IConfigurable`1.Configure">
          <element api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure" />
          <element api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure(`0)" />
        </element>
        <element api="M:Symbiote.Core.Configuration.IConfigurable`1.SaveConfiguration" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.IConfigurable`1" />
      </containers>
      <file name="ea9cef00-0c9d-9550-78a6-e6af12bf2f85" />
    </api>
    <api id="Properties.T:Symbiote.Core.Configuration.IConfigurable`1">
      <topicdata name="IConfigurable" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Configuration.IConfigurable`1" />
      <apidata name="IConfigurable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Symbiote.Core.Configuration.IConfigurable`1.Configuration" />
        <element api="P:Symbiote.Core.Configuration.IConfigurable`1.ConfigurationDefinition" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.IConfigurable`1" />
      </containers>
      <file name="a14ceb3c-0e68-b6b8-da97-62565c0701f5" />
    </api>
    <api id="Overload:Symbiote.Core.Configuration.IConfigurable`1.Configure">
      <topicdata name="Configure" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Configure" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure" />
        <element api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure(`0)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true" />
      </containers>
      <file name="09bb501e-99fe-3438-9e66-b1033f110fc3" />
    </api>
    <api id="P:Symbiote.Core.Configuration.IConfigurable`1.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Configuration" />
      <returns>
        <template name="T" index="0" api="T:Symbiote.Core.Configuration.IConfigurable`1" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true" />
      </containers>
      <file name="c6f92908-8b26-cc69-56f7-6a373e9418a0" />
    </api>
    <api id="P:Symbiote.Core.Configuration.IConfigurable`1.ConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="ConfigurationDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ConfigurationDefinition" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true" />
      </containers>
      <file name="f91cff6a-7174-d522-ec03-2ba0e4e3e1f4" />
    </api>
    <api id="M:Symbiote.Core.Configuration.IConfigurable`1.Configure">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Configuration.IConfigurable`1.Configure" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true" />
      </containers>
      <file name="c1ca1904-c138-9306-3096-69dd01fec638" />
    </api>
    <api id="M:Symbiote.Core.Configuration.IConfigurable`1.Configure(`0)">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Configuration.IConfigurable`1.Configure" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="configuration">
          <template name="T" index="0" api="T:Symbiote.Core.Configuration.IConfigurable`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true" />
      </containers>
      <file name="2ed103ca-f656-ad88-ca21-016bcfb588b2" />
    </api>
    <api id="M:Symbiote.Core.Configuration.IConfigurable`1.SaveConfiguration">
      <topicdata group="api" />
      <apidata name="SaveConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Configuration" />
        <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true" />
      </containers>
      <file name="0334784d-7513-a398-7cc5-ea486f299f97" />
    </api>
    <api id="N:Symbiote.Core.Model">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Model" group="namespace" />
      <elements>
        <element api="T:Symbiote.Core.Model.ModelManagerConfiguration" />
        <element api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" />
        <element api="T:Symbiote.Core.Model.ModelBuildResult" />
        <element api="T:Symbiote.Core.Model.ModelManager" />
      </elements>
      <file name="6576a960-7f94-df76-b335-ebc581d85708" />
    </api>
    <api id="T:Symbiote.Core.Model.ModelBuildResult">
      <topicdata group="api" />
      <apidata name="ModelBuildResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Symbiote.Core.Result" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Symbiote.Core.Result.AddError(System.String)" />
        <element api="M:Symbiote.Core.Result.AddInfo(System.String)" />
        <element api="M:Symbiote.Core.Result.AddWarning(System.String)" />
        <element api="M:Symbiote.Core.Result.Incorporate(Symbiote.Core.Result)" />
        <element api="M:Symbiote.Core.Result.LastErrorMessage" />
        <element api="M:Symbiote.Core.Result.LastInfoMessage" />
        <element api="M:Symbiote.Core.Result.LastWarningMessage" />
        <element api="M:Symbiote.Core.Result.Log(System.Action{System.String},System.String)" />
        <element api="Overload:Symbiote.Core.Model.ModelBuildResult.LogAllMessages">
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},System.String,System.String)" />
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},Symbiote.Core.MessageType,System.String,System.String)" />
        </element>
        <element api="Overload:Symbiote.Core.Model.ModelBuildResult.LogResult">
          <element api="M:Symbiote.Core.Result.LogResult(NLog.Logger,System.String)" />
          <element api="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.String)" />
          <element api="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)" />
        </element>
        <element api="P:Symbiote.Core.Result.Messages" />
        <element api="P:Symbiote.Core.Result.ResultCode" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Model.ModelBuildResult.#ctor" />
        <element api="P:Symbiote.Core.Model.ModelBuildResult.DeferredList" />
        <element api="P:Symbiote.Core.Model.ModelBuildResult.Dictionary" />
        <element api="P:Symbiote.Core.Model.ModelBuildResult.Model" />
        <element api="P:Symbiote.Core.Model.ModelBuildResult.ResolvedList" />
        <element api="P:Symbiote.Core.Model.ModelBuildResult.UnresolvedList" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
      </containers>
      <file name="6906c54a-8f25-9fb3-a846-54a220e975bf" />
    </api>
    <api id="Methods.T:Symbiote.Core.Model.ModelBuildResult">
      <topicdata name="ModelBuildResult" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Model.ModelBuildResult" />
      <apidata name="ModelBuildResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Result.AddError(System.String)" />
        <element api="M:Symbiote.Core.Result.AddInfo(System.String)" />
        <element api="M:Symbiote.Core.Result.AddWarning(System.String)" />
        <element api="M:Symbiote.Core.Result.Incorporate(Symbiote.Core.Result)" />
        <element api="M:Symbiote.Core.Result.LastErrorMessage" />
        <element api="M:Symbiote.Core.Result.LastInfoMessage" />
        <element api="M:Symbiote.Core.Result.LastWarningMessage" />
        <element api="M:Symbiote.Core.Result.Log(System.Action{System.String},System.String)" />
        <element api="Overload:Symbiote.Core.Model.ModelBuildResult.LogAllMessages">
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},System.String,System.String)" />
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},Symbiote.Core.MessageType,System.String,System.String)" />
        </element>
        <element api="Overload:Symbiote.Core.Model.ModelBuildResult.LogResult">
          <element api="M:Symbiote.Core.Result.LogResult(NLog.Logger,System.String)" />
          <element api="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.String)" />
          <element api="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelBuildResult" />
      </containers>
      <file name="cdf805c5-828a-f9be-f6af-a7ef416d8c40" />
    </api>
    <api id="Properties.T:Symbiote.Core.Model.ModelBuildResult">
      <topicdata name="ModelBuildResult" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Model.ModelBuildResult" />
      <apidata name="ModelBuildResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Result.Messages" />
        <element api="P:Symbiote.Core.Result.ResultCode" />
        <element api="P:Symbiote.Core.Model.ModelBuildResult.DeferredList" />
        <element api="P:Symbiote.Core.Model.ModelBuildResult.Dictionary" />
        <element api="P:Symbiote.Core.Model.ModelBuildResult.Model" />
        <element api="P:Symbiote.Core.Model.ModelBuildResult.ResolvedList" />
        <element api="P:Symbiote.Core.Model.ModelBuildResult.UnresolvedList" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelBuildResult" />
      </containers>
      <file name="e6da0d08-667f-1d53-715e-757ae2c4cc69" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelBuildResult.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelBuildResult" ref="true" />
      </containers>
      <file name="49640076-bc43-2121-5d5d-3e4739d50475" />
    </api>
    <api id="P:Symbiote.Core.Model.ModelBuildResult.DeferredList">
      <topicdata group="api" />
      <apidata name="DeferredList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DeferredList" />
      <setter name="set_DeferredList" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelBuildResult" ref="true" />
      </containers>
      <file name="bc2385b3-5776-a43d-9f48-c63ded5ab650" />
    </api>
    <api id="P:Symbiote.Core.Model.ModelBuildResult.Dictionary">
      <topicdata group="api" />
      <apidata name="Dictionary" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Dictionary" />
      <setter name="set_Dictionary" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelBuildResult" ref="true" />
      </containers>
      <file name="0efaab37-e9a5-26e0-28d1-0ee89a4c479f" />
    </api>
    <api id="P:Symbiote.Core.Model.ModelBuildResult.Model">
      <topicdata group="api" />
      <apidata name="Model" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Model" />
      <setter name="set_Model" />
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelBuildResult" ref="true" />
      </containers>
      <file name="bb0aad88-f007-80ea-f06e-8ce72eccb0a0" />
    </api>
    <api id="P:Symbiote.Core.Model.ModelBuildResult.ResolvedList">
      <topicdata group="api" />
      <apidata name="ResolvedList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResolvedList" />
      <setter name="set_ResolvedList" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelBuildResult" ref="true" />
      </containers>
      <file name="142259c1-09e2-33ba-d37c-619ec418c3ab" />
    </api>
    <api id="P:Symbiote.Core.Model.ModelBuildResult.UnresolvedList">
      <topicdata group="api" />
      <apidata name="UnresolvedList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UnresolvedList" />
      <setter name="set_UnresolvedList" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelBuildResult" ref="true" />
      </containers>
      <file name="29a44833-0258-cfeb-98db-de6c8141f3db" />
    </api>
    <api id="T:Symbiote.Core.Model.ModelManager">
      <topicdata group="api" />
      <apidata name="ModelManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.IManager" ref="true" />
        <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Model.ModelManagerConfiguration" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Model.ModelManager.#ctor(Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Model.ModelManager.#cctor" />
        <element api="Overload:Symbiote.Core.Model.ModelManager.AddItem">
          <element api="M:Symbiote.Core.Model.ModelManager.AddItem(Symbiote.Core.Item)" />
          <element api="M:Symbiote.Core.Model.ModelManager.AddItem(Symbiote.Core.Item,System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item)" />
        </element>
        <element api="M:Symbiote.Core.Model.ModelManager.AttachItem(Symbiote.Core.Item,Symbiote.Core.Item)" />
        <element api="M:Symbiote.Core.Model.ModelManager.AttachModel(Symbiote.Core.Model.ModelBuildResult)" />
        <element api="Overload:Symbiote.Core.Model.ModelManager.BuildModel">
          <element api="M:Symbiote.Core.Model.ModelManager.BuildModel" />
          <element api="M:Symbiote.Core.Model.ModelManager.BuildModel(System.String,System.Collections.Generic.List{Symbiote.Core.Model.ModelManagerConfigurationItem})" />
          <element api="M:Symbiote.Core.Model.ModelManager.BuildModel(System.String,System.Collections.Generic.List{Symbiote.Core.Model.ModelManagerConfigurationItem},Symbiote.Core.Model.ModelBuildResult,System.Int32)" />
        </element>
        <element api="P:Symbiote.Core.Model.ModelManager.Configuration" />
        <element api="P:Symbiote.Core.Model.ModelManager.ConfigurationDefinition" />
        <element api="Overload:Symbiote.Core.Model.ModelManager.Configure">
          <element api="M:Symbiote.Core.Model.ModelManager.Configure" />
          <element api="M:Symbiote.Core.Model.ModelManager.Configure(Symbiote.Core.Model.ModelManagerConfiguration)" />
        </element>
        <element api="Overload:Symbiote.Core.Model.ModelManager.CopyItem">
          <element api="M:Symbiote.Core.Model.ModelManager.CopyItem(Symbiote.Core.Item,System.String)" />
          <element api="M:Symbiote.Core.Model.ModelManager.CopyItem(Symbiote.Core.Item,System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item,System.String)" />
        </element>
        <element api="P:Symbiote.Core.Model.ModelManager.Dictionary" />
        <element api="Overload:Symbiote.Core.Model.ModelManager.FindItem">
          <element api="M:Symbiote.Core.Model.ModelManager.FindItem(System.String)" />
          <element api="M:Symbiote.Core.Model.ModelManager.FindItem(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},System.String)" />
        </element>
        <element api="M:Symbiote.Core.Model.ModelManager.GetConfigurationDefinition" />
        <element api="M:Symbiote.Core.Model.ModelManager.GetDefaultConfiguration" />
        <element api="M:Symbiote.Core.Model.ModelManager.GetItemNameFromItemFQN(System.String)" />
        <element api="M:Symbiote.Core.Model.ModelManager.GetParentFQNFromItemFQN(System.String)" />
        <element api="F:Symbiote.Core.Model.ModelManager.instance" />
        <element api="M:Symbiote.Core.Model.ModelManager.Instance(Symbiote.Core.ProgramManager)" />
        <element api="F:Symbiote.Core.Model.ModelManager.logger" />
        <element api="F:Symbiote.Core.Model.ModelManager.manager" />
        <element api="P:Symbiote.Core.Model.ModelManager.Model" />
        <element api="Overload:Symbiote.Core.Model.ModelManager.MoveItem">
          <element api="M:Symbiote.Core.Model.ModelManager.MoveItem(Symbiote.Core.Item,System.String)" />
          <element api="M:Symbiote.Core.Model.ModelManager.MoveItem(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item,System.String)" />
        </element>
        <element api="Overload:Symbiote.Core.Model.ModelManager.RemoveItem">
          <element api="M:Symbiote.Core.Model.ModelManager.RemoveItem(Symbiote.Core.Item)" />
          <element api="M:Symbiote.Core.Model.ModelManager.RemoveItem(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item)" />
        </element>
        <element api="M:Symbiote.Core.Model.ModelManager.RenameItemInstance(Symbiote.Core.Item,System.String)" />
        <element api="M:Symbiote.Core.Model.ModelManager.Restart" />
        <element api="M:Symbiote.Core.Model.ModelManager.SaveConfiguration" />
        <element api="Overload:Symbiote.Core.Model.ModelManager.SaveModel">
          <element api="M:Symbiote.Core.Model.ModelManager.SaveModel" />
          <element api="M:Symbiote.Core.Model.ModelManager.SaveModel(Symbiote.Core.Item,Symbiote.Core.Result{System.Collections.Generic.List{Symbiote.Core.Model.ModelManagerConfigurationItem}})" />
        </element>
        <element api="M:Symbiote.Core.Model.ModelManager.Start" />
        <element api="P:Symbiote.Core.Model.ModelManager.State" />
        <element api="M:Symbiote.Core.Model.ModelManager.Stop" />
        <element api="M:Symbiote.Core.Model.ModelManager.UpdateItem(Symbiote.Core.Item,Symbiote.Core.Item)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
      </containers>
      <file name="f5d4f8da-5272-a1ad-c601-dfc35f3cfbbe" />
    </api>
    <api id="Methods.T:Symbiote.Core.Model.ModelManager">
      <topicdata name="ModelManager" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Model.ModelManager" />
      <apidata name="ModelManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Model.ModelManager.AddItem">
          <element api="M:Symbiote.Core.Model.ModelManager.AddItem(Symbiote.Core.Item)" />
          <element api="M:Symbiote.Core.Model.ModelManager.AddItem(Symbiote.Core.Item,System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item)" />
        </element>
        <element api="M:Symbiote.Core.Model.ModelManager.AttachItem(Symbiote.Core.Item,Symbiote.Core.Item)" />
        <element api="M:Symbiote.Core.Model.ModelManager.AttachModel(Symbiote.Core.Model.ModelBuildResult)" />
        <element api="Overload:Symbiote.Core.Model.ModelManager.BuildModel">
          <element api="M:Symbiote.Core.Model.ModelManager.BuildModel" />
          <element api="M:Symbiote.Core.Model.ModelManager.BuildModel(System.String,System.Collections.Generic.List{Symbiote.Core.Model.ModelManagerConfigurationItem})" />
          <element api="M:Symbiote.Core.Model.ModelManager.BuildModel(System.String,System.Collections.Generic.List{Symbiote.Core.Model.ModelManagerConfigurationItem},Symbiote.Core.Model.ModelBuildResult,System.Int32)" />
        </element>
        <element api="Overload:Symbiote.Core.Model.ModelManager.Configure">
          <element api="M:Symbiote.Core.Model.ModelManager.Configure" />
          <element api="M:Symbiote.Core.Model.ModelManager.Configure(Symbiote.Core.Model.ModelManagerConfiguration)" />
        </element>
        <element api="Overload:Symbiote.Core.Model.ModelManager.CopyItem">
          <element api="M:Symbiote.Core.Model.ModelManager.CopyItem(Symbiote.Core.Item,System.String)" />
          <element api="M:Symbiote.Core.Model.ModelManager.CopyItem(Symbiote.Core.Item,System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item,System.String)" />
        </element>
        <element api="Overload:Symbiote.Core.Model.ModelManager.FindItem">
          <element api="M:Symbiote.Core.Model.ModelManager.FindItem(System.String)" />
          <element api="M:Symbiote.Core.Model.ModelManager.FindItem(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},System.String)" />
        </element>
        <element api="M:Symbiote.Core.Model.ModelManager.GetConfigurationDefinition" />
        <element api="M:Symbiote.Core.Model.ModelManager.GetDefaultConfiguration" />
        <element api="M:Symbiote.Core.Model.ModelManager.GetItemNameFromItemFQN(System.String)" />
        <element api="M:Symbiote.Core.Model.ModelManager.GetParentFQNFromItemFQN(System.String)" />
        <element api="M:Symbiote.Core.Model.ModelManager.Instance(Symbiote.Core.ProgramManager)" />
        <element api="Overload:Symbiote.Core.Model.ModelManager.MoveItem">
          <element api="M:Symbiote.Core.Model.ModelManager.MoveItem(Symbiote.Core.Item,System.String)" />
          <element api="M:Symbiote.Core.Model.ModelManager.MoveItem(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item,System.String)" />
        </element>
        <element api="Overload:Symbiote.Core.Model.ModelManager.RemoveItem">
          <element api="M:Symbiote.Core.Model.ModelManager.RemoveItem(Symbiote.Core.Item)" />
          <element api="M:Symbiote.Core.Model.ModelManager.RemoveItem(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item)" />
        </element>
        <element api="M:Symbiote.Core.Model.ModelManager.RenameItemInstance(Symbiote.Core.Item,System.String)" />
        <element api="M:Symbiote.Core.Model.ModelManager.Restart" />
        <element api="M:Symbiote.Core.Model.ModelManager.SaveConfiguration" />
        <element api="Overload:Symbiote.Core.Model.ModelManager.SaveModel">
          <element api="M:Symbiote.Core.Model.ModelManager.SaveModel" />
          <element api="M:Symbiote.Core.Model.ModelManager.SaveModel(Symbiote.Core.Item,Symbiote.Core.Result{System.Collections.Generic.List{Symbiote.Core.Model.ModelManagerConfigurationItem}})" />
        </element>
        <element api="M:Symbiote.Core.Model.ModelManager.Start" />
        <element api="M:Symbiote.Core.Model.ModelManager.Stop" />
        <element api="M:Symbiote.Core.Model.ModelManager.UpdateItem(Symbiote.Core.Item,Symbiote.Core.Item)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" />
      </containers>
      <file name="c7bc35ef-c873-052f-8673-70a9d1eb1537" />
    </api>
    <api id="Properties.T:Symbiote.Core.Model.ModelManager">
      <topicdata name="ModelManager" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Model.ModelManager" />
      <apidata name="ModelManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Model.ModelManager.Configuration" />
        <element api="P:Symbiote.Core.Model.ModelManager.ConfigurationDefinition" />
        <element api="P:Symbiote.Core.Model.ModelManager.Dictionary" />
        <element api="P:Symbiote.Core.Model.ModelManager.Model" />
        <element api="P:Symbiote.Core.Model.ModelManager.State" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" />
      </containers>
      <file name="5c267154-5fff-ef8b-d832-e25b5ac792a4" />
    </api>
    <api id="Fields.T:Symbiote.Core.Model.ModelManager">
      <topicdata name="ModelManager" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Model.ModelManager" />
      <apidata name="ModelManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Model.ModelManager.instance" />
        <element api="F:Symbiote.Core.Model.ModelManager.logger" />
        <element api="F:Symbiote.Core.Model.ModelManager.manager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" />
      </containers>
      <file name="a9d106cb-9b5d-dabe-8a62-4de31e7f32a5" />
    </api>
    <api id="Overload:Symbiote.Core.Model.ModelManager.AddItem">
      <topicdata name="AddItem" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AddItem" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Model.ModelManager.AddItem(Symbiote.Core.Item)" />
        <element api="M:Symbiote.Core.Model.ModelManager.AddItem(Symbiote.Core.Item,System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="ba076881-7894-5604-f409-f4854e4a3d4c" />
    </api>
    <api id="Overload:Symbiote.Core.Model.ModelManager.BuildModel">
      <topicdata name="BuildModel" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="BuildModel" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Model.ModelManager.BuildModel" />
        <element api="M:Symbiote.Core.Model.ModelManager.BuildModel(System.String,System.Collections.Generic.List{Symbiote.Core.Model.ModelManagerConfigurationItem})" />
        <element api="M:Symbiote.Core.Model.ModelManager.BuildModel(System.String,System.Collections.Generic.List{Symbiote.Core.Model.ModelManagerConfigurationItem},Symbiote.Core.Model.ModelBuildResult,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="a1ea0bc8-f3d6-da34-3428-75121f1425f2" />
    </api>
    <api id="Overload:Symbiote.Core.Model.ModelManager.Configure">
      <topicdata name="Configure" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Configure" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Model.ModelManager.Configure" />
        <element api="M:Symbiote.Core.Model.ModelManager.Configure(Symbiote.Core.Model.ModelManagerConfiguration)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="c76c209b-f4de-77c7-a793-5bfbee9f9a9b" />
    </api>
    <api id="Overload:Symbiote.Core.Model.ModelManager.CopyItem">
      <topicdata name="CopyItem" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="CopyItem" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Model.ModelManager.CopyItem(Symbiote.Core.Item,System.String)" />
        <element api="M:Symbiote.Core.Model.ModelManager.CopyItem(Symbiote.Core.Item,System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="126e8c88-f3d0-d07c-ffeb-49f3c7146fa6" />
    </api>
    <api id="Overload:Symbiote.Core.Model.ModelManager.FindItem">
      <topicdata name="FindItem" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="FindItem" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Model.ModelManager.FindItem(System.String)" />
        <element api="M:Symbiote.Core.Model.ModelManager.FindItem(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="76b47f50-622f-2e06-6bcb-8dd512e5d5ed" />
    </api>
    <api id="Overload:Symbiote.Core.Model.ModelManager.MoveItem">
      <topicdata name="MoveItem" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="MoveItem" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Model.ModelManager.MoveItem(Symbiote.Core.Item,System.String)" />
        <element api="M:Symbiote.Core.Model.ModelManager.MoveItem(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="a1b2ef53-9dd3-8795-2537-922abdd0d1c6" />
    </api>
    <api id="Overload:Symbiote.Core.Model.ModelManager.RemoveItem">
      <topicdata name="RemoveItem" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RemoveItem" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Model.ModelManager.RemoveItem(Symbiote.Core.Item)" />
        <element api="M:Symbiote.Core.Model.ModelManager.RemoveItem(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="0552e176-9439-9743-f488-f022dd72fcca" />
    </api>
    <api id="Overload:Symbiote.Core.Model.ModelManager.SaveModel">
      <topicdata name="SaveModel" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="SaveModel" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Model.ModelManager.SaveModel" />
        <element api="M:Symbiote.Core.Model.ModelManager.SaveModel(Symbiote.Core.Item,Symbiote.Core.Result{System.Collections.Generic.List{Symbiote.Core.Model.ModelManagerConfigurationItem}})" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="d5d9dafc-71bb-5f76-abf6-eb127aa351f4" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.#ctor(Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" special="true" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="0398e152-2698-08c0-663b-b32bc9d980bd" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="df689fe0-2301-71f3-b041-580293a9641a" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.AddItem(Symbiote.Core.Item)">
      <topicdata group="api" />
      <apidata name="AddItem" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Model.ModelManager.AddItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="9ca75840-d400-bd28-f01a-5c742f18e5ce" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.AddItem(Symbiote.Core.Item,System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item)">
      <topicdata group="api" />
      <apidata name="AddItem" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Model.ModelManager.AddItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="model">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:Symbiote.Core.Item" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="33f29b73-81d4-e4f5-6b6d-2989f6b271f1" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.AttachItem(Symbiote.Core.Item,Symbiote.Core.Item)">
      <topicdata group="api" />
      <apidata name="AttachItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="parentItem">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="429ef3a2-a4f2-398b-15a3-82d67f6d60cf" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.AttachModel(Symbiote.Core.Model.ModelBuildResult)">
      <topicdata group="api" />
      <apidata name="AttachModel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="modelBuildResult">
          <type api="T:Symbiote.Core.Model.ModelBuildResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="2b72a135-0c1a-fed1-aaca-cfeaab89149a" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.BuildModel">
      <topicdata group="api" />
      <apidata name="BuildModel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Model.ModelManager.BuildModel" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Model.ModelBuildResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="c7a1df1c-0f92-4376-e872-7c7f25a6a515" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.BuildModel(System.String,System.Collections.Generic.List{Symbiote.Core.Model.ModelManagerConfigurationItem})">
      <topicdata group="api" />
      <apidata name="BuildModel" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Model.ModelManager.BuildModel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="itemList">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Model.ModelBuildResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="2a6c5355-0100-d7d1-7458-4f8a1c5b1951" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.BuildModel(System.String,System.Collections.Generic.List{Symbiote.Core.Model.ModelManagerConfigurationItem},Symbiote.Core.Model.ModelBuildResult,System.Int32)">
      <topicdata group="api" />
      <apidata name="BuildModel" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Model.ModelManager.BuildModel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="itemList">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="result">
          <type api="T:Symbiote.Core.Model.ModelBuildResult" ref="true" />
        </parameter>
        <parameter name="depth" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Model.ModelBuildResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="b639bbb9-010e-1ca0-f4bb-054d4470d12e" />
    </api>
    <api id="P:Symbiote.Core.Model.ModelManager.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Configuration" />
      <setter name="set_Configuration" />
      <returns>
        <type api="T:Symbiote.Core.Model.ModelManagerConfiguration" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Configuration.IConfigurable`1.Configuration">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Model.ModelManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="5872561c-6064-bb56-81f2-278fde3fb440" />
    </api>
    <api id="P:Symbiote.Core.Model.ModelManager.ConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="ConfigurationDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ConfigurationDefinition" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Configuration.IConfigurable`1.ConfigurationDefinition">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Model.ModelManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="e4393d25-434b-fa20-2172-9d67fe3d572b" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.Configure">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Model.ModelManager.Configure" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Model.ModelManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="3e1757d0-b853-ac70-88ef-1c106944af27" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.Configure(Symbiote.Core.Model.ModelManagerConfiguration)">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Model.ModelManager.Configure" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="configuration">
          <type api="T:Symbiote.Core.Model.ModelManagerConfiguration" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure(`0)">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Model.ModelManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="3b1782cb-a7f7-d20b-5642-1c3a8c1cf4c7" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.CopyItem(Symbiote.Core.Item,System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item,System.String)">
      <topicdata group="api" />
      <apidata name="CopyItem" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Model.ModelManager.CopyItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="model">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:Symbiote.Core.Item" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="8329486f-623a-ad76-d8c1-5b7c2d8fc57e" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.CopyItem(Symbiote.Core.Item,System.String)">
      <topicdata group="api" />
      <apidata name="CopyItem" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Model.ModelManager.CopyItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="656bf468-f1c0-1260-67ce-833325d95b65" />
    </api>
    <api id="P:Symbiote.Core.Model.ModelManager.Dictionary">
      <topicdata group="api" />
      <apidata name="Dictionary" group="member" subgroup="property" />
      <memberdata visibility="assembly" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Dictionary" />
      <setter name="set_Dictionary" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="3d7ab5df-0132-0e29-6d33-5b8c5f761a5e" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.FindItem(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},System.String)">
      <topicdata group="api" />
      <apidata name="FindItem" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Model.ModelManager.FindItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:Symbiote.Core.Item" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="07a2e180-64ec-9984-d5d0-9a5385858d9f" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.FindItem(System.String)">
      <topicdata group="api" />
      <apidata name="FindItem" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Model.ModelManager.FindItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="d3060d4f-7eb6-16bc-f736-de9bffbffb6c" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.GetConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="GetConfigurationDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="43a54b8a-08d2-3195-1c83-2bdeffc6e05e" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.GetDefaultConfiguration">
      <topicdata group="api" />
      <apidata name="GetDefaultConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Model.ModelManagerConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="5f2058c6-98ed-db0f-4e4d-b272b46d2eae" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.GetItemNameFromItemFQN(System.String)">
      <topicdata group="api" />
      <apidata name="GetItemNameFromItemFQN" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemFQN">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="6df9ed44-c8ea-7dd3-baf3-89287346e265" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.GetParentFQNFromItemFQN(System.String)">
      <topicdata group="api" />
      <apidata name="GetParentFQNFromItemFQN" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemFQN">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="14366a60-f9c2-881c-df29-aa0398a6f372" />
    </api>
    <api id="F:Symbiote.Core.Model.ModelManager.instance">
      <topicdata group="api" />
      <apidata name="instance" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="b91c800a-0a46-0f1d-7c64-b93c3c883094" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.Instance(Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="d64ecccf-a19f-47a1-6b99-7c3d7a75505d" />
    </api>
    <api id="F:Symbiote.Core.Model.ModelManager.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="0b057862-99de-cdba-8dc3-d7c9f4cb717b" />
    </api>
    <api id="F:Symbiote.Core.Model.ModelManager.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="b6ee58eb-414e-3517-5180-5f9d1af30173" />
    </api>
    <api id="P:Symbiote.Core.Model.ModelManager.Model">
      <topicdata group="api" />
      <apidata name="Model" group="member" subgroup="property" />
      <memberdata visibility="assembly" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Model" />
      <setter name="set_Model" />
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="6a325f22-6074-3bac-765f-31b2714437c0" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.MoveItem(Symbiote.Core.Item,System.String)">
      <topicdata group="api" />
      <apidata name="MoveItem" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Model.ModelManager.MoveItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="9994c740-4814-3fd3-aa8b-95b74bbeb173" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.MoveItem(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item,System.String)">
      <topicdata group="api" />
      <apidata name="MoveItem" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Model.ModelManager.MoveItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:Symbiote.Core.Item" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="e12edef5-3d8c-1bbd-fa12-2de5138fd9ab" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.RemoveItem(Symbiote.Core.Item)">
      <topicdata group="api" />
      <apidata name="RemoveItem" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Model.ModelManager.RemoveItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="326e966f-2f48-7c1c-72b5-8e90040d737a" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.RemoveItem(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Item},Symbiote.Core.Item)">
      <topicdata group="api" />
      <apidata name="RemoveItem" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Model.ModelManager.RemoveItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:Symbiote.Core.Item" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="152d6b35-08dd-54ca-fed1-e9ae8051178d" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.RenameItemInstance(Symbiote.Core.Item,System.String)">
      <topicdata group="api" />
      <apidata name="RenameItemInstance" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="197ff186-818e-4252-1beb-30b7ed8a27c1" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.Restart">
      <topicdata group="api" />
      <apidata name="Restart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Restart">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="02b0389f-1c11-91ef-d07f-744bce33a591" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.SaveConfiguration">
      <topicdata group="api" />
      <apidata name="SaveConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.SaveConfiguration">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Model.ModelManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="211c29f1-519c-8348-9336-e484c64d11dd" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.SaveModel">
      <topicdata group="api" />
      <apidata name="SaveModel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Model.ModelManager.SaveModel" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="3f2b684b-4573-2c44-25de-df3f79f77854" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.SaveModel(Symbiote.Core.Item,Symbiote.Core.Result{System.Collections.Generic.List{Symbiote.Core.Model.ModelManagerConfigurationItem}})">
      <topicdata group="api" />
      <apidata name="SaveModel" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Model.ModelManager.SaveModel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemRoot">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="configuration">
          <type api="T:Symbiote.Core.Result`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="bab4f47c-7b2a-856d-9735-d6e54e511793" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Start">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="55132e21-e545-c1a6-1905-841f2012b2a1" />
    </api>
    <api id="P:Symbiote.Core.Model.ModelManager.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_State" />
      <setter name="set_State" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.IManager.State">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="9790a447-8df4-22a5-1dbf-9d768c209844" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Stop">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="1fb199f5-db38-6766-0dbd-b151b116a00d" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManager.UpdateItem(Symbiote.Core.Item,Symbiote.Core.Item)">
      <topicdata group="api" />
      <apidata name="UpdateItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="sourceItem">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManager" ref="true" />
      </containers>
      <file name="638ab064-e138-8dce-f330-8350a6123165" />
    </api>
    <api id="T:Symbiote.Core.Model.ModelManagerConfiguration">
      <topicdata group="api" />
      <apidata name="ModelManagerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Model.ModelManagerConfiguration.#ctor" />
        <element api="P:Symbiote.Core.Model.ModelManagerConfiguration.Items" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
      </containers>
      <file name="9e82c13c-f949-e108-0f2d-3de3b7751757" />
    </api>
    <api id="Methods.T:Symbiote.Core.Model.ModelManagerConfiguration">
      <topicdata name="ModelManagerConfiguration" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Model.ModelManagerConfiguration" />
      <apidata name="ModelManagerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManagerConfiguration" />
      </containers>
      <file name="56c39f3b-2ec1-9127-0484-cb95c2955641" />
    </api>
    <api id="Properties.T:Symbiote.Core.Model.ModelManagerConfiguration">
      <topicdata name="ModelManagerConfiguration" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Model.ModelManagerConfiguration" />
      <apidata name="ModelManagerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Model.ModelManagerConfiguration.Items" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManagerConfiguration" />
      </containers>
      <file name="6c172a83-ec39-9ec7-12cc-bc9d1d66f9a8" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManagerConfiguration.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManagerConfiguration" ref="true" />
      </containers>
      <file name="e2938b03-b5c5-6fcc-cdfe-0d56c4df87ac" />
    </api>
    <api id="P:Symbiote.Core.Model.ModelManagerConfiguration.Items">
      <topicdata group="api" />
      <apidata name="Items" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Items" />
      <setter name="set_Items" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManagerConfiguration" ref="true" />
      </containers>
      <file name="8b306ab6-5334-ad4f-afea-cbbb075a64c2" />
    </api>
    <api id="T:Symbiote.Core.Model.ModelManagerConfigurationItem">
      <topicdata group="api" />
      <apidata name="ModelManagerConfigurationItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Model.ModelManagerConfigurationItem.#ctor" />
        <element api="M:Symbiote.Core.Model.ModelManagerConfigurationItem.Clone" />
        <element api="M:Symbiote.Core.Model.ModelManagerConfigurationItem.Equals(System.Object)" />
        <element api="P:Symbiote.Core.Model.ModelManagerConfigurationItem.FQN" />
        <element api="M:Symbiote.Core.Model.ModelManagerConfigurationItem.GetHashCode" />
        <element api="P:Symbiote.Core.Model.ModelManagerConfigurationItem.SourceFQN" />
        <element api="M:Symbiote.Core.Model.ModelManagerConfigurationItem.ToString" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
      </containers>
      <file name="e6e8ad49-5522-2d03-acae-0655f771b6d7" />
    </api>
    <api id="Methods.T:Symbiote.Core.Model.ModelManagerConfigurationItem">
      <topicdata name="ModelManagerConfigurationItem" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Model.ModelManagerConfigurationItem" />
      <apidata name="ModelManagerConfigurationItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Model.ModelManagerConfigurationItem.Clone" />
        <element api="M:Symbiote.Core.Model.ModelManagerConfigurationItem.Equals(System.Object)" />
        <element api="M:Symbiote.Core.Model.ModelManagerConfigurationItem.GetHashCode" />
        <element api="M:Symbiote.Core.Model.ModelManagerConfigurationItem.ToString" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" />
      </containers>
      <file name="d02f0674-65ee-7f05-5532-e1ea9432d60a" />
    </api>
    <api id="Properties.T:Symbiote.Core.Model.ModelManagerConfigurationItem">
      <topicdata name="ModelManagerConfigurationItem" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Model.ModelManagerConfigurationItem" />
      <apidata name="ModelManagerConfigurationItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Model.ModelManagerConfigurationItem.FQN" />
        <element api="P:Symbiote.Core.Model.ModelManagerConfigurationItem.SourceFQN" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" />
      </containers>
      <file name="d52cb2fe-4a67-9886-74be-7c460392b7b2" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManagerConfigurationItem.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" ref="true" />
      </containers>
      <file name="364a315c-95f0-638e-d45d-46a863db9b4a" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManagerConfigurationItem.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" ref="true" />
      </containers>
      <file name="55bbfff4-73a9-80fa-43aa-f0133638e5bc" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManagerConfigurationItem.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" ref="true" />
      </containers>
      <file name="fae21ae4-6f59-b71a-a124-c27b11a0783c" />
    </api>
    <api id="P:Symbiote.Core.Model.ModelManagerConfigurationItem.FQN">
      <topicdata group="api" />
      <apidata name="FQN" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FQN" />
      <setter name="set_FQN" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" ref="true" />
      </containers>
      <file name="7efd21be-7d21-d1db-ca26-6fab5b08a586" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManagerConfigurationItem.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" ref="true" />
      </containers>
      <file name="f9953626-bc2f-c66d-d64b-8aa64e9d03d9" />
    </api>
    <api id="P:Symbiote.Core.Model.ModelManagerConfigurationItem.SourceFQN">
      <topicdata group="api" />
      <apidata name="SourceFQN" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceFQN" />
      <setter name="set_SourceFQN" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" ref="true" />
      </containers>
      <file name="c65d1b1f-f7c0-b87d-da7f-cbf000820670" />
    </api>
    <api id="M:Symbiote.Core.Model.ModelManagerConfigurationItem.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Model" />
        <type api="T:Symbiote.Core.Model.ModelManagerConfigurationItem" ref="true" />
      </containers>
      <file name="823a2ca2-7575-c441-b620-28f37a0adac7" />
    </api>
    <api id="N:Symbiote.Core.Platform">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Platform" group="namespace" />
      <elements>
        <element api="T:Symbiote.Core.Platform.Platform" />
        <element api="T:Symbiote.Core.Platform.PlatformDirectories" />
        <element api="T:Symbiote.Core.Platform.PlatformType" />
        <element api="T:Symbiote.Core.Platform.IPlatform" />
        <element api="T:Symbiote.Core.Platform.PlatformManager" />
      </elements>
      <file name="e4b0da34-155a-e6e8-726f-31886dcb8fd0" />
    </api>
    <api id="T:Symbiote.Core.Platform.IPlatform">
      <topicdata group="api" />
      <apidata name="IPlatform" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </implementors>
      <elements>
        <element api="M:Symbiote.Core.Platform.IPlatform.ClearDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ComputeFileChecksum(System.String)" />
        <element api="P:Symbiote.Core.Platform.IPlatform.Connector" />
        <element api="M:Symbiote.Core.Platform.IPlatform.CreateDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.DeleteDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.DeleteFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.DirectoryExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ExtractZip(System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ExtractZipFile(System.String,System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.FileExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.InstantiateConnector(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ListDirectories(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ListFiles(System.String,System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ListZipFiles(System.String,System.String)" />
        <element api="P:Symbiote.Core.Platform.IPlatform.PlatformType" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ReadFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ReadFileLines(System.String)" />
        <element api="P:Symbiote.Core.Platform.IPlatform.Version" />
        <element api="M:Symbiote.Core.Platform.IPlatform.WriteFile(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
      </containers>
      <file name="315509b3-201c-aa65-1823-29146a36734c" />
    </api>
    <api id="Methods.T:Symbiote.Core.Platform.IPlatform">
      <topicdata name="IPlatform" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Platform.IPlatform" />
      <apidata name="IPlatform" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Platform.IPlatform.ClearDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ComputeFileChecksum(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.CreateDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.DeleteDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.DeleteFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.DirectoryExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ExtractZip(System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ExtractZipFile(System.String,System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.FileExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.InstantiateConnector(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ListDirectories(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ListFiles(System.String,System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ListZipFiles(System.String,System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ReadFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.ReadFileLines(System.String)" />
        <element api="M:Symbiote.Core.Platform.IPlatform.WriteFile(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" />
      </containers>
      <file name="c272b4dc-30fb-d113-c1f7-a505ad229c08" />
    </api>
    <api id="Properties.T:Symbiote.Core.Platform.IPlatform">
      <topicdata name="IPlatform" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Platform.IPlatform" />
      <apidata name="IPlatform" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Platform.IPlatform.Connector" />
        <element api="P:Symbiote.Core.Platform.IPlatform.PlatformType" />
        <element api="P:Symbiote.Core.Platform.IPlatform.Version" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" />
      </containers>
      <file name="0a0b6930-3619-606b-1491-454659f2026f" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.ClearDirectory(System.String)">
      <topicdata group="api" />
      <apidata name="ClearDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="6ee385b4-b4d0-811d-a1ce-d3b55ca6a054" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.ComputeFileChecksum(System.String)">
      <topicdata group="api" />
      <apidata name="ComputeFileChecksum" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="f8e42e78-defc-c0e0-3c49-99c1c0018f4b" />
    </api>
    <api id="P:Symbiote.Core.Platform.IPlatform.Connector">
      <topicdata group="api" />
      <apidata name="Connector" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Connector" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="58c916da-2b70-829d-25b1-40b71b17f97f" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.CreateDirectory(System.String)">
      <topicdata group="api" />
      <apidata name="CreateDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="2731d9e9-31e0-3ca0-026d-1f1df928a530" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.DeleteDirectory(System.String)">
      <topicdata group="api" />
      <apidata name="DeleteDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="41bef36f-2598-9f4c-398a-7ab6b5e17d64" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.DeleteFile(System.String)">
      <topicdata group="api" />
      <apidata name="DeleteFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="321612ee-1810-7123-4535-e1c0b336879a" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.DirectoryExists(System.String)">
      <topicdata group="api" />
      <apidata name="DirectoryExists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="082ec487-5ec7-0057-8bce-10e6439c3b75" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.ExtractZip(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ExtractZip" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="zipFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destination">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="clearDestination" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="f7f0f185-1730-9352-2c5b-7bc5c1eff213" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.ExtractZipFile(System.String,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ExtractZipFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="zipFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destination">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="overwrite" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="b69a3533-73ce-00c9-c2a1-931039a67837" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.FileExists(System.String)">
      <topicdata group="api" />
      <apidata name="FileExists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="0b8f196f-c0b2-dafb-db16-a4d87ec4b2a1" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.InstantiateConnector(System.String)">
      <topicdata group="api" />
      <apidata name="InstantiateConnector" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="49878a21-ccbc-3593-201c-690f89335388" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.ListDirectories(System.String)">
      <topicdata group="api" />
      <apidata name="ListDirectories" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="parentDirectory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="dbc83162-baa9-f366-9f57-932d98e28202" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.ListFiles(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ListFiles" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="parentDirectory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchPattern">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="1ae6fd76-bede-6357-9ae6-1e81523421cd" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.ListZipFiles(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ListZipFiles" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="zipFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchPattern">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="0824a790-ed8f-96f6-928f-20b5855ab27f" />
    </api>
    <api id="P:Symbiote.Core.Platform.IPlatform.PlatformType">
      <topicdata group="api" />
      <apidata name="PlatformType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_PlatformType" />
      <returns>
        <type api="T:Symbiote.Core.Platform.PlatformType" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="fd33ba74-9e91-28f8-527b-716d4633b21d" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.ReadFile(System.String)">
      <topicdata group="api" />
      <apidata name="ReadFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="6b0a9175-1fbf-d633-7720-7e1b24b9cae5" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.ReadFileLines(System.String)">
      <topicdata group="api" />
      <apidata name="ReadFileLines" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="f7e6d6f0-72cd-67d5-a68c-2e2f81eb5d3c" />
    </api>
    <api id="P:Symbiote.Core.Platform.IPlatform.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Version" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="05c79f07-b2f9-3e75-9bdd-7a2dffa7752c" />
    </api>
    <api id="M:Symbiote.Core.Platform.IPlatform.WriteFile(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </containers>
      <file name="63785a82-1714-0797-a9d2-ba94d73013f0" />
    </api>
    <api id="T:Symbiote.Core.Platform.Platform">
      <topicdata group="api" />
      <apidata name="Platform" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatform" ref="true" />
          <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatform" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Platform.Platform.#ctor" />
        <element api="M:Symbiote.Core.Platform.Platform.#cctor" />
        <element api="M:Symbiote.Core.Platform.Platform.ClearDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ComputeFileChecksum(System.String)" />
        <element api="P:Symbiote.Core.Platform.Platform.Connector" />
        <element api="M:Symbiote.Core.Platform.Platform.CreateDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DeleteDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DeleteFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DirectoryExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ExtractZip(System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.Platform.ExtractZipFile(System.String,System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.Platform.FileExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.InstantiateConnector(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListDirectories(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListFiles(System.String,System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListZipFiles(System.String,System.String)" />
        <element api="F:Symbiote.Core.Platform.Platform.logger" />
        <element api="P:Symbiote.Core.Platform.Platform.PlatformType" />
        <element api="M:Symbiote.Core.Platform.Platform.ReadFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ReadFileLines(System.String)" />
        <element api="P:Symbiote.Core.Platform.Platform.Version" />
        <element api="M:Symbiote.Core.Platform.Platform.WriteFile(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
      </containers>
      <file name="c3bc948e-76eb-0661-e644-9f2aa333ab70" />
    </api>
    <api id="Methods.T:Symbiote.Core.Platform.Platform">
      <topicdata name="Platform" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Platform.Platform" />
      <apidata name="Platform" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Platform.Platform.ClearDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ComputeFileChecksum(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.CreateDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DeleteDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DeleteFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DirectoryExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ExtractZip(System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.Platform.ExtractZipFile(System.String,System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.Platform.FileExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.InstantiateConnector(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListDirectories(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListFiles(System.String,System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListZipFiles(System.String,System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ReadFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ReadFileLines(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.WriteFile(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" />
      </containers>
      <file name="23cbd933-7aab-ae34-74d9-d085b35cab46" />
    </api>
    <api id="Properties.T:Symbiote.Core.Platform.Platform">
      <topicdata name="Platform" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Platform.Platform" />
      <apidata name="Platform" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Platform.Platform.Connector" />
        <element api="P:Symbiote.Core.Platform.Platform.PlatformType" />
        <element api="P:Symbiote.Core.Platform.Platform.Version" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" />
      </containers>
      <file name="a10b52a6-b383-261d-e7dc-daa5f4540d4a" />
    </api>
    <api id="Fields.T:Symbiote.Core.Platform.Platform">
      <topicdata name="Platform" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Platform.Platform" />
      <apidata name="Platform" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Platform.Platform.logger" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" />
      </containers>
      <file name="9a748d4d-1535-ba4c-3846-abc7f16eae13" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="035baf87-67c6-1c07-b917-23f096881c8b" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="edeb02dc-9079-a727-b50a-5a458ba58561" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.ClearDirectory(System.String)">
      <topicdata group="api" />
      <apidata name="ClearDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.ClearDirectory(System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="3e9f3874-a7b9-a373-370b-f3ffcd509245" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.ComputeFileChecksum(System.String)">
      <topicdata group="api" />
      <apidata name="ComputeFileChecksum" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.ComputeFileChecksum(System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="0767d1cc-5ef9-284d-a448-b82f66b81ed5" />
    </api>
    <api id="P:Symbiote.Core.Platform.Platform.Connector">
      <topicdata group="api" />
      <apidata name="Connector" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Connector" />
      <setter name="set_Connector" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Platform.IPlatform.Connector">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="af3e40d6-5484-ca2d-8e51-680c1f1f9017" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.CreateDirectory(System.String)">
      <topicdata group="api" />
      <apidata name="CreateDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.CreateDirectory(System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="b228b714-3281-8489-2e99-568a13f4c1cd" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.DeleteDirectory(System.String)">
      <topicdata group="api" />
      <apidata name="DeleteDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.DeleteDirectory(System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="1e4d1863-83a3-c8df-4e79-3d0cea53356f" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.DeleteFile(System.String)">
      <topicdata group="api" />
      <apidata name="DeleteFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.DeleteFile(System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="fd531544-4064-9594-e8c2-3e06579f0811" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.DirectoryExists(System.String)">
      <topicdata group="api" />
      <apidata name="DirectoryExists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.DirectoryExists(System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="bdaed289-4568-bae1-09a8-3b4e3b8560ac" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.ExtractZip(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ExtractZip" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="zipFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destination">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="clearDestination" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.ExtractZip(System.String,System.String,System.Boolean)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="81f51a5c-0cd9-7eb0-4fd4-5b383d52b152" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.ExtractZipFile(System.String,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ExtractZipFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="zipFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destination">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="overwrite" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.ExtractZipFile(System.String,System.String,System.String,System.Boolean)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="f94eb76d-1be9-28e9-f2a1-7a554bccdcbd" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.FileExists(System.String)">
      <topicdata group="api" />
      <apidata name="FileExists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.FileExists(System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="67bf316b-24ec-a4f3-048b-528e47ff952c" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.InstantiateConnector(System.String)">
      <topicdata group="api" />
      <apidata name="InstantiateConnector" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.InstantiateConnector(System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="17c5d964-e540-3d68-0e36-04ee0cccfc65" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.ListDirectories(System.String)">
      <topicdata group="api" />
      <apidata name="ListDirectories" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parentDirectory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.ListDirectories(System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="838d34a8-82ec-f49e-f5b1-fb9a87915323" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.ListFiles(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ListFiles" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parentDirectory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchPattern">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.ListFiles(System.String,System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="6636184c-3a67-3c27-2d58-b29bc600033c" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.ListZipFiles(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ListZipFiles" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="zipFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchPattern">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.ListZipFiles(System.String,System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="dbad7a4e-4c78-e1e3-dbf4-8ed640b7bfc1" />
    </api>
    <api id="F:Symbiote.Core.Platform.Platform.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="cf63e4d9-f492-a87f-7d32-8403451ab71f" />
    </api>
    <api id="P:Symbiote.Core.Platform.Platform.PlatformType">
      <topicdata group="api" />
      <apidata name="PlatformType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_PlatformType" />
      <setter name="set_PlatformType" />
      <returns>
        <type api="T:Symbiote.Core.Platform.PlatformType" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Platform.IPlatform.PlatformType">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="884fa0ca-1b6b-563d-a24c-1fbba4e6c9a0" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.ReadFile(System.String)">
      <topicdata group="api" />
      <apidata name="ReadFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.ReadFile(System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="03b0bbc8-f55b-ce3b-dd9c-30e0be3ff090" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.ReadFileLines(System.String)">
      <topicdata group="api" />
      <apidata name="ReadFileLines" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.String" ref="true" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.ReadFileLines(System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="82bba976-1aa5-7a6e-9573-e6510037dd03" />
    </api>
    <api id="P:Symbiote.Core.Platform.Platform.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Version" />
      <setter name="set_Version" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Platform.IPlatform.Version">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="f3554ab6-200a-0944-9c6b-bcb543bdcad5" />
    </api>
    <api id="M:Symbiote.Core.Platform.Platform.WriteFile(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.WriteFile(System.String,System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
      </containers>
      <file name="a4e0248d-0fc2-4bc0-0d0c-71b7292fe2ba" />
    </api>
    <api id="T:Symbiote.Core.Platform.PlatformDirectories">
      <topicdata group="api" />
      <apidata name="PlatformDirectories" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Platform.PlatformDirectories.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})" />
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Archives" />
        <element api="M:Symbiote.Core.Platform.PlatformDirectories.CheckDirectories" />
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Data" />
        <element api="M:Symbiote.Core.Platform.PlatformDirectories.LoadDirectories(System.String)" />
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Logs" />
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Persistence" />
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Plugins" />
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Root" />
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Temp" />
        <element api="M:Symbiote.Core.Platform.PlatformDirectories.ToDictionary" />
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Web" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
      </containers>
      <file name="df165dfa-ba76-ad73-7fe5-a93a149341c1" />
    </api>
    <api id="Methods.T:Symbiote.Core.Platform.PlatformDirectories">
      <topicdata name="PlatformDirectories" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Platform.PlatformDirectories" />
      <apidata name="PlatformDirectories" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Platform.PlatformDirectories.CheckDirectories" />
        <element api="M:Symbiote.Core.Platform.PlatformDirectories.LoadDirectories(System.String)" />
        <element api="M:Symbiote.Core.Platform.PlatformDirectories.ToDictionary" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" />
      </containers>
      <file name="a4c02331-f36e-2100-87f2-c5965d9969f2" />
    </api>
    <api id="Properties.T:Symbiote.Core.Platform.PlatformDirectories">
      <topicdata name="PlatformDirectories" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Platform.PlatformDirectories" />
      <apidata name="PlatformDirectories" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Archives" />
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Data" />
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Logs" />
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Persistence" />
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Plugins" />
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Root" />
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Temp" />
        <element api="P:Symbiote.Core.Platform.PlatformDirectories.Web" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" />
      </containers>
      <file name="8d6e7d5f-81ad-2137-5799-189424508ed4" />
    </api>
    <api id="M:Symbiote.Core.Platform.PlatformDirectories.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="directories">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" ref="true" />
      </containers>
      <file name="8b77b7d7-0158-2ded-0881-e354fdba068f" />
    </api>
    <api id="P:Symbiote.Core.Platform.PlatformDirectories.Archives">
      <topicdata group="api" />
      <apidata name="Archives" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Archives" />
      <setter name="set_Archives" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" ref="true" />
      </containers>
      <file name="bbd193b8-988a-0fd3-000a-71c2110e522b" />
    </api>
    <api id="M:Symbiote.Core.Platform.PlatformDirectories.CheckDirectories">
      <topicdata group="api" />
      <apidata name="CheckDirectories" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" ref="true" />
      </containers>
      <file name="22ae8d3c-1ed9-7588-d1fd-9fff6bb63511" />
    </api>
    <api id="P:Symbiote.Core.Platform.PlatformDirectories.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Data" />
      <setter name="set_Data" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" ref="true" />
      </containers>
      <file name="5c13e3c6-8d21-54fa-e8fa-c56ce6204844" />
    </api>
    <api id="M:Symbiote.Core.Platform.PlatformDirectories.LoadDirectories(System.String)">
      <topicdata group="api" />
      <apidata name="LoadDirectories" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directories">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Platform.PlatformDirectories" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" ref="true" />
      </containers>
      <file name="4a41a812-d39e-ed66-ce30-9d9469824c96" />
    </api>
    <api id="P:Symbiote.Core.Platform.PlatformDirectories.Logs">
      <topicdata group="api" />
      <apidata name="Logs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Logs" />
      <setter name="set_Logs" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" ref="true" />
      </containers>
      <file name="7c256b36-d8da-d616-d2f4-41bb9a7168b6" />
    </api>
    <api id="P:Symbiote.Core.Platform.PlatformDirectories.Persistence">
      <topicdata group="api" />
      <apidata name="Persistence" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Persistence" />
      <setter name="set_Persistence" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" ref="true" />
      </containers>
      <file name="05dc97e6-d18c-71d8-e016-c3526be0a29f" />
    </api>
    <api id="P:Symbiote.Core.Platform.PlatformDirectories.Plugins">
      <topicdata group="api" />
      <apidata name="Plugins" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Plugins" />
      <setter name="set_Plugins" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" ref="true" />
      </containers>
      <file name="1f5e27d1-7f4b-562b-5e06-4c3dfd0ea568" />
    </api>
    <api id="P:Symbiote.Core.Platform.PlatformDirectories.Root">
      <topicdata group="api" />
      <apidata name="Root" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Root" />
      <setter name="set_Root" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" ref="true" />
      </containers>
      <file name="cc041484-12d6-87d7-bbf7-e8f2e4c2cfb6" />
    </api>
    <api id="P:Symbiote.Core.Platform.PlatformDirectories.Temp">
      <topicdata group="api" />
      <apidata name="Temp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Temp" />
      <setter name="set_Temp" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" ref="true" />
      </containers>
      <file name="2a314df0-cc6b-a4db-d773-3fae704457a3" />
    </api>
    <api id="M:Symbiote.Core.Platform.PlatformDirectories.ToDictionary">
      <topicdata group="api" />
      <apidata name="ToDictionary" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" ref="true" />
      </containers>
      <file name="34bf43c8-5032-1549-288a-14dec82f5c68" />
    </api>
    <api id="P:Symbiote.Core.Platform.PlatformDirectories.Web">
      <topicdata group="api" />
      <apidata name="Web" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Web" />
      <setter name="set_Web" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" ref="true" />
      </containers>
      <file name="dbbc3b2a-304c-b33b-370b-b8054b827212" />
    </api>
    <api id="T:Symbiote.Core.Platform.PlatformManager">
      <topicdata group="api" />
      <apidata name="PlatformManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.IManager" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Platform.PlatformManager.#ctor(Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Platform.PlatformManager.#cctor" />
        <element api="P:Symbiote.Core.Platform.PlatformManager.Directories" />
        <element api="M:Symbiote.Core.Platform.PlatformManager.GetDirectories" />
        <element api="M:Symbiote.Core.Platform.PlatformManager.GetPlatformType" />
        <element api="F:Symbiote.Core.Platform.PlatformManager.instance" />
        <element api="M:Symbiote.Core.Platform.PlatformManager.Instance(Symbiote.Core.ProgramManager)" />
        <element api="F:Symbiote.Core.Platform.PlatformManager.logger" />
        <element api="F:Symbiote.Core.Platform.PlatformManager.manager" />
        <element api="P:Symbiote.Core.Platform.PlatformManager.Platform" />
        <element api="M:Symbiote.Core.Platform.PlatformManager.Restart" />
        <element api="M:Symbiote.Core.Platform.PlatformManager.Start" />
        <element api="P:Symbiote.Core.Platform.PlatformManager.State" />
        <element api="M:Symbiote.Core.Platform.PlatformManager.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
      </containers>
      <file name="cf60bd94-53a4-c4f0-a1dc-097c442fc432" />
    </api>
    <api id="Methods.T:Symbiote.Core.Platform.PlatformManager">
      <topicdata name="PlatformManager" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Platform.PlatformManager" />
      <apidata name="PlatformManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Platform.PlatformManager.GetDirectories" />
        <element api="M:Symbiote.Core.Platform.PlatformManager.GetPlatformType" />
        <element api="M:Symbiote.Core.Platform.PlatformManager.Instance(Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Platform.PlatformManager.Restart" />
        <element api="M:Symbiote.Core.Platform.PlatformManager.Start" />
        <element api="M:Symbiote.Core.Platform.PlatformManager.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" />
      </containers>
      <file name="3e003ff4-0e34-f26a-79b3-8857917e721f" />
    </api>
    <api id="Properties.T:Symbiote.Core.Platform.PlatformManager">
      <topicdata name="PlatformManager" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Platform.PlatformManager" />
      <apidata name="PlatformManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Platform.PlatformManager.Directories" />
        <element api="P:Symbiote.Core.Platform.PlatformManager.Platform" />
        <element api="P:Symbiote.Core.Platform.PlatformManager.State" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" />
      </containers>
      <file name="d8b458b2-7a25-85c1-00ae-368e0e7bb950" />
    </api>
    <api id="Fields.T:Symbiote.Core.Platform.PlatformManager">
      <topicdata name="PlatformManager" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Platform.PlatformManager" />
      <apidata name="PlatformManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Platform.PlatformManager.instance" />
        <element api="F:Symbiote.Core.Platform.PlatformManager.logger" />
        <element api="F:Symbiote.Core.Platform.PlatformManager.manager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" />
      </containers>
      <file name="8df8a346-a331-56ef-20b1-08a3b8905d13" />
    </api>
    <api id="M:Symbiote.Core.Platform.PlatformManager.#ctor(Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" special="true" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </containers>
      <file name="a4862577-2b97-0fb6-d722-31ce7bc9a6ea" />
    </api>
    <api id="M:Symbiote.Core.Platform.PlatformManager.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </containers>
      <file name="449c3f07-f8bd-5e5f-1869-d60b7a5929f1" />
    </api>
    <api id="P:Symbiote.Core.Platform.PlatformManager.Directories">
      <topicdata group="api" />
      <apidata name="Directories" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Directories" />
      <setter name="set_Directories" />
      <returns>
        <type api="T:Symbiote.Core.Platform.PlatformDirectories" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </containers>
      <file name="0903cc26-1ea1-d188-eca6-c270a1a1389c" />
    </api>
    <api id="M:Symbiote.Core.Platform.PlatformManager.GetDirectories">
      <topicdata group="api" />
      <apidata name="GetDirectories" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </containers>
      <file name="6dffb9c0-388b-e37f-7208-c29c143c4b5e" />
    </api>
    <api id="M:Symbiote.Core.Platform.PlatformManager.GetPlatformType">
      <topicdata group="api" />
      <apidata name="GetPlatformType" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Platform.PlatformType" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </containers>
      <file name="7cb0832e-5d82-cfa6-24d6-1ca900f3c3fb" />
    </api>
    <api id="F:Symbiote.Core.Platform.PlatformManager.instance">
      <topicdata group="api" />
      <apidata name="instance" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </containers>
      <file name="ac24a2e9-76bb-929c-3ab1-a97646479517" />
    </api>
    <api id="M:Symbiote.Core.Platform.PlatformManager.Instance(Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </containers>
      <file name="9cc7eda6-648c-852c-6fef-22ecc116858c" />
    </api>
    <api id="F:Symbiote.Core.Platform.PlatformManager.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </containers>
      <file name="56b4a8d1-6597-5073-430a-63ca47055cea" />
    </api>
    <api id="F:Symbiote.Core.Platform.PlatformManager.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </containers>
      <file name="df37fa2b-c498-f1a4-d75a-d604474dd2b1" />
    </api>
    <api id="P:Symbiote.Core.Platform.PlatformManager.Platform">
      <topicdata group="api" />
      <apidata name="Platform" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Platform" />
      <setter name="set_Platform" />
      <returns>
        <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </containers>
      <file name="6ef52805-d8ee-a672-ef64-7f5095da3248" />
    </api>
    <api id="M:Symbiote.Core.Platform.PlatformManager.Restart">
      <topicdata group="api" />
      <apidata name="Restart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Restart">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </containers>
      <file name="9f49f797-58b5-2e0d-c443-f2c01688b2a1" />
    </api>
    <api id="M:Symbiote.Core.Platform.PlatformManager.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Start">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </containers>
      <file name="f871febd-2927-e48b-b219-4f4d5339ce6d" />
    </api>
    <api id="P:Symbiote.Core.Platform.PlatformManager.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_State" />
      <setter name="set_State" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.IManager.State">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </containers>
      <file name="de3afbbd-7dbf-083e-273e-979bc66a0daf" />
    </api>
    <api id="M:Symbiote.Core.Platform.PlatformManager.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Stop">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformManager" ref="true" />
      </containers>
      <file name="aed0632d-76bd-90d5-9fcb-e844982c345c" />
    </api>
    <api id="T:Symbiote.Core.Platform.PlatformType">
      <topicdata group="api" />
      <apidata name="PlatformType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Platform.PlatformType.Unknown" />
        <element api="F:Symbiote.Core.Platform.PlatformType.Windows" />
        <element api="F:Symbiote.Core.Platform.PlatformType.UNIX" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
      </containers>
      <file name="b9c9eb29-c1a6-0d7a-204d-5cf0ee1f2f66" />
    </api>
    <api id="F:Symbiote.Core.Platform.PlatformType.UNIX">
      <topicdata group="api" notopic="" />
      <apidata name="UNIX" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Platform.PlatformType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformType" ref="false" />
      </containers>
      <file name="be6cefeb-5f0e-c1e5-63fb-db81f1c99787" />
    </api>
    <api id="F:Symbiote.Core.Platform.PlatformType.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Platform.PlatformType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformType" ref="false" />
      </containers>
      <file name="d4f7433b-5fc4-88f6-766c-c684121cf5bf" />
    </api>
    <api id="F:Symbiote.Core.Platform.PlatformType.Windows">
      <topicdata group="api" notopic="" />
      <apidata name="Windows" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Platform.PlatformType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform" />
        <type api="T:Symbiote.Core.Platform.PlatformType" ref="false" />
      </containers>
      <file name="bf246a3a-e0f1-4cd9-a9e6-7f2cc08393b9" />
    </api>
    <api id="N:Symbiote.Core.Platform.UNIX">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Platform.UNIX" group="namespace" />
      <elements>
        <element api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" />
        <element api="T:Symbiote.Core.Platform.UNIX.UNIXPlatform" />
      </elements>
      <file name="019799aa-5e06-6334-c1d3-9a4d75edbc7c" />
    </api>
    <api id="T:Symbiote.Core.Platform.UNIX.UNIXPlatform">
      <topicdata group="api" />
      <apidata name="UNIXPlatform" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Symbiote.Core.Platform.Platform.ClearDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ComputeFileChecksum(System.String)" />
        <element api="P:Symbiote.Core.Platform.Platform.Connector" />
        <element api="M:Symbiote.Core.Platform.Platform.CreateDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DeleteDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DeleteFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DirectoryExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ExtractZip(System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.Platform.ExtractZipFile(System.String,System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.Platform.FileExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListDirectories(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListFiles(System.String,System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListZipFiles(System.String,System.String)" />
        <element api="P:Symbiote.Core.Platform.Platform.PlatformType" />
        <element api="M:Symbiote.Core.Platform.Platform.ReadFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ReadFileLines(System.String)" />
        <element api="P:Symbiote.Core.Platform.Platform.Version" />
        <element api="M:Symbiote.Core.Platform.Platform.WriteFile(System.String,System.String)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatform.#ctor" />
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatform.InstantiateConnector(System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
      </containers>
      <file name="576fdba9-a660-3600-19c4-157590426f74" />
    </api>
    <api id="Methods.T:Symbiote.Core.Platform.UNIX.UNIXPlatform">
      <topicdata name="UNIXPlatform" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Platform.UNIX.UNIXPlatform" />
      <apidata name="UNIXPlatform" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Platform.Platform.ClearDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ComputeFileChecksum(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.CreateDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DeleteDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DeleteFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DirectoryExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ExtractZip(System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.Platform.ExtractZipFile(System.String,System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.Platform.FileExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListDirectories(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListFiles(System.String,System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListZipFiles(System.String,System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ReadFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ReadFileLines(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.WriteFile(System.String,System.String)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatform.InstantiateConnector(System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatform" />
      </containers>
      <file name="297923b4-a80b-f53c-ae12-e133a8a28069" />
    </api>
    <api id="Properties.T:Symbiote.Core.Platform.UNIX.UNIXPlatform">
      <topicdata name="UNIXPlatform" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Platform.UNIX.UNIXPlatform" />
      <apidata name="UNIXPlatform" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Platform.Platform.Connector" />
        <element api="P:Symbiote.Core.Platform.Platform.PlatformType" />
        <element api="P:Symbiote.Core.Platform.Platform.Version" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatform" />
      </containers>
      <file name="adce80a4-38a5-de40-0346-bf4159c29025" />
    </api>
    <api id="M:Symbiote.Core.Platform.UNIX.UNIXPlatform.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatform" ref="true" />
      </containers>
      <file name="4d424035-4cc3-4b4a-86d0-fb21aa8c6cff" />
    </api>
    <api id="M:Symbiote.Core.Platform.UNIX.UNIXPlatform.InstantiateConnector(System.String)">
      <topicdata group="api" />
      <apidata name="InstantiateConnector" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Symbiote.Core.Platform.Platform.InstantiateConnector(System.String)">
          <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.InstantiateConnector(System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatform" ref="true" />
      </containers>
      <file name="170ddbae-9a41-8fbd-f4ac-1642faca4834" />
    </api>
    <api id="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector">
      <topicdata group="api" />
      <apidata name="UNIXPlatformConnector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
        <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
        <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.#ctor(System.String)" />
        <element api="Overload:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Browse">
          <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Browse" />
          <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Browse(Symbiote.Core.Item)" />
        </element>
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Configuration" />
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.ConfigurationDefinition" />
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Configure(System.String)" />
        <element api="F:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.cpuIdle" />
        <element api="F:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.cpuUsed" />
        <element api="Overload:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Find">
          <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Find(System.String)" />
          <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Find(Symbiote.Core.Item,System.String)" />
        </element>
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.FQN" />
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.InitializeItems" />
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.InstanceName" />
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.IsConfigured" />
        <element api="F:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.itemRoot" />
        <element api="F:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.lastCPUIdle" />
        <element api="F:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.lastCPUUsed" />
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Name" />
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.PluginType" />
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Read(Symbiote.Core.Item)" />
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Restart" />
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Start" />
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Stop" />
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Version" />
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Write(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
      </containers>
      <file name="86eaa3d6-682d-4cb2-511f-945484bcf6d7" />
    </api>
    <api id="Methods.T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector">
      <topicdata name="UNIXPlatformConnector" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" />
      <apidata name="UNIXPlatformConnector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Browse">
          <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Browse" />
          <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Browse(Symbiote.Core.Item)" />
        </element>
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Configure(System.String)" />
        <element api="Overload:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Find">
          <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Find(System.String)" />
          <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Find(Symbiote.Core.Item,System.String)" />
        </element>
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.InitializeItems" />
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Read(Symbiote.Core.Item)" />
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Restart" />
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Start" />
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Stop" />
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Write(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" />
      </containers>
      <file name="c324428d-d8d9-a7c3-9570-7c53d3403bce" />
    </api>
    <api id="Properties.T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector">
      <topicdata name="UNIXPlatformConnector" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" />
      <apidata name="UNIXPlatformConnector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Configuration" />
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.ConfigurationDefinition" />
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.FQN" />
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.InstanceName" />
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.IsConfigured" />
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Name" />
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.PluginType" />
        <element api="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Version" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" />
      </containers>
      <file name="5dc9f220-3180-1d3b-f356-c40335e5dcc8" />
    </api>
    <api id="Fields.T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector">
      <topicdata name="UNIXPlatformConnector" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" />
      <apidata name="UNIXPlatformConnector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.cpuIdle" />
        <element api="F:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.cpuUsed" />
        <element api="F:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.itemRoot" />
        <element api="F:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.lastCPUIdle" />
        <element api="F:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.lastCPUUsed" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" />
      </containers>
      <file name="98283c43-e555-f701-76e7-0d7e2f7c952c" />
    </api>
    <api id="Overload:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Browse">
      <topicdata name="Browse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Browse" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Browse" />
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Browse(Symbiote.Core.Item)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="975d4604-03da-6c22-be32-985ace4a7cb3" />
    </api>
    <api id="Overload:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Find">
      <topicdata name="Find" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Find" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Find(System.String)" />
        <element api="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Find(Symbiote.Core.Item,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="489aa8ed-81ed-0335-f168-0f3fb4fe564e" />
    </api>
    <api id="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="052b5285-5964-cae8-2caf-b02d3b368c16" />
    </api>
    <api id="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Browse">
      <topicdata group="api" />
      <apidata name="Browse" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Browse" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Plugin.Connector.IConnector.Browse">
          <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="2deb37cf-2c77-a079-ebfc-b05feb5a758e" />
    </api>
    <api id="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Browse(Symbiote.Core.Item)">
      <topicdata group="api" />
      <apidata name="Browse" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Browse" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="root">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Plugin.Connector.IConnector.Browse(Symbiote.Core.Item)">
          <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="42ca245c-8836-3db0-c39c-96ab1c1979c8" />
    </api>
    <api id="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Configuration" />
      <setter name="set_Configuration" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="47d5a556-d9ea-3b94-e807-66a642b2924c" />
    </api>
    <api id="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.ConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="ConfigurationDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ConfigurationDefinition" />
      <setter name="set_ConfigurationDefinition" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="4403b4e7-353d-fcf4-689e-dedde9b93711" />
    </api>
    <api id="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Configure(System.String)">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="configuration">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="fd9408a4-369a-07bb-cdef-bd55a673dad7" />
    </api>
    <api id="F:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.cpuIdle">
      <topicdata group="api" />
      <apidata name="cpuIdle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="9afe5b61-f177-fb9f-79c1-5e1f77963b69" />
    </api>
    <api id="F:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.cpuUsed">
      <topicdata group="api" />
      <apidata name="cpuUsed" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="d3f1717c-9816-5465-6261-30e92e581f73" />
    </api>
    <api id="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Find(Symbiote.Core.Item,System.String)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="root">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="dbf605e6-7915-c9fa-074f-864d04b1917c" />
    </api>
    <api id="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Find(System.String)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Find" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Plugin.Connector.IConnector.Find(System.String)">
          <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="ded32e2c-3415-d6e5-7575-f6771551918c" />
    </api>
    <api id="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.FQN">
      <topicdata group="api" />
      <apidata name="FQN" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_FQN" />
      <setter name="set_FQN" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.FQN">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="c2887273-f6a5-a0c3-b9c3-c213ae426cf8" />
    </api>
    <api id="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.InitializeItems">
      <topicdata group="api" />
      <apidata name="InitializeItems" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="39637464-2fab-8935-890a-23aee365cb3a" />
    </api>
    <api id="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.InstanceName">
      <topicdata group="api" />
      <apidata name="InstanceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_InstanceName" />
      <setter name="set_InstanceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPluginInstance.InstanceName">
          <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="5a1ab358-857e-7286-fd5c-eca4d530fe92" />
    </api>
    <api id="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.IsConfigured">
      <topicdata group="api" />
      <apidata name="IsConfigured" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsConfigured" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="9bd1019c-4008-0b71-4527-70208eb67f0d" />
    </api>
    <api id="F:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.itemRoot">
      <topicdata group="api" />
      <apidata name="itemRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="4a9d884e-206e-cfd8-df2e-56fbf40d5fe9" />
    </api>
    <api id="F:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.lastCPUIdle">
      <topicdata group="api" />
      <apidata name="lastCPUIdle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="2aa96b26-003b-216a-92ea-c90184ad4db6" />
    </api>
    <api id="F:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.lastCPUUsed">
      <topicdata group="api" />
      <apidata name="lastCPUUsed" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="e78b741d-ea50-80b8-80ce-eb643d90ced5" />
    </api>
    <api id="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.Name">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="c9d799ac-3d39-5486-a299-ed715b86331f" />
    </api>
    <api id="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.PluginType">
      <topicdata group="api" />
      <apidata name="PluginType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PluginType" />
      <setter name="set_PluginType" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.PluginType">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="9182b327-8b09-9f49-8ed8-233bdbfde857" />
    </api>
    <api id="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Read(Symbiote.Core.Item)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Plugin.Connector.IConnector.Read(Symbiote.Core.Item)">
          <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="b1b07265-5665-3268-f294-a46aa74719bb" />
    </api>
    <api id="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Restart">
      <topicdata group="api" />
      <apidata name="Restart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Plugin.IPluginInstance.Restart">
          <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="ab146f6d-f213-0ec8-6913-53966aca70c0" />
    </api>
    <api id="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Plugin.IPluginInstance.Start">
          <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="7e3a5b84-9fe2-64d3-3a9d-203cb9177634" />
    </api>
    <api id="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Plugin.IPluginInstance.Stop">
          <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="c31e09b9-f32f-2ea3-b3ef-7d2fbec66791" />
    </api>
    <api id="P:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Version" />
      <setter name="set_Version" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.Version">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="532e6d58-ee3a-f93e-d5ce-a1086363fcac" />
    </api>
    <api id="M:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector.Write(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.UNIX" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </containers>
      <file name="9049f874-508b-e891-379b-2d0761f52b68" />
    </api>
    <api id="N:Symbiote.Core.Platform.Windows">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Platform.Windows" group="namespace" />
      <elements>
        <element api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" />
        <element api="T:Symbiote.Core.Platform.Windows.WindowsPlatform" />
      </elements>
      <file name="439de06d-5fea-791a-a3d2-7c0fde89ace6" />
    </api>
    <api id="T:Symbiote.Core.Platform.Windows.WindowsPlatform">
      <topicdata group="api" />
      <apidata name="WindowsPlatform" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Symbiote.Core.Platform.Platform.ClearDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ComputeFileChecksum(System.String)" />
        <element api="P:Symbiote.Core.Platform.Platform.Connector" />
        <element api="M:Symbiote.Core.Platform.Platform.CreateDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DeleteDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DeleteFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DirectoryExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ExtractZip(System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.Platform.ExtractZipFile(System.String,System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.Platform.FileExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListDirectories(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListFiles(System.String,System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListZipFiles(System.String,System.String)" />
        <element api="P:Symbiote.Core.Platform.Platform.PlatformType" />
        <element api="M:Symbiote.Core.Platform.Platform.ReadFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ReadFileLines(System.String)" />
        <element api="P:Symbiote.Core.Platform.Platform.Version" />
        <element api="M:Symbiote.Core.Platform.Platform.WriteFile(System.String,System.String)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatform.#ctor" />
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatform.InstantiateConnector(System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
      </containers>
      <file name="ffdfca7a-f05f-f58d-169c-1c31961beb20" />
    </api>
    <api id="Methods.T:Symbiote.Core.Platform.Windows.WindowsPlatform">
      <topicdata name="WindowsPlatform" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Platform.Windows.WindowsPlatform" />
      <apidata name="WindowsPlatform" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Platform.Platform.ClearDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ComputeFileChecksum(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.CreateDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DeleteDirectory(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DeleteFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.DirectoryExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ExtractZip(System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.Platform.ExtractZipFile(System.String,System.String,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Platform.Platform.FileExists(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListDirectories(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListFiles(System.String,System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ListZipFiles(System.String,System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ReadFile(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.ReadFileLines(System.String)" />
        <element api="M:Symbiote.Core.Platform.Platform.WriteFile(System.String,System.String)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatform.InstantiateConnector(System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatform" />
      </containers>
      <file name="6dc6672a-c2a6-2dde-a02b-10f1682a43f0" />
    </api>
    <api id="Properties.T:Symbiote.Core.Platform.Windows.WindowsPlatform">
      <topicdata name="WindowsPlatform" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Platform.Windows.WindowsPlatform" />
      <apidata name="WindowsPlatform" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Platform.Platform.Connector" />
        <element api="P:Symbiote.Core.Platform.Platform.PlatformType" />
        <element api="P:Symbiote.Core.Platform.Platform.Version" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatform" />
      </containers>
      <file name="09d2ae54-63ce-26a2-fab4-8d69485f60d4" />
    </api>
    <api id="M:Symbiote.Core.Platform.Windows.WindowsPlatform.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatform" ref="true" />
      </containers>
      <file name="d9f57b3a-a92b-4b02-0dce-f6c5c66187a8" />
    </api>
    <api id="M:Symbiote.Core.Platform.Windows.WindowsPlatform.InstantiateConnector(System.String)">
      <topicdata group="api" />
      <apidata name="InstantiateConnector" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Symbiote.Core.Platform.Platform.InstantiateConnector(System.String)">
          <type api="T:Symbiote.Core.Platform.Platform" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Platform.IPlatform.InstantiateConnector(System.String)">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatform" ref="true" />
      </containers>
      <file name="c701c244-9794-46a9-4eda-5b0293cdc581" />
    </api>
    <api id="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector">
      <topicdata group="api" />
      <apidata name="WindowsPlatformConnector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
        <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
        <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.#ctor(System.String)" />
        <element api="Overload:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browse">
          <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browse" />
          <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browse(Symbiote.Core.Item)" />
        </element>
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browseable" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Configuration" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.ConfigurationDefinition" />
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Configure(System.String)" />
        <element api="F:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.cpuIdle" />
        <element api="F:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.cpuUsed" />
        <element api="Overload:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Find">
          <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Find(System.String)" />
          <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Find(Symbiote.Core.Item,System.String)" />
        </element>
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.FQN" />
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.InitializeItems" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.InstanceName" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.IsConfigured" />
        <element api="F:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.itemRoot" />
        <element api="F:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.lastCPUIdle" />
        <element api="F:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.lastCPUUsed" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Name" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.PluginType" />
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Read(Symbiote.Core.Item)" />
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Restart" />
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Start" />
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Stop" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Version" />
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Write(System.String,System.Object)" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Writeable" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
      </containers>
      <file name="f9e19f37-3d76-9529-c0b1-316a2a133189" />
    </api>
    <api id="Methods.T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector">
      <topicdata name="WindowsPlatformConnector" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" />
      <apidata name="WindowsPlatformConnector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browse">
          <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browse" />
          <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browse(Symbiote.Core.Item)" />
        </element>
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Configure(System.String)" />
        <element api="Overload:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Find">
          <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Find(System.String)" />
          <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Find(Symbiote.Core.Item,System.String)" />
        </element>
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.InitializeItems" />
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Read(Symbiote.Core.Item)" />
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Restart" />
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Start" />
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Stop" />
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Write(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" />
      </containers>
      <file name="91b4ab8f-c4cc-71b8-3e47-d8cdd7a234b9" />
    </api>
    <api id="Properties.T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector">
      <topicdata name="WindowsPlatformConnector" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" />
      <apidata name="WindowsPlatformConnector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browseable" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Configuration" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.ConfigurationDefinition" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.FQN" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.InstanceName" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.IsConfigured" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Name" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.PluginType" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Version" />
        <element api="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Writeable" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" />
      </containers>
      <file name="110c58e6-9dae-44ff-68c5-1acacad9d179" />
    </api>
    <api id="Fields.T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector">
      <topicdata name="WindowsPlatformConnector" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" />
      <apidata name="WindowsPlatformConnector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.cpuIdle" />
        <element api="F:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.cpuUsed" />
        <element api="F:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.itemRoot" />
        <element api="F:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.lastCPUIdle" />
        <element api="F:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.lastCPUUsed" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" />
      </containers>
      <file name="14d239db-7034-0f0b-9786-2f268c207d6e" />
    </api>
    <api id="Overload:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browse">
      <topicdata name="Browse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Browse" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browse" />
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browse(Symbiote.Core.Item)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="87631d2b-709b-6e4a-7663-115fd80e19d4" />
    </api>
    <api id="Overload:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Find">
      <topicdata name="Find" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Find" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Find(System.String)" />
        <element api="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Find(Symbiote.Core.Item,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="bb8bf30e-8c40-419d-7d31-f4d2d5ae7dad" />
    </api>
    <api id="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="18ebb2f2-c510-ba3d-e694-1479f3dd6337" />
    </api>
    <api id="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browse">
      <topicdata group="api" />
      <apidata name="Browse" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browse" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Plugin.Connector.IConnector.Browse">
          <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="cb7716ad-3c17-b7ac-d353-c0b515f1e6f1" />
    </api>
    <api id="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browse(Symbiote.Core.Item)">
      <topicdata group="api" />
      <apidata name="Browse" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browse" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="root">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Plugin.Connector.IConnector.Browse(Symbiote.Core.Item)">
          <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="b4cb9b01-6c56-abd9-e8cc-8dd5267bc85a" />
    </api>
    <api id="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Browseable">
      <topicdata group="api" />
      <apidata name="Browseable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Browseable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="eea3b855-357b-6be4-dfeb-efea42627553" />
    </api>
    <api id="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Configuration" />
      <setter name="set_Configuration" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="8e86fd3c-a95f-19f0-196c-16c14c973b64" />
    </api>
    <api id="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.ConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="ConfigurationDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ConfigurationDefinition" />
      <setter name="set_ConfigurationDefinition" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="4dc87208-c1d3-44c4-c7f6-970c902cc633" />
    </api>
    <api id="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Configure(System.String)">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="configuration">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="885363b2-4222-7c85-3436-89eb62b9b628" />
    </api>
    <api id="F:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.cpuIdle">
      <topicdata group="api" />
      <apidata name="cpuIdle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="08872527-b6eb-3420-dcc5-536d6baf0763" />
    </api>
    <api id="F:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.cpuUsed">
      <topicdata group="api" />
      <apidata name="cpuUsed" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="1b906a76-f920-f1d4-f66d-95767b2ec01a" />
    </api>
    <api id="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Find(Symbiote.Core.Item,System.String)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="root">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="c11fd8ea-265a-78bb-9649-7d4214e921a6" />
    </api>
    <api id="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Find(System.String)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Find" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Plugin.Connector.IConnector.Find(System.String)">
          <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="58d240b6-613a-c3dd-a0a1-8704763fae79" />
    </api>
    <api id="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.FQN">
      <topicdata group="api" />
      <apidata name="FQN" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_FQN" />
      <setter name="set_FQN" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.FQN">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="0793194d-af10-afe0-2d90-bddaeb7e2351" />
    </api>
    <api id="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.InitializeItems">
      <topicdata group="api" />
      <apidata name="InitializeItems" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="7c981224-3de6-3e4b-68a6-3395e97bb967" />
    </api>
    <api id="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.InstanceName">
      <topicdata group="api" />
      <apidata name="InstanceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_InstanceName" />
      <setter name="set_InstanceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPluginInstance.InstanceName">
          <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="2a04e65d-3e7a-a43f-9cde-780b678b11f7" />
    </api>
    <api id="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.IsConfigured">
      <topicdata group="api" />
      <apidata name="IsConfigured" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsConfigured" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="deae1b4b-d30a-4eb6-a3a1-2f910a3c15b3" />
    </api>
    <api id="F:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.itemRoot">
      <topicdata group="api" />
      <apidata name="itemRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="692fb685-2f1b-b84b-e39b-6d8fc803dcf8" />
    </api>
    <api id="F:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.lastCPUIdle">
      <topicdata group="api" />
      <apidata name="lastCPUIdle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="7bca8493-2e66-a046-417c-08543e468ce7" />
    </api>
    <api id="F:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.lastCPUUsed">
      <topicdata group="api" />
      <apidata name="lastCPUUsed" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="7b2bc780-b1d8-9e45-7c7f-ab3a0980a836" />
    </api>
    <api id="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.Name">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="0e160c63-0dd9-1afb-a7f9-e09bc53a9e10" />
    </api>
    <api id="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.PluginType">
      <topicdata group="api" />
      <apidata name="PluginType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PluginType" />
      <setter name="set_PluginType" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.PluginType">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="5ffb8f55-a453-8c4d-e85a-3b5ba3162a11" />
    </api>
    <api id="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Read(Symbiote.Core.Item)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Plugin.Connector.IConnector.Read(Symbiote.Core.Item)">
          <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="f7a5bc28-2b84-2cfe-4303-2cf428bd5197" />
    </api>
    <api id="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Restart">
      <topicdata group="api" />
      <apidata name="Restart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Plugin.IPluginInstance.Restart">
          <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="c6164047-4f39-8e45-56bd-ada4665f14f5" />
    </api>
    <api id="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Plugin.IPluginInstance.Start">
          <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="70d82500-5ae8-523d-bfed-00265ccd7f00" />
    </api>
    <api id="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Plugin.IPluginInstance.Stop">
          <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="aeb05886-6b7a-a7ad-d05b-044e0bd1e129" />
    </api>
    <api id="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Version" />
      <setter name="set_Version" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.Version">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="fcc7f642-d62f-41ac-c5d3-e15fe0b0b3c0" />
    </api>
    <api id="M:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Write(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="7f09f482-5820-1f05-f08e-31cdc381527e" />
    </api>
    <api id="P:Symbiote.Core.Platform.Windows.WindowsPlatformConnector.Writeable">
      <topicdata group="api" />
      <apidata name="Writeable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Writeable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Platform.Windows" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
      </containers>
      <file name="da81f93c-3acc-e62e-0544-c8c4a7c0f283" />
    </api>
    <api id="N:Symbiote.Core.Plugin">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Plugin" group="namespace" />
      <elements>
        <element api="T:Symbiote.Core.Plugin.IEndpoint" />
        <element api="T:Symbiote.Core.Plugin.IPluginInstance" />
        <element api="T:Symbiote.Core.Plugin.Plugin" />
        <element api="T:Symbiote.Core.Plugin.PluginArchive" />
        <element api="T:Symbiote.Core.Plugin.InvalidPluginArchive" />
        <element api="T:Symbiote.Core.Plugin.PluginArchiveLoadResult" />
        <element api="T:Symbiote.Core.Plugin.PluginManagerConfiguration" />
        <element api="T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance" />
        <element api="T:Symbiote.Core.Plugin.PluginType" />
        <element api="T:Symbiote.Core.Plugin.PluginTypeManager`1" />
        <element api="T:Symbiote.Core.Plugin.IPlugin" />
        <element api="T:Symbiote.Core.Plugin.PluginAuthorization" />
        <element api="T:Symbiote.Core.Plugin.PluginAssembly" />
        <element api="T:Symbiote.Core.Plugin.PluginManager" />
      </elements>
      <file name="c032e937-9bd2-14af-a0c0-bb80170c8f00" />
    </api>
    <api id="T:Symbiote.Core.Plugin.IEndpoint">
      <topicdata group="api" />
      <apidata name="IEndpoint" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
        <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
      </implements>
      <elements>
        <element api="M:Symbiote.Core.Plugin.IEndpoint.Send(System.Object)" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.FQN" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Name" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.PluginType" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Version" />
        <element api="P:Symbiote.Core.Plugin.IPluginInstance.InstanceName" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Restart" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Start" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
      </containers>
      <file name="abc66247-95b4-b269-8baa-ff154ecc9443" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.IEndpoint">
      <topicdata name="IEndpoint" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.IEndpoint" />
      <apidata name="IEndpoint" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.IEndpoint.Send(System.Object)" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Restart" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Start" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.IEndpoint" />
      </containers>
      <file name="1dbc4452-f610-b0af-5883-4b2d11c8b436" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.IEndpoint">
      <topicdata name="IEndpoint" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.IEndpoint" />
      <apidata name="IEndpoint" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.IPlugin.FQN" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Name" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.PluginType" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Version" />
        <element api="P:Symbiote.Core.Plugin.IPluginInstance.InstanceName" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.IEndpoint" />
      </containers>
      <file name="50b34295-d3a1-dab7-cc94-1c625c6a0919" />
    </api>
    <api id="M:Symbiote.Core.Plugin.IEndpoint.Send(System.Object)">
      <topicdata group="api" />
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.IEndpoint" ref="true" />
      </containers>
      <file name="7640679b-a9bc-b31c-aa88-6908bbce7fce" />
    </api>
    <api id="T:Symbiote.Core.Plugin.InvalidPluginArchive">
      <topicdata group="api" />
      <apidata name="InvalidPluginArchive" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Symbiote.Core.Plugin.PluginArchive" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.InvalidPluginArchive.#ctor(System.String,System.String)" />
        <element api="P:Symbiote.Core.Plugin.InvalidPluginArchive.Message" />
        <element api="P:Symbiote.Core.Plugin.PluginArchive.FileName" />
        <element api="P:Symbiote.Core.Plugin.PluginArchive.Plugin" />
        <element api="M:Symbiote.Core.Plugin.PluginArchive.SetFileName(System.String)" />
        <element api="M:Symbiote.Core.Plugin.PluginArchive.SetPlugin(Symbiote.Core.Plugin.Plugin)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
      </containers>
      <file name="81f4849e-190c-0d4b-29f3-cd44fbfd1604" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.InvalidPluginArchive">
      <topicdata name="InvalidPluginArchive" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.InvalidPluginArchive" />
      <apidata name="InvalidPluginArchive" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginArchive.SetFileName(System.String)" />
        <element api="M:Symbiote.Core.Plugin.PluginArchive.SetPlugin(Symbiote.Core.Plugin.Plugin)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.InvalidPluginArchive" />
      </containers>
      <file name="07dbe646-657e-2145-7e03-8dddba2df3b4" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.InvalidPluginArchive">
      <topicdata name="InvalidPluginArchive" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.InvalidPluginArchive" />
      <apidata name="InvalidPluginArchive" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.InvalidPluginArchive.Message" />
        <element api="P:Symbiote.Core.Plugin.PluginArchive.FileName" />
        <element api="P:Symbiote.Core.Plugin.PluginArchive.Plugin" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.InvalidPluginArchive" />
      </containers>
      <file name="dabe0fca-92ad-1dca-c983-9426f9e71d7c" />
    </api>
    <api id="M:Symbiote.Core.Plugin.InvalidPluginArchive.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.InvalidPluginArchive" ref="true" />
      </containers>
      <file name="fba2c01f-c35b-abe8-c814-7f120ff6437b" />
    </api>
    <api id="P:Symbiote.Core.Plugin.InvalidPluginArchive.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.InvalidPluginArchive" ref="true" />
      </containers>
      <file name="81067cd5-15c6-3faf-0add-62b6a36da7cc" />
    </api>
    <api id="T:Symbiote.Core.Plugin.IPlugin">
      <topicdata group="api" />
      <apidata name="IPlugin" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Symbiote.Core.Plugin.IEndpoint" ref="true" />
        <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
        <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
        <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </implementors>
      <elements>
        <element api="P:Symbiote.Core.Plugin.IPlugin.FQN" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Name" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.PluginType" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Version" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
      </containers>
      <file name="e939fdbc-994b-511b-82fa-8f6c7089331b" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.IPlugin">
      <topicdata name="IPlugin" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.IPlugin" />
      <apidata name="IPlugin" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.IPlugin.FQN" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Name" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.PluginType" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Version" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.IPlugin" />
      </containers>
      <file name="e2b1dd61-4425-032a-1b19-2e770930daaf" />
    </api>
    <api id="P:Symbiote.Core.Plugin.IPlugin.FQN">
      <topicdata group="api" />
      <apidata name="FQN" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_FQN" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
      </containers>
      <file name="970f64c8-d0fa-62d0-4683-368a3fa40bf8" />
    </api>
    <api id="P:Symbiote.Core.Plugin.IPlugin.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
      </containers>
      <file name="b0e28b72-a39e-3139-ff52-15869537e09e" />
    </api>
    <api id="P:Symbiote.Core.Plugin.IPlugin.PluginType">
      <topicdata group="api" />
      <apidata name="PluginType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_PluginType" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
      </containers>
      <file name="e97b9fdb-88d8-8b2d-0733-9ae64ae11083" />
    </api>
    <api id="P:Symbiote.Core.Plugin.IPlugin.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Version" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
      </containers>
      <file name="8fd4d204-dee3-732c-9a82-bfaefb864027" />
    </api>
    <api id="T:Symbiote.Core.Plugin.IPluginInstance">
      <topicdata group="api" />
      <apidata name="IPluginInstance" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
      </implements>
      <implementors>
        <type api="T:Symbiote.Core.Plugin.IEndpoint" ref="true" />
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </implementors>
      <elements>
        <element api="P:Symbiote.Core.Plugin.IPlugin.FQN" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Name" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.PluginType" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Version" />
        <element api="P:Symbiote.Core.Plugin.IPluginInstance.InstanceName" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Restart" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Start" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
      </containers>
      <file name="bda10af4-59f0-d5a7-706d-8faacfef25a6" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.IPluginInstance">
      <topicdata name="IPluginInstance" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.IPluginInstance" />
      <apidata name="IPluginInstance" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Restart" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Start" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.IPluginInstance" />
      </containers>
      <file name="8dae140e-c4e7-e564-639d-f2b540d7fb1b" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.IPluginInstance">
      <topicdata name="IPluginInstance" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.IPluginInstance" />
      <apidata name="IPluginInstance" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.IPlugin.FQN" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Name" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.PluginType" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Version" />
        <element api="P:Symbiote.Core.Plugin.IPluginInstance.InstanceName" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.IPluginInstance" />
      </containers>
      <file name="aa4eee7f-a7d6-fecf-c69e-cb4c02ab0316" />
    </api>
    <api id="P:Symbiote.Core.Plugin.IPluginInstance.InstanceName">
      <topicdata group="api" />
      <apidata name="InstanceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InstanceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
      </containers>
      <file name="afbae70c-e809-ad6e-284f-832d3bdfc8a4" />
    </api>
    <api id="M:Symbiote.Core.Plugin.IPluginInstance.Restart">
      <topicdata group="api" />
      <apidata name="Restart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
      </containers>
      <file name="d9c2a1de-6764-caec-88df-1236fe27d997" />
    </api>
    <api id="M:Symbiote.Core.Plugin.IPluginInstance.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
      </containers>
      <file name="65fdccd0-87bc-a72b-6ca7-6d58f146cf67" />
    </api>
    <api id="M:Symbiote.Core.Plugin.IPluginInstance.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
      </containers>
      <file name="ab3d06cf-effa-040b-dcfe-9bbcea1f010c" />
    </api>
    <api id="T:Symbiote.Core.Plugin.Plugin">
      <topicdata group="api" />
      <apidata name="Plugin" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.Plugin.#ctor(System.String,System.String,System.String,Symbiote.Core.Plugin.PluginType,System.String)" />
        <element api="M:Symbiote.Core.Plugin.Plugin.Equals(System.Object)" />
        <element api="P:Symbiote.Core.Plugin.Plugin.Fingerprint" />
        <element api="P:Symbiote.Core.Plugin.Plugin.FQN" />
        <element api="M:Symbiote.Core.Plugin.Plugin.GetHashCode" />
        <element api="P:Symbiote.Core.Plugin.Plugin.Name" />
        <element api="P:Symbiote.Core.Plugin.Plugin.PluginType" />
        <element api="M:Symbiote.Core.Plugin.Plugin.SetFingerprint(System.String)" />
        <element api="P:Symbiote.Core.Plugin.Plugin.Version" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
      </containers>
      <file name="de2be072-42fe-d36d-b6ef-213c7a611250" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.Plugin">
      <topicdata name="Plugin" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.Plugin" />
      <apidata name="Plugin" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.Plugin.Equals(System.Object)" />
        <element api="M:Symbiote.Core.Plugin.Plugin.GetHashCode" />
        <element api="M:Symbiote.Core.Plugin.Plugin.SetFingerprint(System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.Plugin" />
      </containers>
      <file name="6f980da7-76ce-989e-68cb-46be074e7802" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.Plugin">
      <topicdata name="Plugin" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.Plugin" />
      <apidata name="Plugin" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.Plugin.Fingerprint" />
        <element api="P:Symbiote.Core.Plugin.Plugin.FQN" />
        <element api="P:Symbiote.Core.Plugin.Plugin.Name" />
        <element api="P:Symbiote.Core.Plugin.Plugin.PluginType" />
        <element api="P:Symbiote.Core.Plugin.Plugin.Version" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.Plugin" />
      </containers>
      <file name="15506ee5-1cf2-afff-5afe-16fba8e97d29" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Plugin.#ctor(System.String,System.String,System.String,Symbiote.Core.Plugin.PluginType,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pluginType">
          <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
        </parameter>
        <parameter name="fingerprint">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
      </containers>
      <file name="9a705f75-cce8-ca94-4956-4e13910ec300" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Plugin.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
      </containers>
      <file name="adfc8aaa-693d-a5bb-707d-d1c6d61a7683" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Plugin.Fingerprint">
      <topicdata group="api" />
      <apidata name="Fingerprint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Fingerprint" />
      <setter name="set_Fingerprint" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
      </containers>
      <file name="c6127e98-8fb6-20c2-f745-15b2b2105e00" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Plugin.FQN">
      <topicdata group="api" />
      <apidata name="FQN" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_FQN" />
      <setter name="set_FQN" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.FQN">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
      </containers>
      <file name="553f5c11-044f-59d8-5165-57bfdb0943e4" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Plugin.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
      </containers>
      <file name="264eaac0-ee40-fa08-ad21-068f3a50cf97" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Plugin.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.Name">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
      </containers>
      <file name="0d7f6268-4469-d799-e93f-8ef839c128f0" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Plugin.PluginType">
      <topicdata group="api" />
      <apidata name="PluginType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PluginType" />
      <setter name="set_PluginType" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.PluginType">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
      </containers>
      <file name="893a80de-2d0b-3cf2-5f81-0b8dd8780db6" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Plugin.SetFingerprint(System.String)">
      <topicdata group="api" />
      <apidata name="SetFingerprint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fingerprint">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
      </containers>
      <file name="e15ce048-559c-c7ba-ad47-805328a68928" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Plugin.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Version" />
      <setter name="set_Version" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.Version">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
      </containers>
      <file name="83ae754b-8ff8-94f1-5f4b-52b0865484c2" />
    </api>
    <api id="T:Symbiote.Core.Plugin.PluginArchive">
      <topicdata group="api" />
      <apidata name="PluginArchive" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Symbiote.Core.Plugin.InvalidPluginArchive" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginArchive.#ctor(System.String,System.String,Symbiote.Core.Plugin.Plugin)" />
        <element api="P:Symbiote.Core.Plugin.PluginArchive.FileName" />
        <element api="P:Symbiote.Core.Plugin.PluginArchive.Plugin" />
        <element api="M:Symbiote.Core.Plugin.PluginArchive.SetFileName(System.String)" />
        <element api="M:Symbiote.Core.Plugin.PluginArchive.SetPlugin(Symbiote.Core.Plugin.Plugin)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
      </containers>
      <file name="3d75d379-aa96-dc67-5d5e-9aefc392b04a" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.PluginArchive">
      <topicdata name="PluginArchive" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.PluginArchive" />
      <apidata name="PluginArchive" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginArchive.SetFileName(System.String)" />
        <element api="M:Symbiote.Core.Plugin.PluginArchive.SetPlugin(Symbiote.Core.Plugin.Plugin)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginArchive" />
      </containers>
      <file name="cc56c369-714c-588a-8f81-7845703ac91c" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.PluginArchive">
      <topicdata name="PluginArchive" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.PluginArchive" />
      <apidata name="PluginArchive" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.PluginArchive.FileName" />
        <element api="P:Symbiote.Core.Plugin.PluginArchive.Plugin" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginArchive" />
      </containers>
      <file name="f8d51d18-aa4e-30e3-3014-41a5a28cc553" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginArchive.#ctor(System.String,System.String,Symbiote.Core.Plugin.Plugin)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="fileName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="checksum" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="plugin" optional="true">
          <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginArchive" ref="true" />
      </containers>
      <file name="d259db76-2918-aafb-cf89-e7caf3c21822" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginArchive.FileName">
      <topicdata group="api" />
      <apidata name="FileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_FileName" />
      <setter name="set_FileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginArchive" ref="true" />
      </containers>
      <file name="e1c33f08-e54b-46b8-e5e6-3c93943e21bb" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginArchive.Plugin">
      <topicdata group="api" />
      <apidata name="Plugin" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Plugin" />
      <setter name="set_Plugin" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginArchive" ref="true" />
      </containers>
      <file name="7628b46d-13a4-e832-b4b8-060865640aa8" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginArchive.SetFileName(System.String)">
      <topicdata group="api" />
      <apidata name="SetFileName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginArchive" ref="true" />
      </containers>
      <file name="20da8b5f-2bdd-3791-c1d7-93d5da95fe11" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginArchive.SetPlugin(Symbiote.Core.Plugin.Plugin)">
      <topicdata group="api" />
      <apidata name="SetPlugin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="plugin">
          <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginArchive" ref="true" />
      </containers>
      <file name="391c67e6-8645-6870-fad5-89c44b0d0523" />
    </api>
    <api id="T:Symbiote.Core.Plugin.PluginArchiveLoadResult">
      <topicdata group="api" />
      <apidata name="PluginArchiveLoadResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Symbiote.Core.Result" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Symbiote.Core.Result.AddError(System.String)" />
        <element api="M:Symbiote.Core.Result.AddInfo(System.String)" />
        <element api="M:Symbiote.Core.Result.AddWarning(System.String)" />
        <element api="M:Symbiote.Core.Result.Incorporate(Symbiote.Core.Result)" />
        <element api="M:Symbiote.Core.Result.LastErrorMessage" />
        <element api="M:Symbiote.Core.Result.LastInfoMessage" />
        <element api="M:Symbiote.Core.Result.LastWarningMessage" />
        <element api="M:Symbiote.Core.Result.Log(System.Action{System.String},System.String)" />
        <element api="Overload:Symbiote.Core.Plugin.PluginArchiveLoadResult.LogAllMessages">
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},System.String,System.String)" />
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},Symbiote.Core.MessageType,System.String,System.String)" />
        </element>
        <element api="Overload:Symbiote.Core.Plugin.PluginArchiveLoadResult.LogResult">
          <element api="M:Symbiote.Core.Result.LogResult(NLog.Logger,System.String)" />
          <element api="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.String)" />
          <element api="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)" />
        </element>
        <element api="P:Symbiote.Core.Result.Messages" />
        <element api="P:Symbiote.Core.Result.ResultCode" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginArchiveLoadResult.#ctor" />
        <element api="P:Symbiote.Core.Plugin.PluginArchiveLoadResult.InvalidArchives" />
        <element api="P:Symbiote.Core.Plugin.PluginArchiveLoadResult.ValidArchives" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
      </containers>
      <file name="44703ead-cccd-5dde-795e-95f75f46b003" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.PluginArchiveLoadResult">
      <topicdata name="PluginArchiveLoadResult" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.PluginArchiveLoadResult" />
      <apidata name="PluginArchiveLoadResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Result.AddError(System.String)" />
        <element api="M:Symbiote.Core.Result.AddInfo(System.String)" />
        <element api="M:Symbiote.Core.Result.AddWarning(System.String)" />
        <element api="M:Symbiote.Core.Result.Incorporate(Symbiote.Core.Result)" />
        <element api="M:Symbiote.Core.Result.LastErrorMessage" />
        <element api="M:Symbiote.Core.Result.LastInfoMessage" />
        <element api="M:Symbiote.Core.Result.LastWarningMessage" />
        <element api="M:Symbiote.Core.Result.Log(System.Action{System.String},System.String)" />
        <element api="Overload:Symbiote.Core.Plugin.PluginArchiveLoadResult.LogAllMessages">
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},System.String,System.String)" />
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},Symbiote.Core.MessageType,System.String,System.String)" />
        </element>
        <element api="Overload:Symbiote.Core.Plugin.PluginArchiveLoadResult.LogResult">
          <element api="M:Symbiote.Core.Result.LogResult(NLog.Logger,System.String)" />
          <element api="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.String)" />
          <element api="M:Symbiote.Core.Result.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginArchiveLoadResult" />
      </containers>
      <file name="ad6756a5-fa0c-d8ee-3530-7f27b242131b" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.PluginArchiveLoadResult">
      <topicdata name="PluginArchiveLoadResult" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.PluginArchiveLoadResult" />
      <apidata name="PluginArchiveLoadResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Result.Messages" />
        <element api="P:Symbiote.Core.Result.ResultCode" />
        <element api="P:Symbiote.Core.Plugin.PluginArchiveLoadResult.InvalidArchives" />
        <element api="P:Symbiote.Core.Plugin.PluginArchiveLoadResult.ValidArchives" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginArchiveLoadResult" />
      </containers>
      <file name="52818aa3-ff06-1b6d-35e8-65c9a2045e8f" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginArchiveLoadResult.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginArchiveLoadResult" ref="true" />
      </containers>
      <file name="46138c39-1295-aeb8-e324-629958bce45c" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginArchiveLoadResult.InvalidArchives">
      <topicdata group="api" />
      <apidata name="InvalidArchives" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InvalidArchives" />
      <setter name="set_InvalidArchives" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.InvalidPluginArchive" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginArchiveLoadResult" ref="true" />
      </containers>
      <file name="22fb8b3c-6df2-54a5-7b98-ae1f315e69da" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginArchiveLoadResult.ValidArchives">
      <topicdata group="api" />
      <apidata name="ValidArchives" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidArchives" />
      <setter name="set_ValidArchives" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.PluginArchive" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginArchiveLoadResult" ref="true" />
      </containers>
      <file name="f198ceb4-bd71-31c9-601d-d48567a76637" />
    </api>
    <api id="T:Symbiote.Core.Plugin.PluginAssembly">
      <topicdata group="api" />
      <apidata name="PluginAssembly" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginAssembly.#ctor(System.String,System.String,System.String,Symbiote.Core.Plugin.PluginType,System.String,System.Type,System.Reflection.Assembly)" />
        <element api="P:Symbiote.Core.Plugin.PluginAssembly.Assembly" />
        <element api="P:Symbiote.Core.Plugin.PluginAssembly.Fingerprint" />
        <element api="P:Symbiote.Core.Plugin.PluginAssembly.FQN" />
        <element api="P:Symbiote.Core.Plugin.PluginAssembly.Name" />
        <element api="P:Symbiote.Core.Plugin.PluginAssembly.PluginType" />
        <element api="P:Symbiote.Core.Plugin.PluginAssembly.Type" />
        <element api="P:Symbiote.Core.Plugin.PluginAssembly.Version" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
      </containers>
      <file name="9e2bc346-af38-e3b1-3f9b-dc830f40285f" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.PluginAssembly">
      <topicdata name="PluginAssembly" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.PluginAssembly" />
      <apidata name="PluginAssembly" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginAssembly" />
      </containers>
      <file name="40fead93-4294-ac64-f59f-9145289f03f9" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.PluginAssembly">
      <topicdata name="PluginAssembly" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.PluginAssembly" />
      <apidata name="PluginAssembly" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.PluginAssembly.Assembly" />
        <element api="P:Symbiote.Core.Plugin.PluginAssembly.Fingerprint" />
        <element api="P:Symbiote.Core.Plugin.PluginAssembly.FQN" />
        <element api="P:Symbiote.Core.Plugin.PluginAssembly.Name" />
        <element api="P:Symbiote.Core.Plugin.PluginAssembly.PluginType" />
        <element api="P:Symbiote.Core.Plugin.PluginAssembly.Type" />
        <element api="P:Symbiote.Core.Plugin.PluginAssembly.Version" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginAssembly" />
      </containers>
      <file name="37c9ba6e-7218-5522-244d-6dc6398ef8ba" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginAssembly.#ctor(System.String,System.String,System.String,Symbiote.Core.Plugin.PluginType,System.String,System.Type,System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pluginType">
          <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
        </parameter>
        <parameter name="fingerprint">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
      </containers>
      <file name="350334d0-e728-6d8a-bdec-e8604f0e661c" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginAssembly.Assembly">
      <topicdata group="api" />
      <apidata name="Assembly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Assembly" />
      <setter name="set_Assembly" />
      <returns>
        <type api="T:System.Reflection.Assembly" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
      </containers>
      <file name="ac748ebe-5a95-5426-36cc-d5653935e0c5" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginAssembly.Fingerprint">
      <topicdata group="api" />
      <apidata name="Fingerprint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Fingerprint" />
      <setter name="set_Fingerprint" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
      </containers>
      <file name="94f08eb9-be11-c83c-1d85-0b0bf3cb756e" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginAssembly.FQN">
      <topicdata group="api" />
      <apidata name="FQN" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_FQN" />
      <setter name="set_FQN" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.FQN">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
      </containers>
      <file name="4205eac8-bc56-1f71-eb4c-da9cb9ab4f5e" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginAssembly.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.Name">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
      </containers>
      <file name="68808cfe-5bef-777d-2595-5b22fde2c787" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginAssembly.PluginType">
      <topicdata group="api" />
      <apidata name="PluginType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PluginType" />
      <setter name="set_PluginType" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.PluginType">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
      </containers>
      <file name="081b2d6d-cbfe-7600-d529-f79cd57261b1" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginAssembly.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
      </containers>
      <file name="90d61011-63c4-2ce0-10b2-be07e89bc4a6" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginAssembly.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Version" />
      <setter name="set_Version" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Plugin.IPlugin.Version">
          <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
      </containers>
      <file name="252fc172-9221-b982-984e-c201003b4988" />
    </api>
    <api id="T:Symbiote.Core.Plugin.PluginAuthorization">
      <topicdata group="api" />
      <apidata name="PluginAuthorization" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Plugin.PluginAuthorization.Unknown" />
        <element api="F:Symbiote.Core.Plugin.PluginAuthorization.Unauthorized" />
        <element api="F:Symbiote.Core.Plugin.PluginAuthorization.Authorized" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
      </containers>
      <file name="a4e8c0e4-db3b-2c28-87c1-39d6d5dac5ca" />
    </api>
    <api id="F:Symbiote.Core.Plugin.PluginAuthorization.Authorized">
      <topicdata group="api" notopic="" />
      <apidata name="Authorized" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginAuthorization" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginAuthorization" ref="false" />
      </containers>
      <file name="7f7c7f69-3570-3e25-144c-4daae4cdfb1a" />
    </api>
    <api id="F:Symbiote.Core.Plugin.PluginAuthorization.Unauthorized">
      <topicdata group="api" notopic="" />
      <apidata name="Unauthorized" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginAuthorization" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginAuthorization" ref="false" />
      </containers>
      <file name="bc0f2999-0273-64d2-0744-35436429dcf0" />
    </api>
    <api id="F:Symbiote.Core.Plugin.PluginAuthorization.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginAuthorization" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginAuthorization" ref="false" />
      </containers>
      <file name="d311476a-3d65-c8d3-6078-09ac10f1d7ed" />
    </api>
    <api id="T:Symbiote.Core.Plugin.PluginManager">
      <topicdata group="api" />
      <apidata name="PluginManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.IManager" ref="true" />
        <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.PluginManagerConfiguration" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginManager.#ctor(Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.#cctor" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.Configuration" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.ConfigurationDefinition" />
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.Configure">
          <element api="M:Symbiote.Core.Plugin.PluginManager.Configure" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.Configure(Symbiote.Core.Plugin.PluginManagerConfiguration)" />
        </element>
        <element api="P:Symbiote.Core.Plugin.PluginManager.ConnectorManager" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.CreatePluginInstance``1(System.String)" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.EndpointManager" />
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.FindPlugin">
          <element api="M:Symbiote.Core.Plugin.PluginManager.FindPlugin(System.String)" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.FindPlugin(System.String,System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin})" />
        </element>
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.FindPluginAssembly">
          <element api="M:Symbiote.Core.Plugin.PluginManager.FindPluginAssembly(System.String)" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.FindPluginAssembly(System.String,System.Collections.Generic.List{Symbiote.Core.Plugin.PluginAssembly})" />
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginManager.FindPluginInstance(System.String,Symbiote.Core.Plugin.PluginType)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.FindPluginItem(System.String)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.GetConfigurationDefinition" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.GetDefaultConfiguration" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.GetPluginArchiveConfigurationFileName" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.GetPluginArchiveExtension" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.GetPluginArchivePayloadFileName" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.GetPluginDirectory(Symbiote.Core.Plugin.Plugin)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.GetPluginType(System.String)" />
        <element api="F:Symbiote.Core.Plugin.PluginManager.installationLock" />
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.InstallPlugin">
          <element api="M:Symbiote.Core.Plugin.PluginManager.InstallPlugin(Symbiote.Core.Plugin.PluginArchive,System.Boolean)" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.InstallPlugin(Symbiote.Core.Plugin.PluginArchive,System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin},Symbiote.Core.Platform.IPlatform,System.Boolean)" />
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginManager.InstallPluginAsync(Symbiote.Core.Plugin.PluginArchive)" />
        <element api="F:Symbiote.Core.Plugin.PluginManager.instance" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.Instance(Symbiote.Core.ProgramManager)" />
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.InstantiatePlugins">
          <element api="M:Symbiote.Core.Plugin.PluginManager.InstantiatePlugins" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.InstantiatePlugins(System.Collections.Generic.List{Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance},System.Collections.Generic.List{Symbiote.Core.Plugin.PluginAssembly})" />
        </element>
        <element api="P:Symbiote.Core.Plugin.PluginManager.InvalidPluginArchives" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.IsPluginLoadable(Symbiote.Core.Plugin.Plugin)" />
        <element api="F:Symbiote.Core.Plugin.PluginManager.loadablePluginTypes" />
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.LoadPluginArchives">
          <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginArchives" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginArchives(System.String,System.String,Symbiote.Core.Platform.IPlatform)" />
        </element>
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.LoadPluginAssemblies">
          <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssemblies" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssemblies(System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin})" />
        </element>
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.LoadPluginAssembly">
          <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssembly(Symbiote.Core.Plugin.Plugin)" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssembly(Symbiote.Core.Plugin.Plugin,System.Collections.Generic.List{Symbiote.Core.Plugin.PluginAssembly})" />
        </element>
        <element api="F:Symbiote.Core.Plugin.PluginManager.logger" />
        <element api="F:Symbiote.Core.Plugin.PluginManager.manager" />
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.ParsePluginArchive">
          <element api="M:Symbiote.Core.Plugin.PluginManager.ParsePluginArchive(System.String)" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.ParsePluginArchive(System.String,System.String,System.String,Symbiote.Core.Platform.IPlatform)" />
        </element>
        <element api="P:Symbiote.Core.Plugin.PluginManager.PluginArchives" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.PluginAssemblies" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.PluginInstances" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.Plugins" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.ReinstallPlugin(Symbiote.Core.Plugin.Plugin)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.ReinstallPluginAsync(Symbiote.Core.Plugin.Plugin)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.ReloadPluginArchives" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.Restart" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.SaveConfiguration" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.Start" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.State" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.Stop" />
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.UninstallPlugin">
          <element api="M:Symbiote.Core.Plugin.PluginManager.UninstallPlugin(Symbiote.Core.Plugin.Plugin)" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.UninstallPlugin(Symbiote.Core.Plugin.Plugin,System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin},Symbiote.Core.Platform.IPlatform)" />
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginManager.UninstallPluginAsync(Symbiote.Core.Plugin.Plugin)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.UpdatePlugin(Symbiote.Core.Plugin.PluginArchive)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.UpdatePluginAsync(Symbiote.Core.Plugin.PluginArchive)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.ValidatePluginAssembly(System.Reflection.Assembly)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.ValidatePluginAssemblyName(System.Reflection.AssemblyName)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
      </containers>
      <file name="5d5dece7-0902-9924-b0e9-19590ce9471c" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.PluginManager">
      <topicdata name="PluginManager" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.PluginManager" />
      <apidata name="PluginManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.Configure">
          <element api="M:Symbiote.Core.Plugin.PluginManager.Configure" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.Configure(Symbiote.Core.Plugin.PluginManagerConfiguration)" />
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginManager.CreatePluginInstance``1(System.String)" />
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.FindPlugin">
          <element api="M:Symbiote.Core.Plugin.PluginManager.FindPlugin(System.String)" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.FindPlugin(System.String,System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin})" />
        </element>
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.FindPluginAssembly">
          <element api="M:Symbiote.Core.Plugin.PluginManager.FindPluginAssembly(System.String)" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.FindPluginAssembly(System.String,System.Collections.Generic.List{Symbiote.Core.Plugin.PluginAssembly})" />
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginManager.FindPluginInstance(System.String,Symbiote.Core.Plugin.PluginType)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.FindPluginItem(System.String)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.GetConfigurationDefinition" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.GetDefaultConfiguration" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.GetPluginArchiveConfigurationFileName" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.GetPluginArchiveExtension" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.GetPluginArchivePayloadFileName" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.GetPluginDirectory(Symbiote.Core.Plugin.Plugin)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.GetPluginType(System.String)" />
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.InstallPlugin">
          <element api="M:Symbiote.Core.Plugin.PluginManager.InstallPlugin(Symbiote.Core.Plugin.PluginArchive,System.Boolean)" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.InstallPlugin(Symbiote.Core.Plugin.PluginArchive,System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin},Symbiote.Core.Platform.IPlatform,System.Boolean)" />
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginManager.InstallPluginAsync(Symbiote.Core.Plugin.PluginArchive)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.Instance(Symbiote.Core.ProgramManager)" />
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.InstantiatePlugins">
          <element api="M:Symbiote.Core.Plugin.PluginManager.InstantiatePlugins" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.InstantiatePlugins(System.Collections.Generic.List{Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance},System.Collections.Generic.List{Symbiote.Core.Plugin.PluginAssembly})" />
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginManager.IsPluginLoadable(Symbiote.Core.Plugin.Plugin)" />
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.LoadPluginArchives">
          <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginArchives" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginArchives(System.String,System.String,Symbiote.Core.Platform.IPlatform)" />
        </element>
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.LoadPluginAssemblies">
          <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssemblies" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssemblies(System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin})" />
        </element>
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.LoadPluginAssembly">
          <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssembly(Symbiote.Core.Plugin.Plugin)" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssembly(Symbiote.Core.Plugin.Plugin,System.Collections.Generic.List{Symbiote.Core.Plugin.PluginAssembly})" />
        </element>
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.ParsePluginArchive">
          <element api="M:Symbiote.Core.Plugin.PluginManager.ParsePluginArchive(System.String)" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.ParsePluginArchive(System.String,System.String,System.String,Symbiote.Core.Platform.IPlatform)" />
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginManager.ReinstallPlugin(Symbiote.Core.Plugin.Plugin)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.ReinstallPluginAsync(Symbiote.Core.Plugin.Plugin)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.ReloadPluginArchives" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.Restart" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.SaveConfiguration" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.Start" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.Stop" />
        <element api="Overload:Symbiote.Core.Plugin.PluginManager.UninstallPlugin">
          <element api="M:Symbiote.Core.Plugin.PluginManager.UninstallPlugin(Symbiote.Core.Plugin.Plugin)" />
          <element api="M:Symbiote.Core.Plugin.PluginManager.UninstallPlugin(Symbiote.Core.Plugin.Plugin,System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin},Symbiote.Core.Platform.IPlatform)" />
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginManager.UninstallPluginAsync(Symbiote.Core.Plugin.Plugin)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.UpdatePlugin(Symbiote.Core.Plugin.PluginArchive)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.UpdatePluginAsync(Symbiote.Core.Plugin.PluginArchive)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.ValidatePluginAssembly(System.Reflection.Assembly)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.ValidatePluginAssemblyName(System.Reflection.AssemblyName)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" />
      </containers>
      <file name="17173ec0-aa7f-c953-ed0e-6b3ac60d8ed4" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.PluginManager">
      <topicdata name="PluginManager" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.PluginManager" />
      <apidata name="PluginManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.PluginManager.Configuration" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.ConfigurationDefinition" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.ConnectorManager" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.EndpointManager" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.InvalidPluginArchives" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.PluginArchives" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.PluginAssemblies" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.PluginInstances" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.Plugins" />
        <element api="P:Symbiote.Core.Plugin.PluginManager.State" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" />
      </containers>
      <file name="88fc2f5c-edc6-4dba-1bc6-356c94d8cd1a" />
    </api>
    <api id="Fields.T:Symbiote.Core.Plugin.PluginManager">
      <topicdata name="PluginManager" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Plugin.PluginManager" />
      <apidata name="PluginManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Plugin.PluginManager.installationLock" />
        <element api="F:Symbiote.Core.Plugin.PluginManager.instance" />
        <element api="F:Symbiote.Core.Plugin.PluginManager.loadablePluginTypes" />
        <element api="F:Symbiote.Core.Plugin.PluginManager.logger" />
        <element api="F:Symbiote.Core.Plugin.PluginManager.manager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" />
      </containers>
      <file name="d9907901-de64-d144-8f1c-e23365cf2130" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.PluginManager.Configure">
      <topicdata name="Configure" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Configure" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.PluginManager.Configure" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.Configure(Symbiote.Core.Plugin.PluginManagerConfiguration)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="83163c41-cbb2-25c2-6f7c-73b89b14fe88" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.PluginManager.FindPlugin">
      <topicdata name="FindPlugin" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="FindPlugin" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.PluginManager.FindPlugin(System.String)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.FindPlugin(System.String,System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin})" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="25afe7ea-3f11-b66f-fac2-7b25a0ae5474" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.PluginManager.FindPluginAssembly">
      <topicdata name="FindPluginAssembly" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="FindPluginAssembly" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.PluginManager.FindPluginAssembly(System.String)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.FindPluginAssembly(System.String,System.Collections.Generic.List{Symbiote.Core.Plugin.PluginAssembly})" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="c8d73705-cabe-c27d-55d3-be0aabeee909" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.PluginManager.InstallPlugin">
      <topicdata name="InstallPlugin" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="InstallPlugin" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.PluginManager.InstallPlugin(Symbiote.Core.Plugin.PluginArchive,System.Boolean)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.InstallPlugin(Symbiote.Core.Plugin.PluginArchive,System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin},Symbiote.Core.Platform.IPlatform,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="4cdef763-ffb3-d8f1-5c18-f3f62d0155af" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.PluginManager.InstantiatePlugins">
      <topicdata name="InstantiatePlugins" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="InstantiatePlugins" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.PluginManager.InstantiatePlugins" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.InstantiatePlugins(System.Collections.Generic.List{Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance},System.Collections.Generic.List{Symbiote.Core.Plugin.PluginAssembly})" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="bc704a2a-bc75-109d-3051-c761179712bf" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.PluginManager.LoadPluginArchives">
      <topicdata name="LoadPluginArchives" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="LoadPluginArchives" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginArchives" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginArchives(System.String,System.String,Symbiote.Core.Platform.IPlatform)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="5c2d666a-ab29-b029-256b-808bf6a93eaf" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.PluginManager.LoadPluginAssemblies">
      <topicdata name="LoadPluginAssemblies" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="LoadPluginAssemblies" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssemblies" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssemblies(System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin})" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="c686f508-e6a7-aa31-9b2f-a1160c618aca" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.PluginManager.LoadPluginAssembly">
      <topicdata name="LoadPluginAssembly" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="LoadPluginAssembly" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssembly(Symbiote.Core.Plugin.Plugin)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssembly(Symbiote.Core.Plugin.Plugin,System.Collections.Generic.List{Symbiote.Core.Plugin.PluginAssembly})" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="eb6ac5a3-0253-8cef-2495-b64cda188a92" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.PluginManager.ParsePluginArchive">
      <topicdata name="ParsePluginArchive" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ParsePluginArchive" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.PluginManager.ParsePluginArchive(System.String)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.ParsePluginArchive(System.String,System.String,System.String,Symbiote.Core.Platform.IPlatform)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="0aa838c4-c89f-3409-98ff-d619b934df06" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.PluginManager.UninstallPlugin">
      <topicdata name="UninstallPlugin" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="UninstallPlugin" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.PluginManager.UninstallPlugin(Symbiote.Core.Plugin.Plugin)" />
        <element api="M:Symbiote.Core.Plugin.PluginManager.UninstallPlugin(Symbiote.Core.Plugin.Plugin,System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin},Symbiote.Core.Platform.IPlatform)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="23ce9fe7-ebca-e29f-49a3-0e2b4168c94d" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.#ctor(Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" special="true" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="10475fcf-ab3a-8103-39ee-f494d6d83fe0" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="e34ab6d6-eecd-c0ef-4790-de8cf30d7b57" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginManager.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Configuration" />
      <setter name="set_Configuration" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginManagerConfiguration" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Configuration.IConfigurable`1.Configuration">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.PluginManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="f6613a1e-00aa-6b57-a1d2-cc4acd2e5a90" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginManager.ConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="ConfigurationDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ConfigurationDefinition" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Configuration.IConfigurable`1.ConfigurationDefinition">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.PluginManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="30a4ffd4-e9f1-604b-a862-3c779cc63ec5" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.Configure">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.PluginManager.Configure" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.PluginManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="86b8109e-1dc9-836b-0fac-a264485dfe06" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.Configure(Symbiote.Core.Plugin.PluginManagerConfiguration)">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.PluginManager.Configure" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="configuration">
          <type api="T:Symbiote.Core.Plugin.PluginManagerConfiguration" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure(`0)">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.PluginManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="91de5bcb-74ce-27ac-2a0f-ad7abe2d274d" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginManager.ConnectorManager">
      <topicdata group="api" />
      <apidata name="ConnectorManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ConnectorManager" />
      <setter name="set_ConnectorManager" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="e7d77d51-f897-2d4b-b848-6431e43a4910" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.CreatePluginInstance``1(System.String)">
      <topicdata group="api" />
      <apidata name="CreatePluginInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="76614bd4-ea0f-31de-b61e-204ea9aa6a6a" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginManager.EndpointManager">
      <topicdata group="api" />
      <apidata name="EndpointManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_EndpointManager" />
      <setter name="set_EndpointManager" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="90beccc3-236f-1be0-ceff-6518e506291c" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.FindPlugin(System.String)">
      <topicdata group="api" />
      <apidata name="FindPlugin" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.PluginManager.FindPlugin" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="e74459f6-ac0c-8527-b6ba-921e0fd2bd91" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.FindPlugin(System.String,System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin})">
      <topicdata group="api" />
      <apidata name="FindPlugin" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Plugin.PluginManager.FindPlugin" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="plugins">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="24d33ede-b74a-122a-fcca-6ecacb58481d" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.FindPluginAssembly(System.String)">
      <topicdata group="api" />
      <apidata name="FindPluginAssembly" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.PluginManager.FindPluginAssembly" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="5d8de916-2480-d750-cc03-ca5e54eb0b57" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.FindPluginAssembly(System.String,System.Collections.Generic.List{Symbiote.Core.Plugin.PluginAssembly})">
      <topicdata group="api" />
      <apidata name="FindPluginAssembly" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Plugin.PluginManager.FindPluginAssembly" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="assemblies">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="ae07bbe0-6544-dae1-701f-c511fed24f21" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.FindPluginInstance(System.String,Symbiote.Core.Plugin.PluginType)">
      <topicdata group="api" />
      <apidata name="FindPluginInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pluginType" optional="true">
          <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
          <argument>
            <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
            <enumValue>
              <field name="Connector" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="befc3177-00e2-6124-f2dd-2382cdb3a64e" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.FindPluginItem(System.String)">
      <topicdata group="api" />
      <apidata name="FindPluginItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="3570a7f8-fd39-d947-250a-8c5ce64546b6" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.GetConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="GetConfigurationDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="0cd5fe48-e763-0a74-ce14-d79607f4c28a" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.GetDefaultConfiguration">
      <topicdata group="api" />
      <apidata name="GetDefaultConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginManagerConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="8a7e33c1-9d93-3f47-e5e8-4a27042297b2" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.GetPluginArchiveConfigurationFileName">
      <topicdata group="api" />
      <apidata name="GetPluginArchiveConfigurationFileName" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="55c39f24-aff1-ba78-fbef-cb3f10a57fc8" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.GetPluginArchiveExtension">
      <topicdata group="api" />
      <apidata name="GetPluginArchiveExtension" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="a12ab690-ae0a-8db4-ac5b-62ff43104843" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.GetPluginArchivePayloadFileName">
      <topicdata group="api" />
      <apidata name="GetPluginArchivePayloadFileName" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="77b7cf5e-8f99-e124-47e2-a1fa60b26389" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.GetPluginDirectory(Symbiote.Core.Plugin.Plugin)">
      <topicdata group="api" />
      <apidata name="GetPluginDirectory" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="plugin">
          <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="bf099ee9-2b56-2a08-77c2-4a57ccbccfda" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.GetPluginType(System.String)">
      <topicdata group="api" />
      <apidata name="GetPluginType" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="46f5678b-ac0a-72fb-cc04-dc86f6c40649" />
    </api>
    <api id="F:Symbiote.Core.Plugin.PluginManager.installationLock">
      <topicdata group="api" />
      <apidata name="installationLock" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="302debe7-3ea0-6904-4474-39260c0a414c" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.InstallPlugin(Symbiote.Core.Plugin.PluginArchive,System.Boolean)">
      <topicdata group="api" />
      <apidata name="InstallPlugin" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.PluginManager.InstallPlugin" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="archive">
          <type api="T:Symbiote.Core.Plugin.PluginArchive" ref="true" />
        </parameter>
        <parameter name="updatePlugin" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="d213b9d9-753d-1f16-5270-3c009720ba76" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.InstallPlugin(Symbiote.Core.Plugin.PluginArchive,System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin},Symbiote.Core.Platform.IPlatform,System.Boolean)">
      <topicdata group="api" />
      <apidata name="InstallPlugin" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Plugin.PluginManager.InstallPlugin" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="archive">
          <type api="T:Symbiote.Core.Plugin.PluginArchive" ref="true" />
        </parameter>
        <parameter name="plugins">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="platform">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </parameter>
        <parameter name="updatePlugin" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="d552ed2f-b188-4191-b048-698e5324c01f" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.InstallPluginAsync(Symbiote.Core.Plugin.PluginArchive)">
      <topicdata group="api" />
      <apidata name="InstallPluginAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="archive">
          <type api="T:Symbiote.Core.Plugin.PluginArchive" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Result`1" ref="true">
              <specialization>
                <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="325dcda1-6885-96b6-1700-6114d5cb96cb" />
    </api>
    <api id="F:Symbiote.Core.Plugin.PluginManager.instance">
      <topicdata group="api" />
      <apidata name="instance" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="f1855812-5c39-7377-d56f-c96dcdabc5e5" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.Instance(Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="method" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="2b47d0d3-2c4b-e71c-533a-c839dad31e9b" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.InstantiatePlugins">
      <topicdata group="api" />
      <apidata name="InstantiatePlugins" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Plugin.PluginManager.InstantiatePlugins" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="2e6f4839-c0e3-9da5-f70a-f1fcfbced566" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.InstantiatePlugins(System.Collections.Generic.List{Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance},System.Collections.Generic.List{Symbiote.Core.Plugin.PluginAssembly})">
      <topicdata group="api" />
      <apidata name="InstantiatePlugins" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Plugin.PluginManager.InstantiatePlugins" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="configuredInstances">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="assemblies">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="4e39f1cb-8be9-2bbe-9806-d5211494f3e8" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginManager.InvalidPluginArchives">
      <topicdata group="api" />
      <apidata name="InvalidPluginArchives" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_InvalidPluginArchives" />
      <setter name="set_InvalidPluginArchives" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.InvalidPluginArchive" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="bbdc7446-ac04-660e-73a3-bb1a080769d2" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.IsPluginLoadable(Symbiote.Core.Plugin.Plugin)">
      <topicdata group="api" />
      <apidata name="IsPluginLoadable" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="plugin">
          <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="bb49b325-10f8-6fc7-f66f-2302257f6f31" />
    </api>
    <api id="F:Symbiote.Core.Plugin.PluginManager.loadablePluginTypes">
      <topicdata group="api" />
      <apidata name="loadablePluginTypes" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="a071cc96-a960-6fb0-e8d3-ff4b1768efa6" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.LoadPluginArchives">
      <topicdata group="api" />
      <apidata name="LoadPluginArchives" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Plugin.PluginManager.LoadPluginArchives" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginArchiveLoadResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="db3e2fdf-e263-c8a9-56ae-67dc51974915" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.LoadPluginArchives(System.String,System.String,Symbiote.Core.Platform.IPlatform)">
      <topicdata group="api" />
      <apidata name="LoadPluginArchives" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Plugin.PluginManager.LoadPluginArchives" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchPattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="platform">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginArchiveLoadResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="33f3663f-0479-5f85-c465-99f170ec5f1e" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssemblies">
      <topicdata group="api" />
      <apidata name="LoadPluginAssemblies" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Plugin.PluginManager.LoadPluginAssemblies" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="afe24a90-cd42-69d2-dd0f-e7782d4a5ded" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssemblies(System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin})">
      <topicdata group="api" />
      <apidata name="LoadPluginAssemblies" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Plugin.PluginManager.LoadPluginAssemblies" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="plugins">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="47922e23-bf4a-fedc-5e5f-8041a580431b" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssembly(Symbiote.Core.Plugin.Plugin)">
      <topicdata group="api" />
      <apidata name="LoadPluginAssembly" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.PluginManager.LoadPluginAssembly" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="plugin">
          <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="323159a4-74c2-55c0-4842-b1b79556e25f" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.LoadPluginAssembly(Symbiote.Core.Plugin.Plugin,System.Collections.Generic.List{Symbiote.Core.Plugin.PluginAssembly})">
      <topicdata group="api" />
      <apidata name="LoadPluginAssembly" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Plugin.PluginManager.LoadPluginAssembly" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="plugin">
          <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
        </parameter>
        <parameter name="pluginAssemblies">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="2bc3573d-05cd-92c3-5760-772cb7ee6989" />
    </api>
    <api id="F:Symbiote.Core.Plugin.PluginManager.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="cbb16296-e53f-0637-b1d2-a5f05113c754" />
    </api>
    <api id="F:Symbiote.Core.Plugin.PluginManager.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="c669cd3c-3e7a-1f03-3758-c288552435cf" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.ParsePluginArchive(System.String)">
      <topicdata group="api" />
      <apidata name="ParsePluginArchive" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Plugin.PluginManager.ParsePluginArchive" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.PluginArchive" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="fa79c700-a00c-44cc-33df-b1b45f64e9d6" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.ParsePluginArchive(System.String,System.String,System.String,Symbiote.Core.Platform.IPlatform)">
      <topicdata group="api" />
      <apidata name="ParsePluginArchive" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Plugin.PluginManager.ParsePluginArchive" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="configFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="payloadFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="platform">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.PluginArchive" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="9f779a06-890a-bc9f-c321-507c42a42cf0" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginManager.PluginArchives">
      <topicdata group="api" />
      <apidata name="PluginArchives" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PluginArchives" />
      <setter name="set_PluginArchives" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.PluginArchive" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="4fb5cedc-d69f-5033-2a80-8ffb978c6a29" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginManager.PluginAssemblies">
      <topicdata group="api" />
      <apidata name="PluginAssemblies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PluginAssemblies" />
      <setter name="set_PluginAssemblies" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.PluginAssembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="bad1b9ff-b305-d374-4812-22c1e56abf16" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginManager.PluginInstances">
      <topicdata group="api" />
      <apidata name="PluginInstances" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PluginInstances" />
      <setter name="set_PluginInstances" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="9f12d7ce-1485-6aa6-a0fa-41c308b1fe83" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginManager.Plugins">
      <topicdata group="api" />
      <apidata name="Plugins" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Plugins" />
      <setter name="set_Plugins" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="94b19e12-a572-280c-8f1f-009684e55693" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.ReinstallPlugin(Symbiote.Core.Plugin.Plugin)">
      <topicdata group="api" />
      <apidata name="ReinstallPlugin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="plugin">
          <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="27638125-3e21-0158-3dce-2f8578de5baf" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.ReinstallPluginAsync(Symbiote.Core.Plugin.Plugin)">
      <topicdata group="api" />
      <apidata name="ReinstallPluginAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="plugin">
          <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Result" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="e4902924-078e-10f1-56c2-8aa88a62055a" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.ReloadPluginArchives">
      <topicdata group="api" />
      <apidata name="ReloadPluginArchives" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginArchiveLoadResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="0d62d863-c6ee-431d-0764-239101e4eeca" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.Restart">
      <topicdata group="api" />
      <apidata name="Restart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Restart">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="4e27b792-32ba-a0b6-e504-ae025dbd9bab" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.SaveConfiguration">
      <topicdata group="api" />
      <apidata name="SaveConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.SaveConfiguration">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.PluginManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="e6f421ae-1637-b7ae-2862-59eca0d1cd27" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Start">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="e90958fd-4c3c-27ab-8881-ff95be4fe88a" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginManager.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_State" />
      <setter name="set_State" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.IManager.State">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="84078eb1-3d23-bbd8-a9e3-3eb35bbb42ff" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Stop">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="2596138b-f100-6822-cc20-1cecf7883fc4" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.UninstallPlugin(Symbiote.Core.Plugin.Plugin)">
      <topicdata group="api" />
      <apidata name="UninstallPlugin" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.PluginManager.UninstallPlugin" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="plugin">
          <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="7f18da8b-24dd-e93f-9758-4c2cdb5ccdc3" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.UninstallPlugin(Symbiote.Core.Plugin.Plugin,System.Collections.Generic.List{Symbiote.Core.Plugin.Plugin},Symbiote.Core.Platform.IPlatform)">
      <topicdata group="api" />
      <apidata name="UninstallPlugin" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Plugin.PluginManager.UninstallPlugin" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="plugin">
          <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
        </parameter>
        <parameter name="plugins">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="platform">
          <type api="T:Symbiote.Core.Platform.IPlatform" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="723fa683-4540-07be-8cd6-b3493caa90b1" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.UninstallPluginAsync(Symbiote.Core.Plugin.Plugin)">
      <topicdata group="api" />
      <apidata name="UninstallPluginAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="plugin">
          <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Result" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="c8c64a66-eec5-b402-7d98-b40f1ff20c77" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.UpdatePlugin(Symbiote.Core.Plugin.PluginArchive)">
      <topicdata group="api" />
      <apidata name="UpdatePlugin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="archive">
          <type api="T:Symbiote.Core.Plugin.PluginArchive" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="b7e93d3f-c678-ab36-4d05-094e67a3dae5" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.UpdatePluginAsync(Symbiote.Core.Plugin.PluginArchive)">
      <topicdata group="api" />
      <apidata name="UpdatePluginAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="archive">
          <type api="T:Symbiote.Core.Plugin.PluginArchive" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Result`1" ref="true">
              <specialization>
                <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="0406a0e7-50c8-7795-ec9d-beb3b99f4250" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.ValidatePluginAssembly(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="ValidatePluginAssembly" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="f0bd5d61-8f6b-6410-14b4-4dd8f8fc4baa" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManager.ValidatePluginAssemblyName(System.Reflection.AssemblyName)">
      <topicdata group="api" />
      <apidata name="ValidatePluginAssemblyName" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assemblyName">
          <type api="T:System.Reflection.AssemblyName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </containers>
      <file name="cf478f92-683e-a76e-810e-fe6e8dd298dc" />
    </api>
    <api id="T:Symbiote.Core.Plugin.PluginManagerConfiguration">
      <topicdata group="api" />
      <apidata name="PluginManagerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginManagerConfiguration.#ctor" />
        <element api="P:Symbiote.Core.Plugin.PluginManagerConfiguration.Instances" />
        <element api="P:Symbiote.Core.Plugin.PluginManagerConfiguration.Plugins" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
      </containers>
      <file name="d5bdb785-136f-f970-80ba-c1981d58e867" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.PluginManagerConfiguration">
      <topicdata name="PluginManagerConfiguration" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.PluginManagerConfiguration" />
      <apidata name="PluginManagerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManagerConfiguration" />
      </containers>
      <file name="cb421b68-b9ef-16cb-ab00-c7afe6524b76" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.PluginManagerConfiguration">
      <topicdata name="PluginManagerConfiguration" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.PluginManagerConfiguration" />
      <apidata name="PluginManagerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.PluginManagerConfiguration.Instances" />
        <element api="P:Symbiote.Core.Plugin.PluginManagerConfiguration.Plugins" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManagerConfiguration" />
      </containers>
      <file name="3c348460-85b1-5c5d-2a56-07ff4086546e" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManagerConfiguration.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManagerConfiguration" ref="true" />
      </containers>
      <file name="6bbc4fa2-fb48-3d79-1c31-0542e842e278" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginManagerConfiguration.Instances">
      <topicdata group="api" />
      <apidata name="Instances" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Instances" />
      <setter name="set_Instances" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManagerConfiguration" ref="true" />
      </containers>
      <file name="c676029d-4512-3839-03bb-9bd10ebc1e14" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginManagerConfiguration.Plugins">
      <topicdata group="api" />
      <apidata name="Plugins" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Plugins" />
      <setter name="set_Plugins" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.Plugin" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManagerConfiguration" ref="true" />
      </containers>
      <file name="93e338a8-40bd-8837-6301-8a7bf536ffb9" />
    </api>
    <api id="T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance">
      <topicdata group="api" />
      <apidata name="PluginManagerConfigurationPluginInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance.#ctor" />
        <element api="P:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance.AssemblyName" />
        <element api="P:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance.Configuration" />
        <element api="P:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance.InstanceName" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
      </containers>
      <file name="35a06cc2-0f9b-f46b-fe48-4bb304c7ed05" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance">
      <topicdata name="PluginManagerConfigurationPluginInstance" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance" />
      <apidata name="PluginManagerConfigurationPluginInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance" />
      </containers>
      <file name="168c4cbb-9cba-083e-7601-7c01f368abc1" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance">
      <topicdata name="PluginManagerConfigurationPluginInstance" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance" />
      <apidata name="PluginManagerConfigurationPluginInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance.AssemblyName" />
        <element api="P:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance.Configuration" />
        <element api="P:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance.InstanceName" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance" />
      </containers>
      <file name="bda38733-30b9-931e-269f-5b9fd1c5cbdb" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance" ref="true" />
      </containers>
      <file name="7b67bec2-c709-6e0a-5079-c27f6932536e" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance.AssemblyName">
      <topicdata group="api" />
      <apidata name="AssemblyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AssemblyName" />
      <setter name="set_AssemblyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance" ref="true" />
      </containers>
      <file name="6492c562-0300-fa21-b4ac-7355e0d0cde8" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Configuration" />
      <setter name="set_Configuration" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance" ref="true" />
      </containers>
      <file name="19c89636-38d1-6a55-b870-4c363e457957" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance.InstanceName">
      <topicdata group="api" />
      <apidata name="InstanceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InstanceName" />
      <setter name="set_InstanceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance" ref="true" />
      </containers>
      <file name="ff9e9478-5469-5af8-212d-5113940cf5ee" />
    </api>
    <api id="T:Symbiote.Core.Plugin.PluginType">
      <topicdata group="api" />
      <apidata name="PluginType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Plugin.PluginType.Unknown" />
        <element api="F:Symbiote.Core.Plugin.PluginType.Connector" />
        <element api="F:Symbiote.Core.Plugin.PluginType.Endpoint" />
        <element api="F:Symbiote.Core.Plugin.PluginType.App" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
      </containers>
      <file name="ada44535-0d07-2556-b4b1-0fadcfc387fd" />
    </api>
    <api id="F:Symbiote.Core.Plugin.PluginType.App">
      <topicdata group="api" notopic="" />
      <apidata name="App" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
      </containers>
      <file name="40ea8574-c6d2-8979-af3a-4cf06061ebdc" />
    </api>
    <api id="F:Symbiote.Core.Plugin.PluginType.Connector">
      <topicdata group="api" notopic="" />
      <apidata name="Connector" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
      </containers>
      <file name="1dcd0911-e669-00ab-ba67-739f78fbdc48" />
    </api>
    <api id="F:Symbiote.Core.Plugin.PluginType.Endpoint">
      <topicdata group="api" notopic="" />
      <apidata name="Endpoint" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
      </containers>
      <file name="1f2c79fd-d63d-a3a8-1086-f14d7239ea84" />
    </api>
    <api id="F:Symbiote.Core.Plugin.PluginType.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginType" ref="false" />
      </containers>
      <file name="92df848f-9761-0abe-96a7-417ea4aad015" />
    </api>
    <api id="T:Symbiote.Core.Plugin.PluginTypeManager`1">
      <topicdata group="api" />
      <apidata name="PluginTypeManager" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Symbiote.Core.IManager" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginTypeManager`1.#ctor(Symbiote.Core.ProgramManager,System.Collections.Generic.List{Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance})" />
        <element api="M:Symbiote.Core.Plugin.PluginTypeManager`1.#cctor" />
        <element api="P:Symbiote.Core.Plugin.PluginTypeManager`1.ConfiguredInstances" />
        <element api="P:Symbiote.Core.Plugin.PluginTypeManager`1.Instances" />
        <element api="F:Symbiote.Core.Plugin.PluginTypeManager`1.logger" />
        <element api="F:Symbiote.Core.Plugin.PluginTypeManager`1.manager" />
        <element api="M:Symbiote.Core.Plugin.PluginTypeManager`1.Restart" />
        <element api="M:Symbiote.Core.Plugin.PluginTypeManager`1.Start" />
        <element api="P:Symbiote.Core.Plugin.PluginTypeManager`1.State" />
        <element api="M:Symbiote.Core.Plugin.PluginTypeManager`1.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
      </containers>
      <file name="bd48220d-cb55-2032-5583-3c97d56542a7" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.PluginTypeManager`1">
      <topicdata name="PluginTypeManager" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.PluginTypeManager`1" />
      <apidata name="PluginTypeManager" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.PluginTypeManager`1.Restart" />
        <element api="M:Symbiote.Core.Plugin.PluginTypeManager`1.Start" />
        <element api="M:Symbiote.Core.Plugin.PluginTypeManager`1.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginTypeManager`1" />
      </containers>
      <file name="249dfa81-7ba9-4256-fdf5-45e82d6e85f0" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.PluginTypeManager`1">
      <topicdata name="PluginTypeManager" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.PluginTypeManager`1" />
      <apidata name="PluginTypeManager" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Symbiote.Core.Plugin.PluginTypeManager`1.ConfiguredInstances" />
        <element api="P:Symbiote.Core.Plugin.PluginTypeManager`1.Instances" />
        <element api="P:Symbiote.Core.Plugin.PluginTypeManager`1.State" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginTypeManager`1" />
      </containers>
      <file name="c3465d49-31f5-6424-f6c5-b9314a3fabfc" />
    </api>
    <api id="Fields.T:Symbiote.Core.Plugin.PluginTypeManager`1">
      <topicdata name="PluginTypeManager" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Plugin.PluginTypeManager`1" />
      <apidata name="PluginTypeManager" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="F:Symbiote.Core.Plugin.PluginTypeManager`1.logger" />
        <element api="F:Symbiote.Core.Plugin.PluginTypeManager`1.manager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginTypeManager`1" />
      </containers>
      <file name="79dd163f-8528-fd73-5f22-bb27dd4fd40c" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginTypeManager`1.#ctor(Symbiote.Core.ProgramManager,System.Collections.Generic.List{Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
        <parameter name="configuredInstances">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginTypeManager`1" ref="true" />
      </containers>
      <file name="4cceb236-5a0a-c68e-7992-2e09d48e987a" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginTypeManager`1.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginTypeManager`1" ref="true" />
      </containers>
      <file name="c208d6b7-11eb-1d3a-84ab-8d5f9c5c5b1a" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginTypeManager`1.ConfiguredInstances">
      <topicdata group="api" />
      <apidata name="ConfiguredInstances" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ConfiguredInstances" />
      <setter name="set_ConfiguredInstances" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.PluginManagerConfigurationPluginInstance" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginTypeManager`1" ref="true" />
      </containers>
      <file name="39bd3cea-126d-3f92-fc10-da3ed4e5423d" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginTypeManager`1.Instances">
      <topicdata group="api" />
      <apidata name="Instances" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Instances" />
      <setter name="set_Instances" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Symbiote.Core.Plugin.PluginTypeManager`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginTypeManager`1" ref="true" />
      </containers>
      <file name="dc0e35c5-b2b9-2579-8d19-0296663e66a1" />
    </api>
    <api id="F:Symbiote.Core.Plugin.PluginTypeManager`1.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.xLogger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginTypeManager`1" ref="true" />
      </containers>
      <file name="523f8d98-7e80-2ab5-6265-c0e11c0c6bd6" />
    </api>
    <api id="F:Symbiote.Core.Plugin.PluginTypeManager`1.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginTypeManager`1" ref="true" />
      </containers>
      <file name="982dd2eb-8e56-ffcb-0924-30e3180e9354" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginTypeManager`1.Restart">
      <topicdata group="api" />
      <apidata name="Restart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Restart">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginTypeManager`1" ref="true" />
      </containers>
      <file name="a8e42163-477f-c8a1-f3be-2bca19330c7e" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginTypeManager`1.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Start">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginTypeManager`1" ref="true" />
      </containers>
      <file name="fbf90a5f-5f84-9ffd-5e52-43895ec7b1c9" />
    </api>
    <api id="P:Symbiote.Core.Plugin.PluginTypeManager`1.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_State" />
      <setter name="set_State" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.IManager.State">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginTypeManager`1" ref="true" />
      </containers>
      <file name="0f6c0c43-9780-9d87-7fc3-1bdcb86e1d5b" />
    </api>
    <api id="M:Symbiote.Core.Plugin.PluginTypeManager`1.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Stop">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin" />
        <type api="T:Symbiote.Core.Plugin.PluginTypeManager`1" ref="true" />
      </containers>
      <file name="88aba51d-eb04-9a3f-e586-d5d02340beb6" />
    </api>
    <api id="N:Symbiote.Core.Plugin.Connector">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Plugin.Connector" group="namespace" />
      <elements>
        <element api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" />
        <element api="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" />
        <element api="T:Symbiote.Core.Plugin.Connector.ConnectorInstance" />
        <element api="T:Symbiote.Core.Plugin.Connector.IAddable" />
        <element api="T:Symbiote.Core.Plugin.Connector.IConnector" />
        <element api="T:Symbiote.Core.Plugin.Connector.ISubscribable" />
        <element api="T:Symbiote.Core.Plugin.Connector.IWriteable" />
        <element api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" />
      </elements>
      <file name="b7e782f4-8039-d285-c068-23d11dac1984" />
    </api>
    <api id="T:Symbiote.Core.Plugin.Connector.ConnectorInstance">
      <topicdata group="api" />
      <apidata name="ConnectorInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorInstance.#ctor" />
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorInstance.EndpointType" />
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorInstance.Name" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
      </containers>
      <file name="ca4c4246-d94b-8b4c-5f32-a80593487e59" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.Connector.ConnectorInstance">
      <topicdata name="ConnectorInstance" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.Connector.ConnectorInstance" />
      <apidata name="ConnectorInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorInstance" />
      </containers>
      <file name="47b79f7d-d8a5-966e-3c1b-d489149e081b" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.Connector.ConnectorInstance">
      <topicdata name="ConnectorInstance" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.Connector.ConnectorInstance" />
      <apidata name="ConnectorInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorInstance.EndpointType" />
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorInstance.Name" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorInstance" />
      </containers>
      <file name="7d35e5b7-111f-d354-53b2-5181d534cf84" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorInstance.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorInstance" ref="true" />
      </containers>
      <file name="08999603-6a44-1cb9-a64f-f4bd2feb763b" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Connector.ConnectorInstance.EndpointType">
      <topicdata group="api" />
      <apidata name="EndpointType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EndpointType" />
      <setter name="set_EndpointType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorInstance" ref="true" />
      </containers>
      <file name="6681ba4a-2d8b-b497-6a4f-bc07a511f313" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Connector.ConnectorInstance.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorInstance" ref="true" />
      </containers>
      <file name="5587d6e1-5d24-b3f2-77d6-df6947f06641" />
    </api>
    <api id="T:Symbiote.Core.Plugin.Connector.ConnectorItem">
      <topicdata group="api" />
      <apidata name="ConnectorItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Symbiote.Core.Item" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.AddChild">
          <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.AddChild(Symbiote.Core.Plugin.Connector.ConnectorItem)" />
          <element api="M:Symbiote.Core.Item.AddChild(Symbiote.Core.Item)" />
        </element>
        <element api="E:Symbiote.Core.Item.Changed" />
        <element api="P:Symbiote.Core.Item.Children" />
        <element api="M:Symbiote.Core.Item.Clone" />
        <element api="P:Symbiote.Core.Item.FQN" />
        <element api="P:Symbiote.Core.Item.Guid" />
        <element api="M:Symbiote.Core.Item.HasChildren" />
        <element api="P:Symbiote.Core.Item.Name" />
        <element api="M:Symbiote.Core.Item.OnChange(System.Object)" />
        <element api="P:Symbiote.Core.Item.Parent" />
        <element api="P:Symbiote.Core.Item.Path" />
        <element api="M:Symbiote.Core.Item.ReadAsync" />
        <element api="M:Symbiote.Core.Item.ReadFromSourceAsync" />
        <element api="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.RemoveChild">
          <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.RemoveChild(Symbiote.Core.Plugin.Connector.ConnectorItem)" />
          <element api="M:Symbiote.Core.Item.RemoveChild(Symbiote.Core.Item)" />
        </element>
        <element api="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.SetParent">
          <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.SetParent(Symbiote.Core.Plugin.Connector.ConnectorItem)" />
          <element api="M:Symbiote.Core.Item.SetParent(Symbiote.Core.Item)" />
        </element>
        <element api="P:Symbiote.Core.Item.SourceFQN" />
        <element api="P:Symbiote.Core.Item.SourceItem" />
        <element api="M:Symbiote.Core.Item.SourceItemChanged(Symbiote.Core.Item,Symbiote.Core.ItemEventArgs)" />
        <element api="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.ToJson">
          <element api="M:Symbiote.Core.Item.ToJson" />
          <element api="M:Symbiote.Core.Item.ToJson(Newtonsoft.Json.Serialization.DefaultContractResolver)" />
        </element>
        <element api="M:Symbiote.Core.Item.ToString" />
        <element api="M:Symbiote.Core.Item.UnsubscribeFromSource" />
        <element api="P:Symbiote.Core.Item.Value" />
        <element api="P:Symbiote.Core.Item.Writeable" />
        <element api="M:Symbiote.Core.Item.WriteAsync(System.Object)" />
        <element api="M:Symbiote.Core.Item.WriteToSourceAsync(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor">
          <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor" />
          <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor(Symbiote.Core.Plugin.Connector.IConnector,System.String,System.Boolean)" />
          <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor(Symbiote.Core.Plugin.Connector.IConnector,System.String,System.String)" />
          <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor(Symbiote.Core.Plugin.Connector.IConnector,System.String,System.String,System.Boolean)" />
        </element>
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorItem.Connector" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.Read" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.ReadFromSource" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.SubscribeToSource" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.Write(System.Object)" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.WriteToSource(System.Object)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
      </containers>
      <file name="d6d56b94-8293-8cdc-d6f9-79323bb89dde" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.Connector.ConnectorItem">
      <topicdata name="ConnectorItem" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.Connector.ConnectorItem" />
      <apidata name="ConnectorItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.AddChild">
          <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.AddChild(Symbiote.Core.Plugin.Connector.ConnectorItem)" />
          <element api="M:Symbiote.Core.Item.AddChild(Symbiote.Core.Item)" />
        </element>
        <element api="M:Symbiote.Core.Item.Clone" />
        <element api="M:Symbiote.Core.Item.HasChildren" />
        <element api="M:Symbiote.Core.Item.OnChange(System.Object)" />
        <element api="M:Symbiote.Core.Item.ReadAsync" />
        <element api="M:Symbiote.Core.Item.ReadFromSourceAsync" />
        <element api="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.RemoveChild">
          <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.RemoveChild(Symbiote.Core.Plugin.Connector.ConnectorItem)" />
          <element api="M:Symbiote.Core.Item.RemoveChild(Symbiote.Core.Item)" />
        </element>
        <element api="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.SetParent">
          <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.SetParent(Symbiote.Core.Plugin.Connector.ConnectorItem)" />
          <element api="M:Symbiote.Core.Item.SetParent(Symbiote.Core.Item)" />
        </element>
        <element api="M:Symbiote.Core.Item.SourceItemChanged(Symbiote.Core.Item,Symbiote.Core.ItemEventArgs)" />
        <element api="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.ToJson">
          <element api="M:Symbiote.Core.Item.ToJson" />
          <element api="M:Symbiote.Core.Item.ToJson(Newtonsoft.Json.Serialization.DefaultContractResolver)" />
        </element>
        <element api="M:Symbiote.Core.Item.ToString" />
        <element api="M:Symbiote.Core.Item.UnsubscribeFromSource" />
        <element api="M:Symbiote.Core.Item.WriteAsync(System.Object)" />
        <element api="M:Symbiote.Core.Item.WriteToSourceAsync(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.Read" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.ReadFromSource" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.SubscribeToSource" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.Write(System.Object)" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.WriteToSource(System.Object)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" />
      </containers>
      <file name="b97781a2-203d-8730-1757-8ea19b072cd6" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.Connector.ConnectorItem">
      <topicdata name="ConnectorItem" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.Connector.ConnectorItem" />
      <apidata name="ConnectorItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Item.Children" />
        <element api="P:Symbiote.Core.Item.FQN" />
        <element api="P:Symbiote.Core.Item.Guid" />
        <element api="P:Symbiote.Core.Item.Name" />
        <element api="P:Symbiote.Core.Item.Parent" />
        <element api="P:Symbiote.Core.Item.Path" />
        <element api="P:Symbiote.Core.Item.SourceFQN" />
        <element api="P:Symbiote.Core.Item.SourceItem" />
        <element api="P:Symbiote.Core.Item.Value" />
        <element api="P:Symbiote.Core.Item.Writeable" />
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorItem.Connector" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" />
      </containers>
      <file name="1252e4f6-55e1-cac2-5e35-b34f6c456440" />
    </api>
    <api id="Events.T:Symbiote.Core.Plugin.Connector.ConnectorItem">
      <topicdata name="ConnectorItem" group="list" subgroup="Events" typeTopicId="T:Symbiote.Core.Plugin.Connector.ConnectorItem" />
      <apidata name="ConnectorItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:Symbiote.Core.Item.Changed" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" />
      </containers>
      <file name="2b3d7797-8bf8-22a0-9ab4-6128ab0aa67a" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.AddChild">
      <topicdata name="AddChild" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AddChild" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.AddChild(Symbiote.Core.Plugin.Connector.ConnectorItem)" />
        <element api="M:Symbiote.Core.Item.AddChild(Symbiote.Core.Item)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="b8c4cd0e-10cd-3f97-1f24-2e1a5061af76" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.RemoveChild">
      <topicdata name="RemoveChild" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RemoveChild" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.RemoveChild(Symbiote.Core.Plugin.Connector.ConnectorItem)" />
        <element api="M:Symbiote.Core.Item.RemoveChild(Symbiote.Core.Item)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="31f17808-6199-d338-6fe2-60a836571d9e" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.SetParent">
      <topicdata name="SetParent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="SetParent" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.SetParent(Symbiote.Core.Plugin.Connector.ConnectorItem)" />
        <element api="M:Symbiote.Core.Item.SetParent(Symbiote.Core.Item)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="68d24b73-2a29-1873-390a-fa19d608cad2" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor(Symbiote.Core.Plugin.Connector.IConnector,System.String,System.Boolean)" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor(Symbiote.Core.Plugin.Connector.IConnector,System.String,System.String)" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor(Symbiote.Core.Plugin.Connector.IConnector,System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="cb11e45c-bf99-7e9a-f33a-03db0f7373c8" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="c344a911-aa06-082b-2dfc-6285da81db48" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor(Symbiote.Core.Plugin.Connector.IConnector,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor" />
      <parameters>
        <parameter name="connector">
          <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
        </parameter>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isRoot">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="1c250f47-f03e-e201-eeab-58b2c865a86c" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor(Symbiote.Core.Plugin.Connector.IConnector,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor" />
      <parameters>
        <parameter name="connector">
          <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
        </parameter>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceFQN">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="2d50f92c-614c-5314-509a-025579278d47" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor(Symbiote.Core.Plugin.Connector.IConnector,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.#ctor" />
      <parameters>
        <parameter name="connector">
          <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
        </parameter>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceFQN" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="isRoot" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="79b45721-36d5-f448-e974-22d66242fd71" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorItem.AddChild(Symbiote.Core.Plugin.Connector.ConnectorItem)">
      <topicdata group="api" />
      <apidata name="AddChild" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.AddChild" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pluginItem">
          <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="142761eb-91a3-d417-b7e2-deb049f4bb69" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Connector.ConnectorItem.Connector">
      <topicdata group="api" />
      <apidata name="Connector" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Connector" />
      <setter name="set_Connector" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Newtonsoft.Json.JsonIgnoreAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="4fe37c59-2ffc-18c6-5e7b-1ea84f7a636f" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorItem.Read">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Symbiote.Core.Item.Read">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="0380144f-129e-7d8b-bb61-f0c21cc2db24" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorItem.ReadFromSource">
      <topicdata group="api" />
      <apidata name="ReadFromSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Symbiote.Core.Item.ReadFromSource">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="e2a7702b-0915-89d8-15e1-a79cb33dc16c" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorItem.RemoveChild(Symbiote.Core.Plugin.Connector.ConnectorItem)">
      <topicdata group="api" />
      <apidata name="RemoveChild" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.RemoveChild" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pluginItem">
          <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="81bcf859-5754-6612-39c2-b50dc712790c" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorItem.SetParent(Symbiote.Core.Plugin.Connector.ConnectorItem)">
      <topicdata group="api" />
      <apidata name="SetParent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.Connector.ConnectorItem.SetParent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parent">
          <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="160a6cad-2175-cac2-9bb7-69b79b0b3b25" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorItem.SubscribeToSource">
      <topicdata group="api" />
      <apidata name="SubscribeToSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Symbiote.Core.Item.SubscribeToSource">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="99f6539a-8adb-52fa-2362-390abbe9a7d6" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorItem.Write(System.Object)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Symbiote.Core.Item.Write(System.Object)">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="4262ebaa-d8be-a840-01d0-899c374805ba" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorItem.WriteToSource(System.Object)">
      <topicdata group="api" />
      <apidata name="WriteToSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Symbiote.Core.Item.WriteToSource(System.Object)">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
      </containers>
      <file name="b3ecd043-3621-75c7-d802-e6c3fe28bc1a" />
    </api>
    <api id="T:Symbiote.Core.Plugin.Connector.ConnectorManager">
      <topicdata group="api" />
      <apidata name="ConnectorManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.IManager" ref="true" />
        <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.#ctor(Symbiote.Core.Plugin.PluginManager,Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.#cctor" />
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorManager.Configuration" />
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorManager.ConfigurationDefinition" />
        <element api="Overload:Symbiote.Core.Plugin.Connector.ConnectorManager.Configure">
          <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Configure" />
          <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Configure(Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration)" />
        </element>
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorManager.EndpointInstances" />
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorManager.Endpoints" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.GetConfigurationDefinition" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.GetDefaultConfiguration" />
        <element api="F:Symbiote.Core.Plugin.Connector.ConnectorManager.instance" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Instance(Symbiote.Core.Plugin.PluginManager,Symbiote.Core.ProgramManager)" />
        <element api="F:Symbiote.Core.Plugin.Connector.ConnectorManager.logger" />
        <element api="F:Symbiote.Core.Plugin.Connector.ConnectorManager.manager" />
        <element api="F:Symbiote.Core.Plugin.Connector.ConnectorManager.pluginManager" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.RegisterEndpoints" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Restart" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.SaveConfiguration" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Start" />
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorManager.State" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
      </containers>
      <file name="5e3a3f2f-2000-68e1-a777-cf144f7888df" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.Connector.ConnectorManager">
      <topicdata name="ConnectorManager" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.Connector.ConnectorManager" />
      <apidata name="ConnectorManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Plugin.Connector.ConnectorManager.Configure">
          <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Configure" />
          <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Configure(Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration)" />
        </element>
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.GetConfigurationDefinition" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.GetDefaultConfiguration" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Instance(Symbiote.Core.Plugin.PluginManager,Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.RegisterEndpoints" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Restart" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.SaveConfiguration" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Start" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" />
      </containers>
      <file name="c92854de-85bd-df7d-6919-7beb16c9dc43" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.Connector.ConnectorManager">
      <topicdata name="ConnectorManager" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.Connector.ConnectorManager" />
      <apidata name="ConnectorManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorManager.Configuration" />
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorManager.ConfigurationDefinition" />
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorManager.EndpointInstances" />
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorManager.Endpoints" />
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorManager.State" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" />
      </containers>
      <file name="6afe2143-ba97-5090-d6b6-ada40046c7c0" />
    </api>
    <api id="Fields.T:Symbiote.Core.Plugin.Connector.ConnectorManager">
      <topicdata name="ConnectorManager" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Plugin.Connector.ConnectorManager" />
      <apidata name="ConnectorManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Plugin.Connector.ConnectorManager.instance" />
        <element api="F:Symbiote.Core.Plugin.Connector.ConnectorManager.logger" />
        <element api="F:Symbiote.Core.Plugin.Connector.ConnectorManager.manager" />
        <element api="F:Symbiote.Core.Plugin.Connector.ConnectorManager.pluginManager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" />
      </containers>
      <file name="d65c7ef4-d5ef-93a4-538a-1fadebc29545" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.Connector.ConnectorManager.Configure">
      <topicdata name="Configure" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Configure" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Configure" />
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Configure(Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="e60a3d23-3b0b-12b1-c3cb-c19e68a24525" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorManager.#ctor(Symbiote.Core.Plugin.PluginManager,Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" special="true" />
      <parameters>
        <parameter name="pluginManager">
          <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
        </parameter>
        <parameter name="programManager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="7b1442e9-a6fd-6688-154c-0bda14a0f51d" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorManager.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="a3995b38-b9af-54e9-ba9e-46fa51f7bbb6" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Connector.ConnectorManager.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Configuration" />
      <setter name="set_Configuration" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Configuration.IConfigurable`1.Configuration">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="f823f647-6a1f-0c7e-4f1d-bfc428f23e63" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Connector.ConnectorManager.ConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="ConfigurationDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ConfigurationDefinition" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Configuration.IConfigurable`1.ConfigurationDefinition">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="87eecb6f-e162-16bd-b538-f6534d97ed00" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Configure">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.Connector.ConnectorManager.Configure" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="86331619-237a-6d74-e7d0-8723235cc038" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Configure(Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration)">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.Connector.ConnectorManager.Configure" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="configuration">
          <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure(`0)">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="f837faac-84f6-4a28-1379-f04d3a6ba8c8" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Connector.ConnectorManager.EndpointInstances">
      <topicdata group="api" />
      <apidata name="EndpointInstances" group="member" subgroup="property" />
      <memberdata visibility="assembly" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_EndpointInstances" />
      <setter name="set_EndpointInstances" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="9911a4fd-952e-2275-b16d-504cded7d6c5" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Connector.ConnectorManager.Endpoints">
      <topicdata group="api" />
      <apidata name="Endpoints" group="member" subgroup="property" />
      <memberdata visibility="assembly" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Endpoints" />
      <setter name="set_Endpoints" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="8001a58f-4be7-3882-4767-cbaa71697004" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorManager.GetConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="GetConfigurationDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="69fa4429-b1d8-c831-ebfd-572ebd06ed8e" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorManager.GetDefaultConfiguration">
      <topicdata group="api" />
      <apidata name="GetDefaultConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="0bdc35bf-571a-421a-4e38-4d8fb6ed2668" />
    </api>
    <api id="F:Symbiote.Core.Plugin.Connector.ConnectorManager.instance">
      <topicdata group="api" />
      <apidata name="instance" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="ce2826c1-736c-2f83-63a4-11d3ae2c6a01" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Instance(Symbiote.Core.Plugin.PluginManager,Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pluginManager">
          <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
        </parameter>
        <parameter name="programManager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="c6cc71e7-ccda-aaf5-0f61-d3039ed28a08" />
    </api>
    <api id="F:Symbiote.Core.Plugin.Connector.ConnectorManager.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="eb94ebed-1e6d-8d5b-a772-d2d9f85ba83d" />
    </api>
    <api id="F:Symbiote.Core.Plugin.Connector.ConnectorManager.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="26f502d3-cfeb-f18d-9136-bd2431bfe4ce" />
    </api>
    <api id="F:Symbiote.Core.Plugin.Connector.ConnectorManager.pluginManager">
      <topicdata group="api" />
      <apidata name="pluginManager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="9508216e-35eb-0fa0-7eb8-f3ee749cff60" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorManager.RegisterEndpoints">
      <topicdata group="api" />
      <apidata name="RegisterEndpoints" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="88ab2251-051c-e6b7-cb38-1309d03028b0" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Restart">
      <topicdata group="api" />
      <apidata name="Restart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Restart">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="bb37adfd-ec71-1713-a9c7-e841a7ff66e1" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorManager.SaveConfiguration">
      <topicdata group="api" />
      <apidata name="SaveConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.SaveConfiguration">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="f8dd421b-96e5-2d74-df05-a1c58f492f1e" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Start">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="b0b63862-9cab-d6a5-1d87-0e2cc92e8842" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Connector.ConnectorManager.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_State" />
      <setter name="set_State" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.IManager.State">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="312b6aca-28a5-789b-bed3-b49853b4ce73" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorManager.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Stop">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManager" ref="true" />
      </containers>
      <file name="520041fc-c0c0-a5c3-efd0-d0b7bede42c4" />
    </api>
    <api id="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration">
      <topicdata group="api" />
      <apidata name="ConnectorManagerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration.#ctor" />
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration.Instances" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
      </containers>
      <file name="15f1ebd2-ac5b-3d2d-7820-256cc9fc6d9c" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration">
      <topicdata name="ConnectorManagerConfiguration" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" />
      <apidata name="ConnectorManagerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" />
      </containers>
      <file name="f63a29ae-77e7-06c9-97e7-b06443758035" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration">
      <topicdata name="ConnectorManagerConfiguration" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" />
      <apidata name="ConnectorManagerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration.Instances" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" />
      </containers>
      <file name="29af567a-6b4a-c4ef-d159-9dfd69ba48ed" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" ref="true" />
      </containers>
      <file name="e0093808-9447-8411-401b-9004e81eeb14" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration.Instances">
      <topicdata group="api" />
      <apidata name="Instances" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Instances" />
      <setter name="set_Instances" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.Connector.ConnectorInstance" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ConnectorManagerConfiguration" ref="true" />
      </containers>
      <file name="b60d2077-9500-e8e0-b8a9-b558b85fdcdd" />
    </api>
    <api id="T:Symbiote.Core.Plugin.Connector.IAddable">
      <topicdata group="api" />
      <apidata name="IAddable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.Connector.IAddable.Add(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
      </containers>
      <file name="909cae23-5c04-63a6-f7a0-e7a9a53fe18d" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.Connector.IAddable">
      <topicdata name="IAddable" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.Connector.IAddable" />
      <apidata name="IAddable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.Connector.IAddable.Add(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.IAddable" />
      </containers>
      <file name="17974381-d55a-80c2-3ea1-033d2b68dfe3" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.IAddable.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceFQN">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.IAddable" ref="true" />
      </containers>
      <file name="ca704c50-dcca-757e-909a-3325d5a3c4af" />
    </api>
    <api id="T:Symbiote.Core.Plugin.Connector.IConnector">
      <topicdata group="api" />
      <apidata name="IConnector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:Symbiote.Core.Plugin.IPluginInstance" ref="true" />
        <type api="T:Symbiote.Core.Plugin.IPlugin" ref="true" />
      </implements>
      <implementors>
        <type api="T:Symbiote.Core.Platform.Windows.WindowsPlatformConnector" ref="true" />
        <type api="T:Symbiote.Core.Platform.UNIX.UNIXPlatformConnector" ref="true" />
      </implementors>
      <elements>
        <element api="P:Symbiote.Core.Plugin.IPlugin.FQN" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Name" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.PluginType" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Version" />
        <element api="P:Symbiote.Core.Plugin.IPluginInstance.InstanceName" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Restart" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Start" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Stop" />
        <element api="Overload:Symbiote.Core.Plugin.Connector.IConnector.Browse">
          <element api="M:Symbiote.Core.Plugin.Connector.IConnector.Browse" />
          <element api="M:Symbiote.Core.Plugin.Connector.IConnector.Browse(Symbiote.Core.Item)" />
        </element>
        <element api="M:Symbiote.Core.Plugin.Connector.IConnector.Find(System.String)" />
        <element api="M:Symbiote.Core.Plugin.Connector.IConnector.Read(Symbiote.Core.Item)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
      </containers>
      <file name="075c543e-ba6e-1c3c-f05b-93a231780b77" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.Connector.IConnector">
      <topicdata name="IConnector" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.Connector.IConnector" />
      <apidata name="IConnector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Restart" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Start" />
        <element api="M:Symbiote.Core.Plugin.IPluginInstance.Stop" />
        <element api="Overload:Symbiote.Core.Plugin.Connector.IConnector.Browse">
          <element api="M:Symbiote.Core.Plugin.Connector.IConnector.Browse" />
          <element api="M:Symbiote.Core.Plugin.Connector.IConnector.Browse(Symbiote.Core.Item)" />
        </element>
        <element api="M:Symbiote.Core.Plugin.Connector.IConnector.Find(System.String)" />
        <element api="M:Symbiote.Core.Plugin.Connector.IConnector.Read(Symbiote.Core.Item)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" />
      </containers>
      <file name="1fd3dd3b-c33e-296b-cf65-30ce6acfcb80" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.Connector.IConnector">
      <topicdata name="IConnector" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.Connector.IConnector" />
      <apidata name="IConnector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.IPlugin.FQN" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Name" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.PluginType" />
        <element api="P:Symbiote.Core.Plugin.IPlugin.Version" />
        <element api="P:Symbiote.Core.Plugin.IPluginInstance.InstanceName" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" />
      </containers>
      <file name="fc45a142-5fa7-da1d-7cac-389504dc73e4" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.Connector.IConnector.Browse">
      <topicdata name="Browse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Browse" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.Connector.IConnector.Browse" />
        <element api="M:Symbiote.Core.Plugin.Connector.IConnector.Browse(Symbiote.Core.Item)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
      </containers>
      <file name="5e8d2b3e-cbc8-c059-67a9-765b77d8418b" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.IConnector.Browse">
      <topicdata group="api" />
      <apidata name="Browse" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.Connector.IConnector.Browse" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
      </containers>
      <file name="15c8591f-ee8c-3b6a-1611-4d9de5d12ad9" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.IConnector.Browse(Symbiote.Core.Item)">
      <topicdata group="api" />
      <apidata name="Browse" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.Connector.IConnector.Browse" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="root">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Item" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
      </containers>
      <file name="bd0714c2-0aa8-b64d-4bac-998df2619f6b" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.IConnector.Find(System.String)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
      </containers>
      <file name="42e220a6-c9e6-6651-599a-ed568b7ac179" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.IConnector.Read(Symbiote.Core.Item)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.IConnector" ref="true" />
      </containers>
      <file name="e4d28169-49ae-e8c9-88c9-3e9bcdc52af8" />
    </api>
    <api id="T:Symbiote.Core.Plugin.Connector.ISubscribable">
      <topicdata group="api" />
      <apidata name="ISubscribable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.Connector.ISubscribable.Subscribe(Symbiote.Core.Plugin.Connector.ConnectorItem)" />
        <element api="P:Symbiote.Core.Plugin.Connector.ISubscribable.Subscriptions" />
        <element api="M:Symbiote.Core.Plugin.Connector.ISubscribable.UnSubscribe(Symbiote.Core.Plugin.Connector.ConnectorItem)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
      </containers>
      <file name="a889c36b-4180-e31b-6f97-55b5180f8d94" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.Connector.ISubscribable">
      <topicdata name="ISubscribable" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.Connector.ISubscribable" />
      <apidata name="ISubscribable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.Connector.ISubscribable.Subscribe(Symbiote.Core.Plugin.Connector.ConnectorItem)" />
        <element api="M:Symbiote.Core.Plugin.Connector.ISubscribable.UnSubscribe(Symbiote.Core.Plugin.Connector.ConnectorItem)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ISubscribable" />
      </containers>
      <file name="92bc1800-6ee9-cf76-d7e4-b9dbc8bb7615" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.Connector.ISubscribable">
      <topicdata name="ISubscribable" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.Connector.ISubscribable" />
      <apidata name="ISubscribable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.Connector.ISubscribable.Subscriptions" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ISubscribable" />
      </containers>
      <file name="2d267f36-d60a-2dfb-315f-2cf679aed96c" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ISubscribable.Subscribe(Symbiote.Core.Plugin.Connector.ConnectorItem)">
      <topicdata group="api" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ISubscribable" ref="true" />
      </containers>
      <file name="7d201a76-a582-adf5-c50c-d6ca1936f63d" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Connector.ISubscribable.Subscriptions">
      <topicdata group="api" />
      <apidata name="Subscriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Subscriptions" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ISubscribable" ref="true" />
      </containers>
      <file name="5de8a778-ee03-7ca7-97db-7ef44de98e57" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.ISubscribable.UnSubscribe(Symbiote.Core.Plugin.Connector.ConnectorItem)">
      <topicdata group="api" />
      <apidata name="UnSubscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Symbiote.Core.Plugin.Connector.ConnectorItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.ISubscribable" ref="true" />
      </containers>
      <file name="8b4f106e-f75a-6f45-97e9-0596f2a9c079" />
    </api>
    <api id="T:Symbiote.Core.Plugin.Connector.IWriteable">
      <topicdata group="api" />
      <apidata name="IWriteable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.Connector.IWriteable.Write(Symbiote.Core.Item,System.Object)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
      </containers>
      <file name="baab42e2-3802-fc96-5de9-bb2d7b03ab97" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.Connector.IWriteable">
      <topicdata name="IWriteable" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.Connector.IWriteable" />
      <apidata name="IWriteable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.Connector.IWriteable.Write(Symbiote.Core.Item,System.Object)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.IWriteable" />
      </containers>
      <file name="27d12ab1-d9b6-d68b-2c5c-dfb3c238e892" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Connector.IWriteable.Write(Symbiote.Core.Item,System.Object)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Symbiote.Core.Item" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Connector" />
        <type api="T:Symbiote.Core.Plugin.Connector.IWriteable" ref="true" />
      </containers>
      <file name="6f884f03-8958-b930-c60b-4275435cb7c1" />
    </api>
    <api id="N:Symbiote.Core.Plugin.Endpoint">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Plugin.Endpoint" group="namespace" />
      <elements>
        <element api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" />
        <element api="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" />
        <element api="T:Symbiote.Core.Plugin.Endpoint.EndpointInstance" />
      </elements>
      <file name="d1879b87-02c5-804c-0a83-bd66295910db" />
    </api>
    <api id="T:Symbiote.Core.Plugin.Endpoint.EndpointInstance">
      <topicdata group="api" />
      <apidata name="EndpointInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointInstance.#ctor" />
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointInstance.EndpointType" />
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointInstance.Name" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
      </containers>
      <file name="d9a9f7d1-6401-7529-46b5-32856ffd2cca" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.Endpoint.EndpointInstance">
      <topicdata name="EndpointInstance" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.Endpoint.EndpointInstance" />
      <apidata name="EndpointInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointInstance" />
      </containers>
      <file name="4f629298-a162-55dd-f88d-28d85cb32042" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.Endpoint.EndpointInstance">
      <topicdata name="EndpointInstance" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.Endpoint.EndpointInstance" />
      <apidata name="EndpointInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointInstance.EndpointType" />
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointInstance.Name" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointInstance" />
      </containers>
      <file name="0e9e0c2c-2358-5180-4bc0-b67a19c1e2d4" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Endpoint.EndpointInstance.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointInstance" ref="true" />
      </containers>
      <file name="0d1401ac-eecc-6948-0660-bfdff30a3638" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Endpoint.EndpointInstance.EndpointType">
      <topicdata group="api" />
      <apidata name="EndpointType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EndpointType" />
      <setter name="set_EndpointType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointInstance" ref="true" />
      </containers>
      <file name="b2aab7db-a23c-3490-1a24-7671604a0956" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Endpoint.EndpointInstance.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointInstance" ref="true" />
      </containers>
      <file name="eb21cf1d-cad5-51de-ae83-3d46d291db94" />
    </api>
    <api id="T:Symbiote.Core.Plugin.Endpoint.EndpointManager">
      <topicdata group="api" />
      <apidata name="EndpointManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.IManager" ref="true" />
        <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.#ctor(Symbiote.Core.Plugin.PluginManager,Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.#cctor" />
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configuration" />
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointManager.ConfigurationDefinition" />
        <element api="Overload:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configure">
          <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configure" />
          <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configure(Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration)" />
        </element>
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointManager.EndpointInstances" />
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointManager.Endpoints" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.GetConfigurationDefinition" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.GetDefaultConfiguration" />
        <element api="F:Symbiote.Core.Plugin.Endpoint.EndpointManager.instance" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Instance(Symbiote.Core.Plugin.PluginManager,Symbiote.Core.ProgramManager)" />
        <element api="F:Symbiote.Core.Plugin.Endpoint.EndpointManager.logger" />
        <element api="F:Symbiote.Core.Plugin.Endpoint.EndpointManager.manager" />
        <element api="F:Symbiote.Core.Plugin.Endpoint.EndpointManager.pluginManager" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.RegisterEndpoints" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Restart" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.SaveConfiguration" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Start" />
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointManager.State" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
      </containers>
      <file name="0e383464-4c9d-4a5c-e278-891635c381c2" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.Endpoint.EndpointManager">
      <topicdata name="EndpointManager" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" />
      <apidata name="EndpointManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configure">
          <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configure" />
          <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configure(Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration)" />
        </element>
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.GetConfigurationDefinition" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.GetDefaultConfiguration" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Instance(Symbiote.Core.Plugin.PluginManager,Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.RegisterEndpoints" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Restart" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.SaveConfiguration" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Start" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" />
      </containers>
      <file name="c94077e9-7488-1be2-0f2a-05f1b59e8b16" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.Endpoint.EndpointManager">
      <topicdata name="EndpointManager" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" />
      <apidata name="EndpointManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configuration" />
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointManager.ConfigurationDefinition" />
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointManager.EndpointInstances" />
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointManager.Endpoints" />
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointManager.State" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" />
      </containers>
      <file name="c4e0c654-1a87-1f29-1574-61e0352fc1cd" />
    </api>
    <api id="Fields.T:Symbiote.Core.Plugin.Endpoint.EndpointManager">
      <topicdata name="EndpointManager" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" />
      <apidata name="EndpointManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Plugin.Endpoint.EndpointManager.instance" />
        <element api="F:Symbiote.Core.Plugin.Endpoint.EndpointManager.logger" />
        <element api="F:Symbiote.Core.Plugin.Endpoint.EndpointManager.manager" />
        <element api="F:Symbiote.Core.Plugin.Endpoint.EndpointManager.pluginManager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" />
      </containers>
      <file name="a8cef751-6d49-9531-0a7a-26bdd7702e09" />
    </api>
    <api id="Overload:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configure">
      <topicdata name="Configure" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Configure" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configure" />
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configure(Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="f795f576-ea9e-88e2-9ea5-799f4fa50cfe" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.#ctor(Symbiote.Core.Plugin.PluginManager,Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" special="true" />
      <parameters>
        <parameter name="pluginManager">
          <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
        </parameter>
        <parameter name="programManager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="2f4cfd8d-7016-19ad-8adf-f3f6ba4cf47c" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="45ddea88-24d6-219a-7f3c-61c563d184e4" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Configuration" />
      <setter name="set_Configuration" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Configuration.IConfigurable`1.Configuration">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="c54ea799-713b-7842-d17d-d42f68441ce2" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Endpoint.EndpointManager.ConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="ConfigurationDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ConfigurationDefinition" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Configuration.IConfigurable`1.ConfigurationDefinition">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="c89e182b-4957-e353-48e0-aea95177962c" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configure">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configure" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="e6fbcc80-be17-5905-ed7d-4b034eabc8ff" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configure(Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration)">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Plugin.Endpoint.EndpointManager.Configure" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="configuration">
          <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure(`0)">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="f402cdb1-d969-c694-f54b-a7c5aa216952" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Endpoint.EndpointManager.EndpointInstances">
      <topicdata group="api" />
      <apidata name="EndpointInstances" group="member" subgroup="property" />
      <memberdata visibility="assembly" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_EndpointInstances" />
      <setter name="set_EndpointInstances" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Symbiote.Core.Plugin.IEndpoint" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="a00f2beb-ca2d-b1b7-558b-e124e1fc2ec6" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Endpoint.EndpointManager.Endpoints">
      <topicdata group="api" />
      <apidata name="Endpoints" group="member" subgroup="property" />
      <memberdata visibility="assembly" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Endpoints" />
      <setter name="set_Endpoints" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="1fd7a0fd-05a0-90a3-6287-73f09e481f07" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.GetConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="GetConfigurationDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="642ce6f4-65bd-ceb8-b485-88e2fe3233fd" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.GetDefaultConfiguration">
      <topicdata group="api" />
      <apidata name="GetDefaultConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="08d0301d-0c97-333e-8926-16462ab72c45" />
    </api>
    <api id="F:Symbiote.Core.Plugin.Endpoint.EndpointManager.instance">
      <topicdata group="api" />
      <apidata name="instance" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="61d21278-aca7-6455-8430-943f0a5d8046" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Instance(Symbiote.Core.Plugin.PluginManager,Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pluginManager">
          <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
        </parameter>
        <parameter name="programManager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="0c668a15-d2e9-2409-dc63-992f87b9314d" />
    </api>
    <api id="F:Symbiote.Core.Plugin.Endpoint.EndpointManager.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="abd1fc00-9dee-d344-cd76-9f54513ef0bd" />
    </api>
    <api id="F:Symbiote.Core.Plugin.Endpoint.EndpointManager.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="553d1332-2a0f-f702-a235-8090b346fac4" />
    </api>
    <api id="F:Symbiote.Core.Plugin.Endpoint.EndpointManager.pluginManager">
      <topicdata group="api" />
      <apidata name="pluginManager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Plugin.PluginManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="051d5b1b-7056-6261-e81c-bac3b7804a7a" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.RegisterEndpoints">
      <topicdata group="api" />
      <apidata name="RegisterEndpoints" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="1d37478b-71d0-53e9-4fbb-1c7989209b12" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Restart">
      <topicdata group="api" />
      <apidata name="Restart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Restart">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="3b89495d-21ab-ec39-0532-2f7b3394ec88" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.SaveConfiguration">
      <topicdata group="api" />
      <apidata name="SaveConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.SaveConfiguration">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="f2713b06-0c2e-fefe-9ed5-17a8d4cbee0f" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Start">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="21a1d239-4c22-dba8-98c7-2afa7f9dc0ce" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Endpoint.EndpointManager.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_State" />
      <setter name="set_State" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.IManager.State">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="27e9b3b0-7f66-6f94-ca6b-b1bbc410b9e2" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Endpoint.EndpointManager.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Stop">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManager" ref="true" />
      </containers>
      <file name="59b8519a-6e0c-13ef-6166-a86ee489f5b4" />
    </api>
    <api id="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration">
      <topicdata group="api" />
      <apidata name="EndpointManagerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration.#ctor" />
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration.Instances" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
      </containers>
      <file name="ffbf54a6-f2f6-fc65-585f-4f4117a93dfe" />
    </api>
    <api id="Methods.T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration">
      <topicdata name="EndpointManagerConfiguration" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" />
      <apidata name="EndpointManagerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" />
      </containers>
      <file name="870d5027-3174-fc82-a4d2-db4f0cc73afa" />
    </api>
    <api id="Properties.T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration">
      <topicdata name="EndpointManagerConfiguration" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" />
      <apidata name="EndpointManagerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration.Instances" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" />
      </containers>
      <file name="dfe2ef2b-9efb-2fde-242f-287c5e054cbb" />
    </api>
    <api id="M:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" ref="true" />
      </containers>
      <file name="31155e53-f9f1-3f53-8d59-aa234952b3e7" />
    </api>
    <api id="P:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration.Instances">
      <topicdata group="api" />
      <apidata name="Instances" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Instances" />
      <setter name="set_Instances" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointInstance" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Plugin.Endpoint" />
        <type api="T:Symbiote.Core.Plugin.Endpoint.EndpointManagerConfiguration" ref="true" />
      </containers>
      <file name="815e8c5b-e374-6470-71a7-2fce5cffd40f" />
    </api>
    <api id="N:Symbiote.Core.Service">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Service" group="namespace" />
      <elements>
        <element api="T:Symbiote.Core.Service.IService" />
        <element api="T:Symbiote.Core.Service.ServiceManager" />
      </elements>
      <file name="292d8ee2-bbc9-671d-54ab-1282f8e42c00" />
    </api>
    <api id="T:Symbiote.Core.Service.IService">
      <topicdata group="api" />
      <apidata name="IService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </implementors>
      <elements>
        <element api="P:Symbiote.Core.Service.IService.IsRunning" />
        <element api="M:Symbiote.Core.Service.IService.Start" />
        <element api="M:Symbiote.Core.Service.IService.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
      </containers>
      <file name="cc84303f-4fa8-8ead-00a8-30e0af051b99" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.IService">
      <topicdata name="IService" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.IService" />
      <apidata name="IService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Service.IService.Start" />
        <element api="M:Symbiote.Core.Service.IService.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.IService" />
      </containers>
      <file name="3218ed19-3e65-6bd5-83c3-fe58a570fc3f" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.IService">
      <topicdata name="IService" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.IService" />
      <apidata name="IService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Service.IService.IsRunning" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.IService" />
      </containers>
      <file name="91f53e38-e15d-2809-f4b7-2c249224ba51" />
    </api>
    <api id="P:Symbiote.Core.Service.IService.IsRunning">
      <topicdata group="api" />
      <apidata name="IsRunning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsRunning" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.IService" ref="true" />
      </containers>
      <file name="b66cbdfa-0353-dccc-8f00-2f84d38378cf" />
    </api>
    <api id="M:Symbiote.Core.Service.IService.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.IService" ref="true" />
      </containers>
      <file name="35452c13-87ae-8360-7f4c-49aae47da617" />
    </api>
    <api id="M:Symbiote.Core.Service.IService.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.IService" ref="true" />
      </containers>
      <file name="60e52845-dba1-6f33-9b39-d0921ac175cb" />
    </api>
    <api id="T:Symbiote.Core.Service.ServiceManager">
      <topicdata group="api" />
      <apidata name="ServiceManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.IManager" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.ServiceManager.#ctor(Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Service.ServiceManager.#cctor" />
        <element api="F:Symbiote.Core.Service.ServiceManager.instance" />
        <element api="M:Symbiote.Core.Service.ServiceManager.Instance(Symbiote.Core.ProgramManager)" />
        <element api="Overload:Symbiote.Core.Service.ServiceManager.InstantiateServices">
          <element api="M:Symbiote.Core.Service.ServiceManager.InstantiateServices" />
          <element api="M:Symbiote.Core.Service.ServiceManager.InstantiateServices(System.Collections.Generic.Dictionary{System.String,System.Type})" />
        </element>
        <element api="F:Symbiote.Core.Service.ServiceManager.logger" />
        <element api="F:Symbiote.Core.Service.ServiceManager.manager" />
        <element api="Overload:Symbiote.Core.Service.ServiceManager.RegisterServices">
          <element api="M:Symbiote.Core.Service.ServiceManager.RegisterServices" />
          <element api="M:Symbiote.Core.Service.ServiceManager.RegisterServices(Symbiote.Core.Configuration.ConfigurationManager)" />
        </element>
        <element api="M:Symbiote.Core.Service.ServiceManager.Restart" />
        <element api="P:Symbiote.Core.Service.ServiceManager.Services" />
        <element api="P:Symbiote.Core.Service.ServiceManager.ServiceTypes" />
        <element api="M:Symbiote.Core.Service.ServiceManager.Start" />
        <element api="Overload:Symbiote.Core.Service.ServiceManager.StartServices">
          <element api="M:Symbiote.Core.Service.ServiceManager.StartServices" />
          <element api="M:Symbiote.Core.Service.ServiceManager.StartServices(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Service.IService})" />
        </element>
        <element api="P:Symbiote.Core.Service.ServiceManager.State" />
        <element api="M:Symbiote.Core.Service.ServiceManager.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
      </containers>
      <file name="7134eaa5-9e21-72c2-0e4b-984ed4686104" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.ServiceManager">
      <topicdata name="ServiceManager" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.ServiceManager" />
      <apidata name="ServiceManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.ServiceManager.Instance(Symbiote.Core.ProgramManager)" />
        <element api="Overload:Symbiote.Core.Service.ServiceManager.InstantiateServices">
          <element api="M:Symbiote.Core.Service.ServiceManager.InstantiateServices" />
          <element api="M:Symbiote.Core.Service.ServiceManager.InstantiateServices(System.Collections.Generic.Dictionary{System.String,System.Type})" />
        </element>
        <element api="Overload:Symbiote.Core.Service.ServiceManager.RegisterServices">
          <element api="M:Symbiote.Core.Service.ServiceManager.RegisterServices" />
          <element api="M:Symbiote.Core.Service.ServiceManager.RegisterServices(Symbiote.Core.Configuration.ConfigurationManager)" />
        </element>
        <element api="M:Symbiote.Core.Service.ServiceManager.Restart" />
        <element api="M:Symbiote.Core.Service.ServiceManager.Start" />
        <element api="Overload:Symbiote.Core.Service.ServiceManager.StartServices">
          <element api="M:Symbiote.Core.Service.ServiceManager.StartServices" />
          <element api="M:Symbiote.Core.Service.ServiceManager.StartServices(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Service.IService})" />
        </element>
        <element api="M:Symbiote.Core.Service.ServiceManager.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" />
      </containers>
      <file name="2bc2c664-7755-de6d-267d-e9a60dc702db" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.ServiceManager">
      <topicdata name="ServiceManager" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.ServiceManager" />
      <apidata name="ServiceManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Service.ServiceManager.Services" />
        <element api="P:Symbiote.Core.Service.ServiceManager.ServiceTypes" />
        <element api="P:Symbiote.Core.Service.ServiceManager.State" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" />
      </containers>
      <file name="b9c98d8d-c004-a253-8f63-0a1559c81e62" />
    </api>
    <api id="Fields.T:Symbiote.Core.Service.ServiceManager">
      <topicdata name="ServiceManager" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Service.ServiceManager" />
      <apidata name="ServiceManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Service.ServiceManager.instance" />
        <element api="F:Symbiote.Core.Service.ServiceManager.logger" />
        <element api="F:Symbiote.Core.Service.ServiceManager.manager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" />
      </containers>
      <file name="e5acd6c6-592b-ee84-0e2f-0c8e2387ea09" />
    </api>
    <api id="Overload:Symbiote.Core.Service.ServiceManager.InstantiateServices">
      <topicdata name="InstantiateServices" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="InstantiateServices" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Service.ServiceManager.InstantiateServices" />
        <element api="M:Symbiote.Core.Service.ServiceManager.InstantiateServices(System.Collections.Generic.Dictionary{System.String,System.Type})" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="0be38033-c046-8038-10fc-7899da360c2c" />
    </api>
    <api id="Overload:Symbiote.Core.Service.ServiceManager.RegisterServices">
      <topicdata name="RegisterServices" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RegisterServices" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Service.ServiceManager.RegisterServices" />
        <element api="M:Symbiote.Core.Service.ServiceManager.RegisterServices(Symbiote.Core.Configuration.ConfigurationManager)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="c5a29f7f-8d8b-041e-ef16-ef41d704e741" />
    </api>
    <api id="Overload:Symbiote.Core.Service.ServiceManager.StartServices">
      <topicdata name="StartServices" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="StartServices" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Service.ServiceManager.StartServices" />
        <element api="M:Symbiote.Core.Service.ServiceManager.StartServices(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Service.IService})" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="33623154-1752-98aa-466a-dfc406c52547" />
    </api>
    <api id="M:Symbiote.Core.Service.ServiceManager.#ctor(Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" special="true" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="7ff181e6-b43a-6b79-cc53-d003807fb21e" />
    </api>
    <api id="M:Symbiote.Core.Service.ServiceManager.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="15eafb69-4f4b-b2ec-7bea-c430bdf419bd" />
    </api>
    <api id="F:Symbiote.Core.Service.ServiceManager.instance">
      <topicdata group="api" />
      <apidata name="instance" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="2540b6dc-742b-90aa-a062-4b5e9c42bf5a" />
    </api>
    <api id="M:Symbiote.Core.Service.ServiceManager.Instance(Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="b9adb6ba-3282-0227-c431-bdf87c5de8fb" />
    </api>
    <api id="M:Symbiote.Core.Service.ServiceManager.InstantiateServices">
      <topicdata group="api" />
      <apidata name="InstantiateServices" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Service.ServiceManager.InstantiateServices" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:Symbiote.Core.Service.IService" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="e3587539-ce8a-1b50-8bca-90c63d6fe6f1" />
    </api>
    <api id="M:Symbiote.Core.Service.ServiceManager.InstantiateServices(System.Collections.Generic.Dictionary{System.String,System.Type})">
      <topicdata group="api" />
      <apidata name="InstantiateServices" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Service.ServiceManager.InstantiateServices" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceTypes">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:Symbiote.Core.Service.IService" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="b2d7a3ea-fb5c-1ae7-2b1a-5fd2329ad56e" />
    </api>
    <api id="F:Symbiote.Core.Service.ServiceManager.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="5a82bcee-7388-8544-b129-30c5e808eca0" />
    </api>
    <api id="F:Symbiote.Core.Service.ServiceManager.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="f6a89b5b-0eec-b414-4cfd-7183106f4b58" />
    </api>
    <api id="M:Symbiote.Core.Service.ServiceManager.RegisterServices">
      <topicdata group="api" />
      <apidata name="RegisterServices" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Service.ServiceManager.RegisterServices" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="3729c981-6cf7-35a6-d71f-b82aa30d101d" />
    </api>
    <api id="M:Symbiote.Core.Service.ServiceManager.RegisterServices(Symbiote.Core.Configuration.ConfigurationManager)">
      <topicdata group="api" />
      <apidata name="RegisterServices" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Service.ServiceManager.RegisterServices" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="configurationManager">
          <type api="T:Symbiote.Core.Configuration.ConfigurationManager" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="b3de6cfc-f03b-d5d0-94c3-c78468ee326e" />
    </api>
    <api id="M:Symbiote.Core.Service.ServiceManager.Restart">
      <topicdata group="api" />
      <apidata name="Restart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Restart">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="eff21097-d9dc-659d-801c-52d3817ca962" />
    </api>
    <api id="P:Symbiote.Core.Service.ServiceManager.Services">
      <topicdata group="api" />
      <apidata name="Services" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Services" />
      <setter name="set_Services" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Symbiote.Core.Service.IService" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="cb8d708a-a520-aa77-fc99-847a6103318a" />
    </api>
    <api id="P:Symbiote.Core.Service.ServiceManager.ServiceTypes">
      <topicdata group="api" />
      <apidata name="ServiceTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ServiceTypes" />
      <setter name="set_ServiceTypes" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="f0eee04e-a59a-1080-e09c-bab29b40ec40" />
    </api>
    <api id="M:Symbiote.Core.Service.ServiceManager.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Start">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="fb060cf5-697d-943d-2864-72f1b766e49d" />
    </api>
    <api id="M:Symbiote.Core.Service.ServiceManager.StartServices">
      <topicdata group="api" />
      <apidata name="StartServices" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Service.ServiceManager.StartServices" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="78a8d567-4ff3-6d24-8c07-05b4633eeab0" />
    </api>
    <api id="M:Symbiote.Core.Service.ServiceManager.StartServices(System.Collections.Generic.Dictionary{System.String,Symbiote.Core.Service.IService})">
      <topicdata group="api" />
      <apidata name="StartServices" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:Symbiote.Core.Service.ServiceManager.StartServices" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceInstances">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:Symbiote.Core.Service.IService" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="15078741-f25b-ceba-f76e-8c8c50db4066" />
    </api>
    <api id="P:Symbiote.Core.Service.ServiceManager.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_State" />
      <setter name="set_State" />
      <returns>
        <type api="T:Symbiote.Core.ManagerState" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.IManager.State">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="55da751a-ccfe-c0da-45c9-67e762e289fc" />
    </api>
    <api id="M:Symbiote.Core.Service.ServiceManager.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.IManager.Stop">
          <type api="T:Symbiote.Core.IManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service" />
        <type api="T:Symbiote.Core.Service.ServiceManager" ref="true" />
      </containers>
      <file name="22e2badd-0257-9862-708f-855072ab2699" />
    </api>
    <api id="N:Symbiote.Core.Service.IoT.MQTT">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Service.IoT.MQTT" group="namespace" />
      <elements>
        <element api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" />
        <element api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" />
      </elements>
      <file name="1c20b7c0-054c-9fb3-d504-05e2e7a40d45" />
    </api>
    <api id="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker">
      <topicdata group="api" />
      <apidata name="MQTTBroker" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.Service.IService" ref="true" />
        <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.#ctor(Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.#cctor" />
        <element api="P:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configuration" />
        <element api="P:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.ConfigurationDefinition" />
        <element api="Overload:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configure">
          <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configure" />
          <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configure(Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration)" />
        </element>
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.GetConfigurationDefinition" />
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.GetDefaultConfiguration" />
        <element api="F:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.instance" />
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Instance(Symbiote.Core.ProgramManager)" />
        <element api="P:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.IsRunning" />
        <element api="F:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.logger" />
        <element api="F:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.manager" />
        <element api="F:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.running" />
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.SaveConfiguration" />
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Start" />
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
      </containers>
      <file name="627e58d2-6457-204c-eda7-84f1f5ae85b6" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker">
      <topicdata name="MQTTBroker" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" />
      <apidata name="MQTTBroker" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configure">
          <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configure" />
          <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configure(Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration)" />
        </element>
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.GetConfigurationDefinition" />
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.GetDefaultConfiguration" />
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Instance(Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.SaveConfiguration" />
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Start" />
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" />
      </containers>
      <file name="a837f73c-0780-774e-ca5d-6cc986eb0c13" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker">
      <topicdata name="MQTTBroker" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" />
      <apidata name="MQTTBroker" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configuration" />
        <element api="P:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.ConfigurationDefinition" />
        <element api="P:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.IsRunning" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" />
      </containers>
      <file name="ca6f99e6-a24d-dc12-fa0d-031e1bab0728" />
    </api>
    <api id="Fields.T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker">
      <topicdata name="MQTTBroker" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" />
      <apidata name="MQTTBroker" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.instance" />
        <element api="F:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.logger" />
        <element api="F:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.manager" />
        <element api="F:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.running" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" />
      </containers>
      <file name="81ea87b8-8eb4-1490-6c0d-6aeffe03a7c9" />
    </api>
    <api id="Overload:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configure">
      <topicdata name="Configure" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Configure" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configure" />
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configure(Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="1c36a9fd-3442-f573-fbde-1f547f8a8bed" />
    </api>
    <api id="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.#ctor(Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" special="true" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="34766331-1025-5f55-6fec-1eeb4d27fdfc" />
    </api>
    <api id="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="580f3ea9-3796-d541-dd5a-d6a70cf6819f" />
    </api>
    <api id="P:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Configuration" />
      <setter name="set_Configuration" />
      <returns>
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Configuration.IConfigurable`1.Configuration">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="18ca57f9-a3cc-460d-4580-6aaa3f7064e9" />
    </api>
    <api id="P:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.ConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="ConfigurationDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ConfigurationDefinition" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Configuration.IConfigurable`1.ConfigurationDefinition">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="b2f2958e-35ef-3e58-867e-1abb1a7c409b" />
    </api>
    <api id="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configure">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configure" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="61f7aa03-62a0-caae-68cb-9f93dcb566df" />
    </api>
    <api id="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configure(Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration)">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Configure" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="configuration">
          <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure(`0)">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="d4be1db4-ad21-fbe8-a6d9-38b38ab412ed" />
    </api>
    <api id="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.GetConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="GetConfigurationDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="30d51b84-521b-3113-ba48-dca0126499f7" />
    </api>
    <api id="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.GetDefaultConfiguration">
      <topicdata group="api" />
      <apidata name="GetDefaultConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="9486986d-0f73-1fff-ccc5-60a6e91aaf33" />
    </api>
    <api id="F:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.instance">
      <topicdata group="api" />
      <apidata name="instance" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="2ba1c94b-9650-2f39-32ad-7f73b084c549" />
    </api>
    <api id="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Instance(Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="ac19b535-d247-2f96-e045-ea11eaa38ab9" />
    </api>
    <api id="P:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.IsRunning">
      <topicdata group="api" />
      <apidata name="IsRunning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsRunning" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Service.IService.IsRunning">
          <type api="T:Symbiote.Core.Service.IService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="60753873-a342-54b9-04e3-b8da464f0fa3" />
    </api>
    <api id="F:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="7a774b84-229b-faa8-19fd-28e345e83a5c" />
    </api>
    <api id="F:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="bd686bce-77b8-09e1-a702-2ca63f5b64f1" />
    </api>
    <api id="F:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.running">
      <topicdata group="api" />
      <apidata name="running" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="1ab042f4-771a-e73a-e10d-a29428b70c21" />
    </api>
    <api id="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.SaveConfiguration">
      <topicdata group="api" />
      <apidata name="SaveConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.SaveConfiguration">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="ec2794fc-7a29-636f-830b-caee733aa855" />
    </api>
    <api id="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Service.IService.Start">
          <type api="T:Symbiote.Core.Service.IService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="09b774af-5821-1233-90a8-266d011d882c" />
    </api>
    <api id="M:Symbiote.Core.Service.IoT.MQTT.MQTTBroker.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Service.IService.Stop">
          <type api="T:Symbiote.Core.Service.IService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBroker" ref="true" />
      </containers>
      <file name="c3779a8f-2463-7982-d2a3-b0eaa29824ce" />
    </api>
    <api id="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration">
      <topicdata group="api" />
      <apidata name="MQTTBrokerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration.#ctor" />
        <element api="P:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration.Name" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
      </containers>
      <file name="2e20dcb8-1c48-a185-026c-b07bc90e1383" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration">
      <topicdata name="MQTTBrokerConfiguration" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" />
      <apidata name="MQTTBrokerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" />
      </containers>
      <file name="d76addec-bb39-2166-bb0d-a9ff4fd7ede4" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration">
      <topicdata name="MQTTBrokerConfiguration" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" />
      <apidata name="MQTTBrokerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration.Name" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" />
      </containers>
      <file name="999546be-7418-e245-8047-677c031f2f5f" />
    </api>
    <api id="M:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" ref="true" />
      </containers>
      <file name="246a03e0-62fc-ec77-38a9-7f642fa383ee" />
    </api>
    <api id="P:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.IoT.MQTT" />
        <type api="T:Symbiote.Core.Service.IoT.MQTT.MQTTBrokerConfiguration" ref="true" />
      </containers>
      <file name="b2f2f4c1-4044-83ee-c5b0-8cae09ab41a7" />
    </api>
    <api id="N:Symbiote.Core.Service.Web">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Service.Web" group="namespace" />
      <elements>
        <element api="T:Symbiote.Core.Service.Web.ApiResult`1" />
        <element api="T:Symbiote.Core.Service.Web.OwinStartup" />
        <element api="T:Symbiote.Core.Service.Web.WebService" />
        <element api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" />
      </elements>
      <file name="39908d00-f300-04ae-8d74-f3171c11d7bd" />
    </api>
    <api id="T:Symbiote.Core.Service.Web.ApiResult`1">
      <topicdata group="api" />
      <apidata name="ApiResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Symbiote.Core.Result`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Symbiote.Core.Service.Web.ApiResult`1" />
            </specialization>
          </type>
          <type api="T:Symbiote.Core.Result" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Symbiote.Core.Result.LastErrorMessage" />
        <element api="M:Symbiote.Core.Result.LastInfoMessage" />
        <element api="M:Symbiote.Core.Result.LastWarningMessage" />
        <element api="M:Symbiote.Core.Result.Log(System.Action{System.String},System.String)" />
        <element api="Overload:Symbiote.Core.Service.Web.ApiResult`1.LogAllMessages">
          <element api="M:Symbiote.Core.Result`1.LogAllMessages(System.Action{System.String},System.String,System.String)" />
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},Symbiote.Core.MessageType,System.String,System.String)" />
        </element>
        <element api="P:Symbiote.Core.Result.Messages" />
        <element api="P:Symbiote.Core.Result.ResultCode" />
        <element api="M:Symbiote.Core.Result`1.AddError(System.String)" />
        <element api="M:Symbiote.Core.Result`1.AddInfo(System.String)" />
        <element api="M:Symbiote.Core.Result`1.AddWarning(System.String)" />
        <element api="M:Symbiote.Core.Result`1.Incorporate(Symbiote.Core.Result)" />
        <element api="Overload:Symbiote.Core.Service.Web.ApiResult`1.LogResult">
          <element api="M:Symbiote.Core.Result`1.LogResult(NLog.Logger,System.String)" />
          <element api="M:Symbiote.Core.Result`1.LogResult(System.Action{System.String},System.String)" />
          <element api="M:Symbiote.Core.Service.Web.ApiResult`1.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)" />
        </element>
        <element api="P:Symbiote.Core.Result`1.ReturnValue" />
        <element api="M:Symbiote.Core.Result`1.SetReturnValue(`0)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.ApiResult`1.#ctor(System.Net.Http.HttpRequestMessage)" />
        <element api="M:Symbiote.Core.Service.Web.ApiResult`1.CreateResponse(System.Net.Http.Formatting.JsonMediaTypeFormatter)" />
        <element api="M:Symbiote.Core.Service.Web.ApiResult`1.LogRequest(System.Action{System.String})" />
        <element api="P:Symbiote.Core.Service.Web.ApiResult`1.RemoteIP" />
        <element api="P:Symbiote.Core.Service.Web.ApiResult`1.Request" />
        <element api="P:Symbiote.Core.Service.Web.ApiResult`1.Response" />
        <element api="P:Symbiote.Core.Service.Web.ApiResult`1.Route" />
        <element api="P:Symbiote.Core.Service.Web.ApiResult`1.ShortGuid" />
        <element api="P:Symbiote.Core.Service.Web.ApiResult`1.StatusCode" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
      </containers>
      <file name="3ad21d90-0b20-5a9e-4b55-71d6a9b5ef87" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.Web.ApiResult`1">
      <topicdata name="ApiResult" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.Web.ApiResult`1" />
      <apidata name="ApiResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Symbiote.Core.Result.LastErrorMessage" />
        <element api="M:Symbiote.Core.Result.LastInfoMessage" />
        <element api="M:Symbiote.Core.Result.LastWarningMessage" />
        <element api="M:Symbiote.Core.Result.Log(System.Action{System.String},System.String)" />
        <element api="Overload:Symbiote.Core.Service.Web.ApiResult`1.LogAllMessages">
          <element api="M:Symbiote.Core.Result`1.LogAllMessages(System.Action{System.String},System.String,System.String)" />
          <element api="M:Symbiote.Core.Result.LogAllMessages(System.Action{System.String},Symbiote.Core.MessageType,System.String,System.String)" />
        </element>
        <element api="M:Symbiote.Core.Result`1.AddError(System.String)" />
        <element api="M:Symbiote.Core.Result`1.AddInfo(System.String)" />
        <element api="M:Symbiote.Core.Result`1.AddWarning(System.String)" />
        <element api="M:Symbiote.Core.Result`1.Incorporate(Symbiote.Core.Result)" />
        <element api="Overload:Symbiote.Core.Service.Web.ApiResult`1.LogResult">
          <element api="M:Symbiote.Core.Result`1.LogResult(NLog.Logger,System.String)" />
          <element api="M:Symbiote.Core.Result`1.LogResult(System.Action{System.String},System.String)" />
          <element api="M:Symbiote.Core.Service.Web.ApiResult`1.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)" />
        </element>
        <element api="M:Symbiote.Core.Result`1.SetReturnValue(`0)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.ApiResult`1.CreateResponse(System.Net.Http.Formatting.JsonMediaTypeFormatter)" />
        <element api="M:Symbiote.Core.Service.Web.ApiResult`1.LogRequest(System.Action{System.String})" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.ApiResult`1" />
      </containers>
      <file name="baade0d6-60f4-8c1d-55a4-5d8c3ce42c0a" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.Web.ApiResult`1">
      <topicdata name="ApiResult" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.Web.ApiResult`1" />
      <apidata name="ApiResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Symbiote.Core.Result.Messages" />
        <element api="P:Symbiote.Core.Result.ResultCode" />
        <element api="P:Symbiote.Core.Result`1.ReturnValue" />
        <element api="P:Symbiote.Core.Service.Web.ApiResult`1.RemoteIP" />
        <element api="P:Symbiote.Core.Service.Web.ApiResult`1.Request" />
        <element api="P:Symbiote.Core.Service.Web.ApiResult`1.Response" />
        <element api="P:Symbiote.Core.Service.Web.ApiResult`1.Route" />
        <element api="P:Symbiote.Core.Service.Web.ApiResult`1.ShortGuid" />
        <element api="P:Symbiote.Core.Service.Web.ApiResult`1.StatusCode" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.ApiResult`1" />
      </containers>
      <file name="aa4c0d98-6777-fe71-9804-e056b7775411" />
    </api>
    <api id="Overload:Symbiote.Core.Service.Web.ApiResult`1.LogResult">
      <topicdata name="LogResult" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="LogResult" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Result`1.LogResult(NLog.Logger,System.String)" />
        <element api="M:Symbiote.Core.Result`1.LogResult(System.Action{System.String},System.String)" />
        <element api="M:Symbiote.Core.Service.Web.ApiResult`1.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.ApiResult`1" ref="true" />
      </containers>
      <file name="e62b9045-f57b-a452-8be2-5a0a1f7c49cd" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.ApiResult`1.#ctor(System.Net.Http.HttpRequestMessage)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.ApiResult`1" ref="true" />
      </containers>
      <file name="f1169ffc-640e-2931-9ed4-1315b1644a56" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.ApiResult`1.CreateResponse(System.Net.Http.Formatting.JsonMediaTypeFormatter)">
      <topicdata group="api" />
      <apidata name="CreateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="jsonFormatter">
          <type api="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.ApiResult`1" ref="true" />
      </containers>
      <file name="8897e33c-08e8-11d3-47d4-210c4622d32c" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.ApiResult`1.LogRequest(System.Action{System.String})">
      <topicdata group="api" />
      <apidata name="LogRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logLevel">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.ApiResult`1" ref="true" />
      </containers>
      <file name="44b9b34e-6332-c99a-2f8a-c1fd18a73b12" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.ApiResult`1.LogResult(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.String)">
      <topicdata group="api" />
      <apidata name="LogResult" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.ApiResult`1.LogResult" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="successLogLevel">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="warningLogLevel">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="failureLogLevel">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Service.Web.ApiResult`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Symbiote.Core.Service.Web.ApiResult`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.ApiResult`1" ref="true" />
      </containers>
      <file name="68eb4fdd-6b5f-c798-2858-6a5852c9cf96" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.ApiResult`1.RemoteIP">
      <topicdata group="api" />
      <apidata name="RemoteIP" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RemoteIP" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.ApiResult`1" ref="true" />
      </containers>
      <file name="dda139c6-5bf8-bf2a-917d-2a4948c90149" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.ApiResult`1.Request">
      <topicdata group="api" />
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Request" />
      <setter name="set_Request" />
      <returns>
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.ApiResult`1" ref="true" />
      </containers>
      <file name="ab5eb044-7b78-df42-c8fe-06d03457d859" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.ApiResult`1.Response">
      <topicdata group="api" />
      <apidata name="Response" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Response" />
      <setter name="set_Response" />
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.ApiResult`1" ref="true" />
      </containers>
      <file name="f20ad1e8-1612-253f-e341-81750668fdc5" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.ApiResult`1.Route">
      <topicdata group="api" />
      <apidata name="Route" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Route" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.ApiResult`1" ref="true" />
      </containers>
      <file name="7cb959b9-284f-283f-7b4e-9c2ecd4fc7e4" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.ApiResult`1.ShortGuid">
      <topicdata group="api" />
      <apidata name="ShortGuid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ShortGuid" />
      <setter name="set_ShortGuid" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.ApiResult`1" ref="true" />
      </containers>
      <file name="8be895bf-1362-3d34-7676-efc94e5d792c" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.ApiResult`1.StatusCode">
      <topicdata group="api" />
      <apidata name="StatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StatusCode" />
      <setter name="set_StatusCode" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.ApiResult`1" ref="true" />
      </containers>
      <file name="3cb670e1-6e0a-4080-e3db-75215a2bf85e" />
    </api>
    <api id="T:Symbiote.Core.Service.Web.OwinStartup">
      <topicdata group="api" />
      <apidata name="OwinStartup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.OwinStartup.#ctor" />
        <element api="M:Symbiote.Core.Service.Web.OwinStartup.Configuration(Owin.IAppBuilder)" />
        <element api="F:Symbiote.Core.Service.Web.OwinStartup.manager" />
        <element api="P:Symbiote.Core.Service.Web.OwinStartup.WebServiceConfiguration" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
      </containers>
      <file name="6d38ba39-597d-9d7e-7265-2de787bd9248" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.Web.OwinStartup">
      <topicdata name="OwinStartup" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.Web.OwinStartup" />
      <apidata name="OwinStartup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.OwinStartup.Configuration(Owin.IAppBuilder)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.OwinStartup" />
      </containers>
      <file name="4fd9d426-7436-8581-92ab-5d5314121fed" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.Web.OwinStartup">
      <topicdata name="OwinStartup" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.Web.OwinStartup" />
      <apidata name="OwinStartup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Service.Web.OwinStartup.WebServiceConfiguration" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.OwinStartup" />
      </containers>
      <file name="01db505a-ffaf-aa15-6513-3ddd9753a3ef" />
    </api>
    <api id="Fields.T:Symbiote.Core.Service.Web.OwinStartup">
      <topicdata name="OwinStartup" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Service.Web.OwinStartup" />
      <apidata name="OwinStartup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Service.Web.OwinStartup.manager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.OwinStartup" />
      </containers>
      <file name="7a9f7d74-f30c-2f58-28ca-c55c8f186ec1" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.OwinStartup.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.OwinStartup" ref="true" />
      </containers>
      <file name="e0df7a32-9f74-ba35-61ac-86ea53191ef4" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.OwinStartup.Configuration(Owin.IAppBuilder)">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="app">
          <type api="T:Owin.IAppBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.OwinStartup" ref="true" />
      </containers>
      <file name="e0eb4bce-3008-c17c-89a3-67733181f2ea" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.OwinStartup.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.OwinStartup" ref="true" />
      </containers>
      <file name="43fce1cc-de8b-dfa9-e92a-7f835463d420" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.OwinStartup.WebServiceConfiguration">
      <topicdata group="api" />
      <apidata name="WebServiceConfiguration" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WebServiceConfiguration" />
      <setter name="set_WebServiceConfiguration" />
      <returns>
        <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.OwinStartup" ref="true" />
      </containers>
      <file name="cade2701-66cc-19d6-f2a2-f2ec98d86be6" />
    </api>
    <api id="T:Symbiote.Core.Service.Web.WebService">
      <topicdata group="api" />
      <apidata name="WebService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.Service.IService" ref="true" />
        <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
          <specialization>
            <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.WebService.#ctor(Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Service.Web.WebService.#cctor" />
        <element api="P:Symbiote.Core.Service.Web.WebService.ApiControllers" />
        <element api="F:Symbiote.Core.Service.Web.WebService.configuration" />
        <element api="P:Symbiote.Core.Service.Web.WebService.Configuration" />
        <element api="P:Symbiote.Core.Service.Web.WebService.ConfigurationDefinition" />
        <element api="Overload:Symbiote.Core.Service.Web.WebService.Configure">
          <element api="M:Symbiote.Core.Service.Web.WebService.Configure" />
          <element api="M:Symbiote.Core.Service.Web.WebService.Configure(Symbiote.Core.Service.Web.WebServiceConfiguration)" />
        </element>
        <element api="P:Symbiote.Core.Service.Web.WebService.GetConfiguration" />
        <element api="M:Symbiote.Core.Service.Web.WebService.GetConfigurationDefinition" />
        <element api="M:Symbiote.Core.Service.Web.WebService.GetDefaultConfiguration" />
        <element api="P:Symbiote.Core.Service.Web.WebService.Hubs" />
        <element api="F:Symbiote.Core.Service.Web.WebService.instance" />
        <element api="M:Symbiote.Core.Service.Web.WebService.Instance(Symbiote.Core.ProgramManager)" />
        <element api="P:Symbiote.Core.Service.Web.WebService.IsRunning" />
        <element api="F:Symbiote.Core.Service.Web.WebService.logger" />
        <element api="F:Symbiote.Core.Service.Web.WebService.manager" />
        <element api="M:Symbiote.Core.Service.Web.WebService.SaveConfiguration" />
        <element api="F:Symbiote.Core.Service.Web.WebService.server" />
        <element api="M:Symbiote.Core.Service.Web.WebService.Start" />
        <element api="M:Symbiote.Core.Service.Web.WebService.Stop" />
        <element api="P:Symbiote.Core.Service.Web.WebService.URL" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
      </containers>
      <file name="a76d55e8-4e23-d001-505a-c07276dfd54b" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.Web.WebService">
      <topicdata name="WebService" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.Web.WebService" />
      <apidata name="WebService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.WebService.Configure">
          <element api="M:Symbiote.Core.Service.Web.WebService.Configure" />
          <element api="M:Symbiote.Core.Service.Web.WebService.Configure(Symbiote.Core.Service.Web.WebServiceConfiguration)" />
        </element>
        <element api="M:Symbiote.Core.Service.Web.WebService.GetConfigurationDefinition" />
        <element api="M:Symbiote.Core.Service.Web.WebService.GetDefaultConfiguration" />
        <element api="M:Symbiote.Core.Service.Web.WebService.Instance(Symbiote.Core.ProgramManager)" />
        <element api="M:Symbiote.Core.Service.Web.WebService.SaveConfiguration" />
        <element api="M:Symbiote.Core.Service.Web.WebService.Start" />
        <element api="M:Symbiote.Core.Service.Web.WebService.Stop" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" />
      </containers>
      <file name="e999c436-671b-82b3-ff04-b40acf77dfc8" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.Web.WebService">
      <topicdata name="WebService" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.Web.WebService" />
      <apidata name="WebService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Service.Web.WebService.ApiControllers" />
        <element api="P:Symbiote.Core.Service.Web.WebService.Configuration" />
        <element api="P:Symbiote.Core.Service.Web.WebService.ConfigurationDefinition" />
        <element api="P:Symbiote.Core.Service.Web.WebService.GetConfiguration" />
        <element api="P:Symbiote.Core.Service.Web.WebService.Hubs" />
        <element api="P:Symbiote.Core.Service.Web.WebService.IsRunning" />
        <element api="P:Symbiote.Core.Service.Web.WebService.URL" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" />
      </containers>
      <file name="380ea753-235b-3554-fd7a-0ba3e5b2716a" />
    </api>
    <api id="Fields.T:Symbiote.Core.Service.Web.WebService">
      <topicdata name="WebService" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Service.Web.WebService" />
      <apidata name="WebService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Service.Web.WebService.configuration" />
        <element api="F:Symbiote.Core.Service.Web.WebService.instance" />
        <element api="F:Symbiote.Core.Service.Web.WebService.logger" />
        <element api="F:Symbiote.Core.Service.Web.WebService.manager" />
        <element api="F:Symbiote.Core.Service.Web.WebService.server" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" />
      </containers>
      <file name="66323058-f827-924f-a609-b52a5382c215" />
    </api>
    <api id="Overload:Symbiote.Core.Service.Web.WebService.Configure">
      <topicdata name="Configure" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Configure" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Service.Web.WebService.Configure" />
        <element api="M:Symbiote.Core.Service.Web.WebService.Configure(Symbiote.Core.Service.Web.WebServiceConfiguration)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="d288db62-0673-b94f-1b0e-0aa6a9de0a7b" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.WebService.#ctor(Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" special="true" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="5a974bb8-2a5d-2756-bd17-ea9596c2be3e" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.WebService.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="929da5c6-7936-5867-c007-2ad599fddfad" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.WebService.ApiControllers">
      <topicdata group="api" />
      <apidata name="ApiControllers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ApiControllers" />
      <setter name="set_ApiControllers" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="d7f95eb7-356f-dcac-debc-1fc69fd93eda" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.WebService.configuration">
      <topicdata group="api" />
      <apidata name="configuration" group="member" subgroup="field" />
      <memberdata visibility="assembly" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ThreadStaticAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="219c4d53-2952-17b9-0f6e-d972c7dde9d4" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.WebService.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Configuration" />
      <setter name="set_Configuration" />
      <returns>
        <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Configuration.IConfigurable`1.Configuration">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="6055055d-66ec-38c7-4b9d-291501eecf71" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.WebService.ConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="ConfigurationDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ConfigurationDefinition" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Configuration.IConfigurable`1.ConfigurationDefinition">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="42fddbf1-5109-1153-a1e2-b466642185d2" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.WebService.Configure">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.WebService.Configure" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="837ed87c-49a3-ae9e-f9a4-67e6bf75f46c" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.WebService.Configure(Symbiote.Core.Service.Web.WebServiceConfiguration)">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.WebService.Configure" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="configuration">
          <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.Configure(`0)">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="4210ead8-e382-6297-fadd-fa69d9234dab" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.WebService.GetConfiguration">
      <topicdata group="api" />
      <apidata name="GetConfiguration" group="member" subgroup="property" />
      <memberdata visibility="assembly" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GetConfiguration" />
      <setter name="set_GetConfiguration" />
      <returns>
        <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="07cc149a-a620-493c-109d-a2dcc92627b3" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.WebService.GetConfigurationDefinition">
      <topicdata group="api" />
      <apidata name="GetConfigurationDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Configuration.ConfigurationDefinition" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="be44e4f5-e584-a3d5-8a08-72a8f34cc4e9" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.WebService.GetDefaultConfiguration">
      <topicdata group="api" />
      <apidata name="GetDefaultConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="593beb20-1a46-10b9-e2d8-48fa811ac26d" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.WebService.Hubs">
      <topicdata group="api" />
      <apidata name="Hubs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Hubs" />
      <setter name="set_Hubs" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="98684f7f-95ac-1121-105f-e3b700eec29e" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.WebService.instance">
      <topicdata group="api" />
      <apidata name="instance" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="fd3d350b-df24-d262-08fd-93b55c90c39a" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.WebService.Instance(Symbiote.Core.ProgramManager)">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="6437814b-f706-c2ce-0b1c-51c9081b522d" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.WebService.IsRunning">
      <topicdata group="api" />
      <apidata name="IsRunning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsRunning" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Symbiote.Core.Service.IService.IsRunning">
          <type api="T:Symbiote.Core.Service.IService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="444920e1-ff1c-3a40-cbd6-33fbc1b7a545" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.WebService.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="34412f1f-e4fa-69d8-d45f-d1962c64e554" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.WebService.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="6fa7212e-946f-5917-da6d-2377ee7daf51" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.WebService.SaveConfiguration">
      <topicdata group="api" />
      <apidata name="SaveConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Configuration.IConfigurable`1.SaveConfiguration">
          <type api="T:Symbiote.Core.Configuration.IConfigurable`1" ref="true">
            <specialization>
              <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="4b1b2e9f-57ac-0838-8271-63cd4eb31f86" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.WebService.server">
      <topicdata group="api" />
      <apidata name="server" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="744a5232-0d13-b408-f185-91e2b73b47f4" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.WebService.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Service.IService.Start">
          <type api="T:Symbiote.Core.Service.IService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="38fafa0c-ce3f-bef0-8170-d05dbfdb0ad8" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.WebService.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Service.IService.Stop">
          <type api="T:Symbiote.Core.Service.IService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="a4845aa3-2e55-6983-2b97-0fb9403bd566" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.WebService.URL">
      <topicdata group="api" />
      <apidata name="URL" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_URL" />
      <setter name="set_URL" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebService" ref="true" />
      </containers>
      <file name="a7ce8d5f-0eb4-f57d-ef93-5c17106096bd" />
    </api>
    <api id="T:Symbiote.Core.Service.Web.WebServiceConfiguration">
      <topicdata group="api" />
      <apidata name="WebServiceConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.WebServiceConfiguration.#ctor" />
        <element api="P:Symbiote.Core.Service.Web.WebServiceConfiguration.Port" />
        <element api="P:Symbiote.Core.Service.Web.WebServiceConfiguration.Root" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
      </containers>
      <file name="0d94de3d-b799-55db-5239-74c63fe463bc" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.Web.WebServiceConfiguration">
      <topicdata name="WebServiceConfiguration" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.Web.WebServiceConfiguration" />
      <apidata name="WebServiceConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" />
      </containers>
      <file name="9e6b7d6f-2cb7-85c4-029d-298fb8acf6ff" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.Web.WebServiceConfiguration">
      <topicdata name="WebServiceConfiguration" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.Web.WebServiceConfiguration" />
      <apidata name="WebServiceConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Service.Web.WebServiceConfiguration.Port" />
        <element api="P:Symbiote.Core.Service.Web.WebServiceConfiguration.Root" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" />
      </containers>
      <file name="0f0bf3f5-cb4b-4778-747f-d34cd49152b2" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.WebServiceConfiguration.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" ref="true" />
      </containers>
      <file name="dbea9d7c-e0f8-cc6b-cb30-75be1149d51b" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.WebServiceConfiguration.Port">
      <topicdata group="api" />
      <apidata name="Port" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Port" />
      <setter name="set_Port" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" ref="true" />
      </containers>
      <file name="43ca61ec-43ed-7a6e-df7a-c3208a34fc97" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.WebServiceConfiguration.Root">
      <topicdata group="api" />
      <apidata name="Root" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Root" />
      <setter name="set_Root" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web" />
        <type api="T:Symbiote.Core.Service.Web.WebServiceConfiguration" ref="true" />
      </containers>
      <file name="34461887-b532-1ed2-7867-191a9bc44ea2" />
    </api>
    <api id="N:Symbiote.Core.Service.Web.API">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Service.Web.API" group="namespace" />
      <elements>
        <element api="T:Symbiote.Core.Service.Web.API.PluginController" />
        <element api="T:Symbiote.Core.Service.Web.API.BrowseController" />
        <element api="T:Symbiote.Core.Service.Web.API.ConfigurationController" />
        <element api="T:Symbiote.Core.Service.Web.API.LogController" />
        <element api="T:Symbiote.Core.Service.Web.API.ReadController" />
        <element api="T:Symbiote.Core.Service.Web.API.ValuesController" />
        <element api="T:Symbiote.Core.Service.Web.API.IApiController" />
      </elements>
      <file name="c0722ccc-cba1-46a2-9eab-6637ab71a5c0" />
    </api>
    <api id="T:Symbiote.Core.Service.Web.API.BrowseController">
      <topicdata group="api" />
      <apidata name="BrowseController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Http.ApiController" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.API.BrowseController.#ctor" />
        <element api="M:Symbiote.Core.Service.Web.API.BrowseController.#cctor" />
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Browse">
          <element api="M:Symbiote.Core.Service.Web.API.BrowseController.Browse" />
          <element api="M:Symbiote.Core.Service.Web.API.BrowseController.Browse(System.String)" />
          <element api="M:Symbiote.Core.Service.Web.API.BrowseController.Browse(System.String,System.String)" />
        </element>
        <element api="F:Symbiote.Core.Service.Web.API.BrowseController.conciseSerializationProperties" />
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.JsonFormatter">
          <element api="M:Symbiote.Core.Service.Web.API.BrowseController.JsonFormatter" />
          <element api="M:Symbiote.Core.Service.Web.API.BrowseController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)" />
        </element>
        <element api="F:Symbiote.Core.Service.Web.API.BrowseController.logger" />
        <element api="F:Symbiote.Core.Service.Web.API.BrowseController.manager" />
        <element api="F:Symbiote.Core.Service.Web.API.BrowseController.model" />
        <element api="F:Symbiote.Core.Service.Web.API.BrowseController.verboseSerializationProperties" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
      </containers>
      <file name="27d316f5-3ad0-db06-fe2f-bebcaa5cfc35" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.Web.API.BrowseController">
      <topicdata name="BrowseController" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.Web.API.BrowseController" />
      <apidata name="BrowseController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.Browse">
          <element api="M:Symbiote.Core.Service.Web.API.BrowseController.Browse" />
          <element api="M:Symbiote.Core.Service.Web.API.BrowseController.Browse(System.String)" />
          <element api="M:Symbiote.Core.Service.Web.API.BrowseController.Browse(System.String,System.String)" />
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.BrowseController.JsonFormatter">
          <element api="M:Symbiote.Core.Service.Web.API.BrowseController.JsonFormatter" />
          <element api="M:Symbiote.Core.Service.Web.API.BrowseController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" />
      </containers>
      <file name="854381d3-24c6-9d37-9e73-4a90b9aebd66" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.Web.API.BrowseController">
      <topicdata name="BrowseController" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.Web.API.BrowseController" />
      <apidata name="BrowseController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" />
      </containers>
      <file name="3cc309e8-82c5-e9a3-c0af-20cca3fc408a" />
    </api>
    <api id="Fields.T:Symbiote.Core.Service.Web.API.BrowseController">
      <topicdata name="BrowseController" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Service.Web.API.BrowseController" />
      <apidata name="BrowseController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Service.Web.API.BrowseController.conciseSerializationProperties" />
        <element api="F:Symbiote.Core.Service.Web.API.BrowseController.logger" />
        <element api="F:Symbiote.Core.Service.Web.API.BrowseController.manager" />
        <element api="F:Symbiote.Core.Service.Web.API.BrowseController.model" />
        <element api="F:Symbiote.Core.Service.Web.API.BrowseController.verboseSerializationProperties" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" />
      </containers>
      <file name="41ad962a-54c4-76c8-4bb8-8a0a595b3309" />
    </api>
    <api id="Overload:Symbiote.Core.Service.Web.API.BrowseController.Browse">
      <topicdata name="Browse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Browse" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Service.Web.API.BrowseController.Browse" />
        <element api="M:Symbiote.Core.Service.Web.API.BrowseController.Browse(System.String)" />
        <element api="M:Symbiote.Core.Service.Web.API.BrowseController.Browse(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" ref="true" />
      </containers>
      <file name="3608f0ca-be76-4416-7ce4-2732d4f597de" />
    </api>
    <api id="Overload:Symbiote.Core.Service.Web.API.BrowseController.JsonFormatter">
      <topicdata name="JsonFormatter" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="JsonFormatter" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Service.Web.API.BrowseController.JsonFormatter" />
        <element api="M:Symbiote.Core.Service.Web.API.BrowseController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" ref="true" />
      </containers>
      <file name="a808d33d-e9ab-6c55-e00a-0e7df7c78424" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.BrowseController.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" ref="true" />
      </containers>
      <file name="538fba13-2254-0195-e7d1-bf32ed0f6e48" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.BrowseController.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" ref="true" />
      </containers>
      <file name="ca59474f-4ed7-bbd8-0105-32e7dcc1647d" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.BrowseController.Browse">
      <topicdata group="api" />
      <apidata name="Browse" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.API.BrowseController.Browse" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Web.Http.RouteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>api/browse</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.Http.HttpGetAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c31d02fe-0cce-e013-b819-f00cbc944088" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.BrowseController.Browse(System.String)">
      <topicdata group="api" />
      <apidata name="Browse" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.API.BrowseController.Browse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="verbosity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Web.Http.RouteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>api/browse/{verbosity}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.Http.HttpGetAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e6b49fb0-5342-dc4a-4526-49a1054796e2" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.BrowseController.Browse(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Browse" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.API.BrowseController.Browse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="verbosity" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>verbose</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Web.Http.RouteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>api/browse/{fqn}/{verbosity}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.Http.HttpGetAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e0831f47-cae3-abf6-0695-6588ce1c58e6" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.BrowseController.conciseSerializationProperties">
      <topicdata group="api" />
      <apidata name="conciseSerializationProperties" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" ref="true" />
      </containers>
      <file name="349c302d-2616-2863-a24b-5c2bf571278c" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.BrowseController.JsonFormatter">
      <topicdata group="api" />
      <apidata name="JsonFormatter" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" overload="Overload:Symbiote.Core.Service.Web.API.BrowseController.JsonFormatter" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" ref="true" />
      </containers>
      <file name="3b871a38-a930-d64c-4993-960cc8da606a" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.BrowseController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)">
      <topicdata group="api" />
      <apidata name="JsonFormatter" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" overload="Overload:Symbiote.Core.Service.Web.API.BrowseController.JsonFormatter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serializationProperties">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="contractResolverType">
          <type api="T:Symbiote.Core.ContractResolver.ContractResolverType" ref="false">
            <type api="T:Symbiote.Core.ContractResolver" ref="true" />
          </type>
        </parameter>
        <parameter name="includeSecondaryTypes" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" ref="true" />
      </containers>
      <file name="39e97db2-4e6d-58e9-29c9-87065f414fef" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.BrowseController.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" ref="true" />
      </containers>
      <file name="f46c7603-8ebe-3c78-747d-51996bfc10db" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.BrowseController.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" ref="true" />
      </containers>
      <file name="d766472d-eec3-cf74-785a-c0879e9622ac" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.BrowseController.model">
      <topicdata group="api" />
      <apidata name="model" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" ref="true" />
      </containers>
      <file name="77ab0f72-6798-cee6-100c-cd0820167480" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.BrowseController.verboseSerializationProperties">
      <topicdata group="api" />
      <apidata name="verboseSerializationProperties" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.BrowseController" ref="true" />
      </containers>
      <file name="3978cfe7-9dd9-ca31-2262-c4e0e8af2e71" />
    </api>
    <api id="T:Symbiote.Core.Service.Web.API.ConfigurationController">
      <topicdata group="api" />
      <apidata name="ConfigurationController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Http.ApiController" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.API.ConfigurationController.#ctor" />
        <element api="M:Symbiote.Core.Service.Web.API.ConfigurationController.#cctor" />
        <element api="F:Symbiote.Core.Service.Web.API.ConfigurationController.configuration" />
        <element api="M:Symbiote.Core.Service.Web.API.ConfigurationController.GetConfiguration" />
        <element api="M:Symbiote.Core.Service.Web.API.ConfigurationController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)" />
        <element api="F:Symbiote.Core.Service.Web.API.ConfigurationController.logger" />
        <element api="F:Symbiote.Core.Service.Web.API.ConfigurationController.manager" />
        <element api="F:Symbiote.Core.Service.Web.API.ConfigurationController.serializationProperties" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
      </containers>
      <file name="a61ff95f-a5a4-2824-0fa5-22580d2ffd29" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.Web.API.ConfigurationController">
      <topicdata name="ConfigurationController" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.Web.API.ConfigurationController" />
      <apidata name="ConfigurationController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ConfigurationController.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.API.ConfigurationController.GetConfiguration" />
        <element api="M:Symbiote.Core.Service.Web.API.ConfigurationController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ConfigurationController" />
      </containers>
      <file name="7e6467c7-84c6-81c4-82ed-4ab592663a45" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.Web.API.ConfigurationController">
      <topicdata name="ConfigurationController" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.Web.API.ConfigurationController" />
      <apidata name="ConfigurationController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ConfigurationController" />
      </containers>
      <file name="e9122d9e-1afa-15ea-408f-483a26c09ccf" />
    </api>
    <api id="Fields.T:Symbiote.Core.Service.Web.API.ConfigurationController">
      <topicdata name="ConfigurationController" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Service.Web.API.ConfigurationController" />
      <apidata name="ConfigurationController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Service.Web.API.ConfigurationController.configuration" />
        <element api="F:Symbiote.Core.Service.Web.API.ConfigurationController.logger" />
        <element api="F:Symbiote.Core.Service.Web.API.ConfigurationController.manager" />
        <element api="F:Symbiote.Core.Service.Web.API.ConfigurationController.serializationProperties" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ConfigurationController" />
      </containers>
      <file name="c1d188f1-53a3-9081-3f1f-ec6d8c30838c" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ConfigurationController.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ConfigurationController" ref="true" />
      </containers>
      <file name="e69e5b22-790c-6b10-83f2-88e8eae45769" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ConfigurationController.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ConfigurationController" ref="true" />
      </containers>
      <file name="cdc566d2-5ceb-48a0-97d5-f8c2730713e9" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.ConfigurationController.configuration">
      <topicdata group="api" />
      <apidata name="configuration" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ConfigurationController" ref="true" />
      </containers>
      <file name="7a885273-1997-e222-a31a-5c6cb0f65822" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ConfigurationController.GetConfiguration">
      <topicdata group="api" />
      <apidata name="GetConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ConfigurationController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Web.Http.RouteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>api/configuration</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.Http.HttpGetAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="70fbefde-ac6b-baaa-ab8a-537c1ca7e933" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ConfigurationController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)">
      <topicdata group="api" />
      <apidata name="JsonFormatter" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serializationProperties">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="contractResolverType">
          <type api="T:Symbiote.Core.ContractResolver.ContractResolverType" ref="false">
            <type api="T:Symbiote.Core.ContractResolver" ref="true" />
          </type>
        </parameter>
        <parameter name="includeSecondaryTypes" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ConfigurationController" ref="true" />
      </containers>
      <file name="4e338412-10bf-bb6a-f0a5-a9cf13d5d5d1" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.ConfigurationController.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ConfigurationController" ref="true" />
      </containers>
      <file name="47a19748-6124-0a54-4dda-2a93171162de" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.ConfigurationController.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ConfigurationController" ref="true" />
      </containers>
      <file name="7db811f3-db41-30a1-7b1f-a60120179831" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.ConfigurationController.serializationProperties">
      <topicdata group="api" />
      <apidata name="serializationProperties" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ConfigurationController" ref="true" />
      </containers>
      <file name="3a24c62d-b26d-9962-07a9-d800fc64ea5b" />
    </api>
    <api id="T:Symbiote.Core.Service.Web.API.IApiController">
      <topicdata group="api" />
      <apidata name="IApiController" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" ref="true" />
        <type api="T:Symbiote.Core.Service.Web.API.LogController" ref="true" />
        <type api="T:Symbiote.Core.Service.Web.API.ReadController" ref="true" />
      </implementors>
      <elements>
        <element api="M:Symbiote.Core.Service.Web.API.IApiController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
      </containers>
      <file name="cb290fab-eac0-fe69-e6b4-94a24f033b4f" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.Web.API.IApiController">
      <topicdata name="IApiController" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.Web.API.IApiController" />
      <apidata name="IApiController" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Service.Web.API.IApiController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.IApiController" />
      </containers>
      <file name="743177cc-0336-4882-1ba9-b5d3137678fc" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.IApiController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)">
      <topicdata group="api" />
      <apidata name="JsonFormatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="serializationProperties">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="contractResolverType">
          <type api="T:Symbiote.Core.ContractResolver.ContractResolverType" ref="false">
            <type api="T:Symbiote.Core.ContractResolver" ref="true" />
          </type>
        </parameter>
        <parameter name="includeSecondaryTypes">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.IApiController" ref="true" />
      </containers>
      <file name="0c89a036-175d-c95e-abe0-154f0a08918f" />
    </api>
    <api id="T:Symbiote.Core.Service.Web.API.LogController">
      <topicdata group="api" />
      <apidata name="LogController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Http.ApiController" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.Service.Web.API.IApiController" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.API.LogController.#ctor" />
        <element api="M:Symbiote.Core.Service.Web.API.LogController.#cctor" />
        <element api="M:Symbiote.Core.Service.Web.API.LogController.GetLog" />
        <element api="M:Symbiote.Core.Service.Web.API.LogController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)" />
        <element api="F:Symbiote.Core.Service.Web.API.LogController.logger" />
        <element api="F:Symbiote.Core.Service.Web.API.LogController.manager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
      </containers>
      <file name="9c2fb4bd-36e1-9350-e3fb-540a78e07cf0" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.Web.API.LogController">
      <topicdata name="LogController" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.Web.API.LogController" />
      <apidata name="LogController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.LogController.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.API.LogController.GetLog" />
        <element api="M:Symbiote.Core.Service.Web.API.LogController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.LogController" />
      </containers>
      <file name="cbb9388b-6603-244e-f5f0-ecc554639a59" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.Web.API.LogController">
      <topicdata name="LogController" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.Web.API.LogController" />
      <apidata name="LogController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.LogController" />
      </containers>
      <file name="36113403-a6e3-2795-8161-f4e1fd49f152" />
    </api>
    <api id="Fields.T:Symbiote.Core.Service.Web.API.LogController">
      <topicdata name="LogController" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Service.Web.API.LogController" />
      <apidata name="LogController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Service.Web.API.LogController.logger" />
        <element api="F:Symbiote.Core.Service.Web.API.LogController.manager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.LogController" />
      </containers>
      <file name="5ee55045-4a72-ffaf-70d6-b7b744266df5" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.LogController.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.LogController" ref="true" />
      </containers>
      <file name="4641225e-0475-a308-9fce-d9b680ccdc09" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.LogController.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.LogController" ref="true" />
      </containers>
      <file name="e2d69d7b-ed80-60cf-4399-6a7e1454edd5" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.LogController.GetLog">
      <topicdata group="api" />
      <apidata name="GetLog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.LogController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Web.Http.RouteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>api/log</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.Http.HttpGetAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7d37a5b5-0343-0970-7979-1d31f9ebbe05" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.LogController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)">
      <topicdata group="api" />
      <apidata name="JsonFormatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="serializationProperties">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="contractResolverType">
          <type api="T:Symbiote.Core.ContractResolver.ContractResolverType" ref="false">
            <type api="T:Symbiote.Core.ContractResolver" ref="true" />
          </type>
        </parameter>
        <parameter name="includeSecondaryTypes" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Service.Web.API.IApiController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)">
          <type api="T:Symbiote.Core.Service.Web.API.IApiController" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.LogController" ref="true" />
      </containers>
      <file name="554e20f7-0427-a99f-d9ee-a8c1f9029826" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.LogController.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.LogController" ref="true" />
      </containers>
      <file name="f0dc38a9-166a-0848-0a1e-efd365d81b71" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.LogController.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.LogController" ref="true" />
      </containers>
      <file name="3468732f-f2f9-a787-63a7-40cb68c82c14" />
    </api>
    <api id="T:Symbiote.Core.Service.Web.API.PluginController">
      <topicdata group="api" />
      <apidata name="PluginController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Http.ApiController" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.Service.Web.API.IApiController" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.#ctor" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.#cctor" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.DownloadPluginArchive(System.String)" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.GetPluginArchive(System.String)" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.InstallPlugin(System.String)" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.ListPluginArchives" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.ListPlugins" />
        <element api="F:Symbiote.Core.Service.Web.API.PluginController.logger" />
        <element api="F:Symbiote.Core.Service.Web.API.PluginController.manager" />
        <element api="F:Symbiote.Core.Service.Web.API.PluginController.pluginArchiveSerializationProperties" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.ReloadPluginArchives" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.UninstallPlugin(System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
      </containers>
      <file name="1deb869a-7cee-0c8c-6a6d-cd9f568b817c" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.Web.API.PluginController">
      <topicdata name="PluginController" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.Web.API.PluginController" />
      <apidata name="PluginController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.PluginController.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.DownloadPluginArchive(System.String)" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.GetPluginArchive(System.String)" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.InstallPlugin(System.String)" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.ListPluginArchives" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.ListPlugins" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.ReloadPluginArchives" />
        <element api="M:Symbiote.Core.Service.Web.API.PluginController.UninstallPlugin(System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" />
      </containers>
      <file name="bbd44deb-aeaf-d294-a1c5-bbab81ed4d6e" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.Web.API.PluginController">
      <topicdata name="PluginController" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.Web.API.PluginController" />
      <apidata name="PluginController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" />
      </containers>
      <file name="c81e1572-9f46-d1f4-3cb3-ad875623b7e3" />
    </api>
    <api id="Fields.T:Symbiote.Core.Service.Web.API.PluginController">
      <topicdata name="PluginController" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Service.Web.API.PluginController" />
      <apidata name="PluginController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Service.Web.API.PluginController.logger" />
        <element api="F:Symbiote.Core.Service.Web.API.PluginController.manager" />
        <element api="F:Symbiote.Core.Service.Web.API.PluginController.pluginArchiveSerializationProperties" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" />
      </containers>
      <file name="2ee2765d-ec15-d3ba-c8ae-cface0498c91" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.PluginController.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" ref="true" />
      </containers>
      <file name="14a981cc-9b73-7463-cdbb-b7cf5788e022" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.PluginController.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" ref="true" />
      </containers>
      <file name="365a4053-0676-a855-b427-01a24fc4e73a" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.PluginController.DownloadPluginArchive(System.String)">
      <topicdata group="api" />
      <apidata name="DownloadPluginArchive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Web.Http.RouteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>api/plugin/archive/{fileName}/download</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.Http.HttpGetAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="598fa880-0704-568d-4f67-238ea63fc9bd" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.PluginController.GetPluginArchive(System.String)">
      <topicdata group="api" />
      <apidata name="GetPluginArchive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Web.Http.RouteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>api/plugin/archive/{fileName}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.Http.HttpGetAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="159b5e59-1443-b887-46d7-ced73b929123" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.PluginController.InstallPlugin(System.String)">
      <topicdata group="api" />
      <apidata name="InstallPlugin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Web.Http.RouteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>api/plugin/archive/{fileName}/install</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.Http.HttpGetAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9fb04b45-ef66-3c95-db46-b4d43770676a" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.PluginController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)">
      <topicdata group="api" />
      <apidata name="JsonFormatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="serializationProperties">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="contractResolverType">
          <type api="T:Symbiote.Core.ContractResolver.ContractResolverType" ref="false">
            <type api="T:Symbiote.Core.ContractResolver" ref="true" />
          </type>
        </parameter>
        <parameter name="includeSecondaryTypes" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Service.Web.API.IApiController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)">
          <type api="T:Symbiote.Core.Service.Web.API.IApiController" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" ref="true" />
      </containers>
      <file name="411a55cb-0429-56e2-7e1a-b6e590b3b6b5" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.PluginController.ListPluginArchives">
      <topicdata group="api" />
      <apidata name="ListPluginArchives" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Web.Http.RouteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>api/plugin/archive</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.Http.HttpGetAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9eabf449-e8fa-0192-a37e-951cf0a19185" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.PluginController.ListPlugins">
      <topicdata group="api" />
      <apidata name="ListPlugins" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Web.Http.RouteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>api/plugin</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.Http.HttpGetAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="eab6e391-930b-d99b-6ae9-4446230ee201" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.PluginController.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" ref="true" />
      </containers>
      <file name="2da34adc-a47b-a52f-e928-d62cd0055c77" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.PluginController.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" ref="true" />
      </containers>
      <file name="7fa0e5ef-0361-1731-7427-ac379572f72d" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.PluginController.pluginArchiveSerializationProperties">
      <topicdata group="api" />
      <apidata name="pluginArchiveSerializationProperties" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" ref="true" />
      </containers>
      <file name="5f740b6f-2e69-0356-deb1-235cbbae725c" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.PluginController.ReloadPluginArchives">
      <topicdata group="api" />
      <apidata name="ReloadPluginArchives" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Web.Http.RouteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>api/plugin/archive/reload</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.Http.HttpGetAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="1ab2ac9d-7264-83fe-7143-8b0a6edc58df" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.PluginController.UninstallPlugin(System.String)">
      <topicdata group="api" />
      <apidata name="UninstallPlugin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.PluginController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Web.Http.RouteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>api/plugin/{fqn}/uninstall</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.Http.HttpGetAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="75acb0a4-1bde-52c1-f7e0-8f655352ef00" />
    </api>
    <api id="T:Symbiote.Core.Service.Web.API.ReadController">
      <topicdata group="api" />
      <apidata name="ReadController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Http.ApiController" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.Service.Web.API.IApiController" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.API.ReadController.#ctor" />
        <element api="M:Symbiote.Core.Service.Web.API.ReadController.#cctor" />
        <element api="M:Symbiote.Core.Service.Web.API.ReadController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)" />
        <element api="F:Symbiote.Core.Service.Web.API.ReadController.logger" />
        <element api="F:Symbiote.Core.Service.Web.API.ReadController.manager" />
        <element api="F:Symbiote.Core.Service.Web.API.ReadController.model" />
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Read">
          <element api="M:Symbiote.Core.Service.Web.API.ReadController.Read" />
          <element api="M:Symbiote.Core.Service.Web.API.ReadController.Read(System.String)" />
          <element api="M:Symbiote.Core.Service.Web.API.ReadController.Read(System.String,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
      </containers>
      <file name="8cfaf9c8-d767-5c71-622f-f87b65a715db" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.Web.API.ReadController">
      <topicdata name="ReadController" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.Web.API.ReadController" />
      <apidata name="ReadController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.API.ReadController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)" />
        <element api="Overload:Symbiote.Core.Service.Web.API.ReadController.Read">
          <element api="M:Symbiote.Core.Service.Web.API.ReadController.Read" />
          <element api="M:Symbiote.Core.Service.Web.API.ReadController.Read(System.String)" />
          <element api="M:Symbiote.Core.Service.Web.API.ReadController.Read(System.String,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ReadController" />
      </containers>
      <file name="9d494d20-2f9d-452b-659d-210cb487862b" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.Web.API.ReadController">
      <topicdata name="ReadController" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.Web.API.ReadController" />
      <apidata name="ReadController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ReadController" />
      </containers>
      <file name="64fb6da1-96c4-4344-9fba-fd415e9b5a24" />
    </api>
    <api id="Fields.T:Symbiote.Core.Service.Web.API.ReadController">
      <topicdata name="ReadController" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Service.Web.API.ReadController" />
      <apidata name="ReadController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Service.Web.API.ReadController.logger" />
        <element api="F:Symbiote.Core.Service.Web.API.ReadController.manager" />
        <element api="F:Symbiote.Core.Service.Web.API.ReadController.model" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ReadController" />
      </containers>
      <file name="5c1d1da0-5ef0-91a6-9b72-561d2b6ac0f0" />
    </api>
    <api id="Overload:Symbiote.Core.Service.Web.API.ReadController.Read">
      <topicdata name="Read" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Read" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Service.Web.API.ReadController.Read" />
        <element api="M:Symbiote.Core.Service.Web.API.ReadController.Read(System.String)" />
        <element api="M:Symbiote.Core.Service.Web.API.ReadController.Read(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ReadController" ref="true" />
      </containers>
      <file name="a2660c02-0e22-de06-babe-7a70ac6d66ba" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ReadController.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ReadController" ref="true" />
      </containers>
      <file name="7c01e1a6-8a97-fb13-051c-c970e3d7a628" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ReadController.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ReadController" ref="true" />
      </containers>
      <file name="aeca0500-de58-bc6a-7bfb-b0aa00c02423" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ReadController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)">
      <topicdata group="api" />
      <apidata name="JsonFormatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="serializationProperties">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="contractResolverType">
          <type api="T:Symbiote.Core.ContractResolver.ContractResolverType" ref="false">
            <type api="T:Symbiote.Core.ContractResolver" ref="true" />
          </type>
        </parameter>
        <parameter name="includeSecondaryTypes" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" ref="true" />
      </returns>
      <implements>
        <member api="M:Symbiote.Core.Service.Web.API.IApiController.JsonFormatter(System.Collections.Generic.List{System.String},Symbiote.Core.ContractResolver.ContractResolverType,System.Boolean)">
          <type api="T:Symbiote.Core.Service.Web.API.IApiController" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ReadController" ref="true" />
      </containers>
      <file name="09f02cf4-f57b-4ef3-4387-474cbdf7a2d1" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.ReadController.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ReadController" ref="true" />
      </containers>
      <file name="6d3f8bc3-6771-9fd1-b59b-d51ec4f5a278" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.ReadController.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ReadController" ref="true" />
      </containers>
      <file name="61e4412d-69a1-4a26-c12f-9b8f11093330" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.API.ReadController.model">
      <topicdata group="api" />
      <apidata name="model" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Item" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ReadController" ref="true" />
      </containers>
      <file name="5b3e4955-2295-724f-5902-586dda17c42f" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ReadController.Read">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.API.ReadController.Read" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ReadController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Web.Http.RouteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>api/read</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.Http.HttpGetAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="179df63d-6007-b137-0891-dd5d289dc653" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ReadController.Read(System.String)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.API.ReadController.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ReadController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Web.Http.RouteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>api/read/{fqn}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.Http.HttpGetAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="29234126-ee6a-0494-429c-bae1a927dff6" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ReadController.Read(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.API.ReadController.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fromSource">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ReadController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Web.Http.RouteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>api/read/{fqn}/{fromSource}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Web.Http.HttpGetAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="f6439fe0-c70c-5500-11d9-3475d6833e84" />
    </api>
    <api id="T:Symbiote.Core.Service.Web.API.ValuesController">
      <topicdata group="api" />
      <apidata name="ValuesController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Http.ApiController" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.API.ValuesController.#ctor" />
        <element api="M:Symbiote.Core.Service.Web.API.ValuesController.Delete(System.Int32)" />
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Get">
          <element api="M:Symbiote.Core.Service.Web.API.ValuesController.Get" />
          <element api="M:Symbiote.Core.Service.Web.API.ValuesController.Get(System.Int32)" />
        </element>
        <element api="M:Symbiote.Core.Service.Web.API.ValuesController.Post(System.String)" />
        <element api="M:Symbiote.Core.Service.Web.API.ValuesController.Put(System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
      </containers>
      <file name="6b7b081d-b43a-4aba-60c0-951d96d7554c" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.Web.API.ValuesController">
      <topicdata name="ValuesController" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.Web.API.ValuesController" />
      <apidata name="ValuesController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.API.ValuesController.Delete(System.Int32)" />
        <element api="Overload:Symbiote.Core.Service.Web.API.ValuesController.Get">
          <element api="M:Symbiote.Core.Service.Web.API.ValuesController.Get" />
          <element api="M:Symbiote.Core.Service.Web.API.ValuesController.Get(System.Int32)" />
        </element>
        <element api="M:Symbiote.Core.Service.Web.API.ValuesController.Post(System.String)" />
        <element api="M:Symbiote.Core.Service.Web.API.ValuesController.Put(System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ValuesController" />
      </containers>
      <file name="1fcf15eb-beb4-5306-4b0f-6aeb1db38b25" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.Web.API.ValuesController">
      <topicdata name="ValuesController" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.Web.API.ValuesController" />
      <apidata name="ValuesController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ValuesController" />
      </containers>
      <file name="b8f6940c-45aa-64b8-59c9-1ae93b7fe429" />
    </api>
    <api id="Overload:Symbiote.Core.Service.Web.API.ValuesController.Get">
      <topicdata name="Get" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Get" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Service.Web.API.ValuesController.Get" />
        <element api="M:Symbiote.Core.Service.Web.API.ValuesController.Get(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ValuesController" ref="true" />
      </containers>
      <file name="7f552447-fde0-5dce-a9f7-c368e82cabbb" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ValuesController.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ValuesController" ref="true" />
      </containers>
      <file name="b93b5034-dd22-b2bc-942d-11e510e62e47" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ValuesController.Delete(System.Int32)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ValuesController" ref="true" />
      </containers>
      <file name="7ca88465-06be-8794-ef4a-04fb2022e7b8" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ValuesController.Get">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.API.ValuesController.Get" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ValuesController" ref="true" />
      </containers>
      <file name="74e26f1f-1c26-a9ef-f755-92d47545cdfa" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ValuesController.Get(System.Int32)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.API.ValuesController.Get" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ValuesController" ref="true" />
      </containers>
      <file name="6a79c69c-c6ad-d852-fc8b-a14965592d36" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ValuesController.Post(System.String)">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
          <attributes>
            <attribute>
              <type api="T:System.Web.Http.FromBodyAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ValuesController" ref="true" />
      </containers>
      <file name="f9bf99ac-de8c-6dc4-5ea9-87f489d8f6e6" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.API.ValuesController.Put(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="Put" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
          <attributes>
            <attribute>
              <type api="T:System.Web.Http.FromBodyAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.API" />
        <type api="T:Symbiote.Core.Service.Web.API.ValuesController" ref="true" />
      </containers>
      <file name="067a7e33-9377-e9a8-856b-51f0177617df" />
    </api>
    <api id="N:Symbiote.Core.Service.Web.SignalR">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Service.Web.SignalR" group="namespace" />
      <elements>
        <element api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" />
        <element api="T:Symbiote.Core.Service.Web.SignalR.LogHub" />
        <element api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" />
        <element api="T:Symbiote.Core.Service.Web.SignalR.IHub" />
      </elements>
      <file name="0d092c6c-c476-36f6-e6ee-12ee12b1d81e" />
    </api>
    <api id="T:Symbiote.Core.Service.Web.SignalR.HubHelper">
      <topicdata group="api" />
      <apidata name="HubHelper" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.#ctor(Symbiote.Core.ProgramManager,Symbiote.Core.Service.Web.SignalR.IHub)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.#cctor" />
        <element api="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.GetClientSubscriptions">
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetClientSubscriptions(System.String)" />
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetClientSubscriptions(System.String,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})" />
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.GetSubscriptions">
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetSubscriptions(System.Object)" />
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetSubscriptions(System.Object,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})" />
        </element>
        <element api="P:Symbiote.Core.Service.Web.SignalR.HubHelper.Hub" />
        <element api="F:Symbiote.Core.Service.Web.SignalR.HubHelper.logger" />
        <element api="F:Symbiote.Core.Service.Web.SignalR.HubHelper.manager" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.OnChange(System.Object,System.EventArgs)" />
        <element api="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscribe">
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscribe(System.Object,System.String)" />
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscribe(System.Object,System.String,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})" />
        </element>
        <element api="P:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscriptions" />
        <element api="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.Unsubscribe">
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Unsubscribe(System.Object,System.String)" />
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Unsubscribe(System.Object,System.String,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})" />
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
      </containers>
      <file name="5e2a09e5-da0b-9868-2170-76137788fb69" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.Web.SignalR.HubHelper">
      <topicdata name="HubHelper" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.Web.SignalR.HubHelper" />
      <apidata name="HubHelper" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.GetClientSubscriptions">
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetClientSubscriptions(System.String)" />
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetClientSubscriptions(System.String,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})" />
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.GetSubscriptions">
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetSubscriptions(System.Object)" />
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetSubscriptions(System.Object,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})" />
        </element>
        <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.OnChange(System.Object,System.EventArgs)" />
        <element api="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscribe">
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscribe(System.Object,System.String)" />
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscribe(System.Object,System.String,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})" />
        </element>
        <element api="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.Unsubscribe">
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Unsubscribe(System.Object,System.String)" />
          <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Unsubscribe(System.Object,System.String,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})" />
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" />
      </containers>
      <file name="99f01c7d-de62-098f-6661-03c6a5b34d4b" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.Web.SignalR.HubHelper">
      <topicdata name="HubHelper" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.Web.SignalR.HubHelper" />
      <apidata name="HubHelper" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Symbiote.Core.Service.Web.SignalR.HubHelper.Hub" />
        <element api="P:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscriptions" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" />
      </containers>
      <file name="f586488f-f112-5b52-36b0-de35500e6774" />
    </api>
    <api id="Fields.T:Symbiote.Core.Service.Web.SignalR.HubHelper">
      <topicdata name="HubHelper" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Service.Web.SignalR.HubHelper" />
      <apidata name="HubHelper" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Service.Web.SignalR.HubHelper.logger" />
        <element api="F:Symbiote.Core.Service.Web.SignalR.HubHelper.manager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" />
      </containers>
      <file name="a5d9132e-fa00-3131-01cc-fac0a13c9728" />
    </api>
    <api id="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.GetClientSubscriptions">
      <topicdata name="GetClientSubscriptions" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetClientSubscriptions" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetClientSubscriptions(System.String)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetClientSubscriptions(System.String,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="9d3eaa6e-8346-847d-629c-07144bc655d7" />
    </api>
    <api id="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.GetSubscriptions">
      <topicdata name="GetSubscriptions" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetSubscriptions" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetSubscriptions(System.Object)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetSubscriptions(System.Object,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="b3d64b1d-a396-9e14-7ffc-9c5f7b9484f8" />
    </api>
    <api id="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscribe">
      <topicdata name="Subscribe" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscribe(System.Object,System.String)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscribe(System.Object,System.String,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="7f717e39-4987-0400-8c23-7665fe3542af" />
    </api>
    <api id="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.Unsubscribe">
      <topicdata name="Unsubscribe" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <elements>
        <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Unsubscribe(System.Object,System.String)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Unsubscribe(System.Object,System.String,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="b81de846-9653-da92-7961-43ac1102fa6e" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.HubHelper.#ctor(Symbiote.Core.ProgramManager,Symbiote.Core.Service.Web.SignalR.IHub)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="manager">
          <type api="T:Symbiote.Core.ProgramManager" ref="true" />
        </parameter>
        <parameter name="hub">
          <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="bf6dc2f2-8c63-b04d-3824-36fb00c82eae" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.HubHelper.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="ce8aae11-7e29-28c3-183b-f376005fa755" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetClientSubscriptions(System.String)">
      <topicdata group="api" />
      <apidata name="GetClientSubscriptions" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.GetClientSubscriptions" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="client">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="d14e2eab-6e85-39c3-2203-e05ab6c9a2ad" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetClientSubscriptions(System.String,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})">
      <topicdata group="api" />
      <apidata name="GetClientSubscriptions" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.GetClientSubscriptions" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="client">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="25532f59-49b5-897e-246e-25c59c31322d" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetSubscriptions(System.Object)">
      <topicdata group="api" />
      <apidata name="GetSubscriptions" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.GetSubscriptions" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="70ec7d7c-be63-ecb2-f883-4cf38c0da951" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.HubHelper.GetSubscriptions(System.Object,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})">
      <topicdata group="api" />
      <apidata name="GetSubscriptions" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.GetSubscriptions" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="8bf147ae-b1e4-33f7-1b0c-a6557a0c1696" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.SignalR.HubHelper.Hub">
      <topicdata group="api" />
      <apidata name="Hub" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Hub" />
      <setter name="set_Hub" />
      <returns>
        <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="fae4b399-0a00-7bba-d52b-9a50aa7324e3" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.SignalR.HubHelper.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="a9f1c212-4bd1-2832-052e-2aa7b32b4522" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.SignalR.HubHelper.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="45000183-ca9a-1f53-2302-e6ffb9c71e95" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.HubHelper.OnChange(System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnChange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="6f250c9b-dac8-22f1-b7e7-55bb59b3863b" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscribe(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscribe" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="client">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="5970f1d0-5b6c-95c9-bfd4-62aceb1e7af1" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscribe(System.Object,System.String,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})">
      <topicdata group="api" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscribe" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="client">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="832f8ea5-4728-ca49-3411-1b692bfb9e58" />
    </api>
    <api id="P:Symbiote.Core.Service.Web.SignalR.HubHelper.Subscriptions">
      <topicdata group="api" />
      <apidata name="Subscriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Subscriptions" />
      <setter name="set_Subscriptions" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="d0ac3f8c-b9c9-4282-f4d1-b7e58f461726" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Unsubscribe(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.Unsubscribe" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="client">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="8c9f7980-1ec2-0ae2-1d14-d4b2602c52e7" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.HubHelper.Unsubscribe(System.Object,System.String,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{System.String}})">
      <topicdata group="api" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Symbiote.Core.Service.Web.SignalR.HubHelper.Unsubscribe" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="client">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Symbiote.Core.Result" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </containers>
      <file name="94a585b0-eafa-81b4-369c-9b6bedd068d7" />
    </api>
    <api id="T:Symbiote.Core.Service.Web.SignalR.IHub">
      <topicdata group="api" />
      <apidata name="IHub" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" ref="true" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" ref="true" />
      </implementors>
      <elements>
        <element api="M:Symbiote.Core.Service.Web.SignalR.IHub.Read(System.Object,System.EventArgs)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.IHub.Subscribe(System.Object)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.IHub.Unsubscribe(System.Object)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.IHub.Write(System.Object[])" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.IHub.WriteToSource(System.Object[])" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
      </containers>
      <file name="77cf02f8-d26a-bb58-0134-ddca88373bd7" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.Web.SignalR.IHub">
      <topicdata name="IHub" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.Web.SignalR.IHub" />
      <apidata name="IHub" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Symbiote.Core.Service.Web.SignalR.IHub.Read(System.Object,System.EventArgs)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.IHub.Subscribe(System.Object)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.IHub.Unsubscribe(System.Object)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.IHub.Write(System.Object[])" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.IHub.WriteToSource(System.Object[])" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" />
      </containers>
      <file name="1377050f-8c90-6b63-de75-371daa782c8c" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.IHub.Read(System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
      </containers>
      <file name="af251c4d-6afb-f8ce-bb50-5a0b871d6f18" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.IHub.Subscribe(System.Object)">
      <topicdata group="api" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
      </containers>
      <file name="a636462c-220a-4faa-10b4-2326a0fa0469" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.IHub.Unsubscribe(System.Object)">
      <topicdata group="api" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
      </containers>
      <file name="062d64cd-aad1-f540-222f-513484a549ac" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.IHub.Write(System.Object[])">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
      </containers>
      <file name="2608a3e9-d0fd-7019-c03e-c274d39ba572" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.IHub.WriteToSource(System.Object[])">
      <topicdata group="api" />
      <apidata name="WriteToSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
      </containers>
      <file name="3e03bc7a-6c6c-2a50-3593-5bebbb0e9dc4" />
    </api>
    <api id="T:Symbiote.Core.Service.Web.SignalR.ItemHub">
      <topicdata group="api" />
      <apidata name="ItemHub" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
      </implements>
      <elements>
        <element api="Overload:Symbiote.Core.Service.Web.SignalR.ItemHub.Dispose">
          <element api="M:Microsoft.AspNet.SignalR.Hub.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.AspNet.SignalR" />
              <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
            </containers>
          </element>
          <element api="M:Microsoft.AspNet.SignalR.Hub.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.AspNet.SignalR" />
              <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:Microsoft.AspNet.SignalR.Hub.Clients">
          <apidata name="Clients" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clients" />
          <setter name="set_Clients" />
          <returns>
            <type api="T:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Microsoft.AspNet.SignalR.Hubs.IHub.Clients">
              <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.AspNet.SignalR" />
            <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.AspNet.SignalR.Hub.Context">
          <apidata name="Context" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Context" />
          <setter name="set_Context" />
          <returns>
            <type api="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" ref="true" />
          </returns>
          <implements>
            <member api="P:Microsoft.AspNet.SignalR.Hubs.IHub.Context">
              <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.AspNet.SignalR" />
            <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.AspNet.SignalR.Hub.Groups">
          <apidata name="Groups" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Groups" />
          <setter name="set_Groups" />
          <returns>
            <type api="T:Microsoft.AspNet.SignalR.IGroupManager" ref="true" />
          </returns>
          <implements>
            <member api="P:Microsoft.AspNet.SignalR.Hubs.IHub.Groups">
              <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.AspNet.SignalR" />
            <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.#ctor" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.#cctor" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.GetLogPrefix" />
        <element api="F:Symbiote.Core.Service.Web.SignalR.ItemHub.hubManager" />
        <element api="F:Symbiote.Core.Service.Web.SignalR.ItemHub.logger" />
        <element api="F:Symbiote.Core.Service.Web.SignalR.ItemHub.manager" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.OnConnected" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.OnDisconnected(System.Boolean)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.OnReconnected" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.Read(System.Object,System.EventArgs)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.Subscribe(System.Object)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.Unsubscribe(System.Object)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.Write(System.Object[])" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.WriteToSource(System.Object[])" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
      </containers>
      <file name="70d9d54c-a62a-7b21-ec5f-52d3609d6298" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.Web.SignalR.ItemHub">
      <topicdata name="ItemHub" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.Web.SignalR.ItemHub" />
      <apidata name="ItemHub" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Symbiote.Core.Service.Web.SignalR.ItemHub.Dispose">
          <element api="M:Microsoft.AspNet.SignalR.Hub.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.AspNet.SignalR" />
              <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
            </containers>
          </element>
          <element api="M:Microsoft.AspNet.SignalR.Hub.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.AspNet.SignalR" />
              <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.GetLogPrefix" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.OnConnected" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.OnDisconnected(System.Boolean)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.OnReconnected" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.Read(System.Object,System.EventArgs)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.Subscribe(System.Object)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.Unsubscribe(System.Object)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.Write(System.Object[])" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.ItemHub.WriteToSource(System.Object[])" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" />
      </containers>
      <file name="9b47fa63-d334-a4f3-442b-b7818b38b6b8" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.Web.SignalR.ItemHub">
      <topicdata name="ItemHub" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.Web.SignalR.ItemHub" />
      <apidata name="ItemHub" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.AspNet.SignalR.Hub.Clients">
          <apidata name="Clients" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clients" />
          <setter name="set_Clients" />
          <returns>
            <type api="T:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Microsoft.AspNet.SignalR.Hubs.IHub.Clients">
              <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.AspNet.SignalR" />
            <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.AspNet.SignalR.Hub.Context">
          <apidata name="Context" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Context" />
          <setter name="set_Context" />
          <returns>
            <type api="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" ref="true" />
          </returns>
          <implements>
            <member api="P:Microsoft.AspNet.SignalR.Hubs.IHub.Context">
              <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.AspNet.SignalR" />
            <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.AspNet.SignalR.Hub.Groups">
          <apidata name="Groups" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Groups" />
          <setter name="set_Groups" />
          <returns>
            <type api="T:Microsoft.AspNet.SignalR.IGroupManager" ref="true" />
          </returns>
          <implements>
            <member api="P:Microsoft.AspNet.SignalR.Hubs.IHub.Groups">
              <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.AspNet.SignalR" />
            <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" />
      </containers>
      <file name="0a9338e2-29a7-ace4-31a3-a7c9809cbd0d" />
    </api>
    <api id="Fields.T:Symbiote.Core.Service.Web.SignalR.ItemHub">
      <topicdata name="ItemHub" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Service.Web.SignalR.ItemHub" />
      <apidata name="ItemHub" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Service.Web.SignalR.ItemHub.hubManager" />
        <element api="F:Symbiote.Core.Service.Web.SignalR.ItemHub.logger" />
        <element api="F:Symbiote.Core.Service.Web.SignalR.ItemHub.manager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" />
      </containers>
      <file name="caa0a799-8a0e-8475-2b5b-152aefa54835" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.ItemHub.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" ref="true" />
      </containers>
      <file name="a9c75c9d-97c8-0481-e4e2-27053a3b3e3a" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.ItemHub.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" ref="true" />
      </containers>
      <file name="4b2e6d6b-1dbd-0d68-1457-6585f375193a" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.ItemHub.GetLogPrefix">
      <topicdata group="api" />
      <apidata name="GetLogPrefix" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" ref="true" />
      </containers>
      <file name="0588d5c8-6959-d162-faab-5007cb172eeb" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.SignalR.ItemHub.hubManager">
      <topicdata group="api" />
      <apidata name="hubManager" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" ref="true" />
      </containers>
      <file name="63c496e9-9fd1-efaf-63e4-00c6679a9691" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.SignalR.ItemHub.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" ref="true" />
      </containers>
      <file name="f197379a-aed7-6427-9053-31c5c3db6907" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.SignalR.ItemHub.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" ref="true" />
      </containers>
      <file name="9332d9be-ae3e-2a64-e830-12b521ba47c4" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.ItemHub.OnConnected">
      <topicdata group="api" />
      <apidata name="OnConnected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.AspNet.SignalR.Hub.OnConnected">
          <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected">
          <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" ref="true" />
      </containers>
      <file name="071f3b90-fa3d-f1d5-d171-140f6646fc68" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.ItemHub.OnDisconnected(System.Boolean)">
      <topicdata group="api" />
      <apidata name="OnDisconnected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.AspNet.SignalR.Hub.OnDisconnected(System.Boolean)">
          <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="stopCalled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected(System.Boolean)">
          <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" ref="true" />
      </containers>
      <file name="d59c3c69-d61a-ebf8-8c29-97d88dec94da" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.ItemHub.OnReconnected">
      <topicdata group="api" />
      <apidata name="OnReconnected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.AspNet.SignalR.Hub.OnReconnected">
          <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected">
          <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" ref="true" />
      </containers>
      <file name="3a190a6b-4e34-efef-9cd1-60eb9bbe5711" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.ItemHub.Read(System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Symbiote.Core.Service.Web.SignalR.IHub.Read(System.Object,System.EventArgs)">
          <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" ref="true" />
      </containers>
      <file name="a44ef4c4-93c6-316b-aed9-7a37fc228b02" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.ItemHub.Subscribe(System.Object)">
      <topicdata group="api" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Symbiote.Core.Service.Web.SignalR.IHub.Subscribe(System.Object)">
          <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" ref="true" />
      </containers>
      <file name="fdde41f0-3726-70df-67e9-bb0c21116843" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.ItemHub.Unsubscribe(System.Object)">
      <topicdata group="api" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Symbiote.Core.Service.Web.SignalR.IHub.Unsubscribe(System.Object)">
          <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" ref="true" />
      </containers>
      <file name="37297402-21b4-bda2-91e7-71143a8ace56" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.ItemHub.Write(System.Object[])">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Symbiote.Core.Service.Web.SignalR.IHub.Write(System.Object[])">
          <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" ref="true" />
      </containers>
      <file name="a88e4c3d-d0ec-0f0b-e795-ada4f0b872f6" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.ItemHub.WriteToSource(System.Object[])">
      <topicdata group="api" />
      <apidata name="WriteToSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Symbiote.Core.Service.Web.SignalR.IHub.WriteToSource(System.Object[])">
          <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.ItemHub" ref="true" />
      </containers>
      <file name="2ff1d0e5-130b-97f0-9395-f8b4e25c5b61" />
    </api>
    <api id="T:Symbiote.Core.Service.Web.SignalR.LogHub">
      <topicdata group="api" />
      <apidata name="LogHub" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
      </implements>
      <elements>
        <element api="Overload:Symbiote.Core.Service.Web.SignalR.LogHub.Dispose">
          <element api="M:Microsoft.AspNet.SignalR.Hub.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.AspNet.SignalR" />
              <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
            </containers>
          </element>
          <element api="M:Microsoft.AspNet.SignalR.Hub.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.AspNet.SignalR" />
              <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:Microsoft.AspNet.SignalR.Hub.Clients">
          <apidata name="Clients" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clients" />
          <setter name="set_Clients" />
          <returns>
            <type api="T:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Microsoft.AspNet.SignalR.Hubs.IHub.Clients">
              <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.AspNet.SignalR" />
            <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.AspNet.SignalR.Hub.Context">
          <apidata name="Context" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Context" />
          <setter name="set_Context" />
          <returns>
            <type api="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" ref="true" />
          </returns>
          <implements>
            <member api="P:Microsoft.AspNet.SignalR.Hubs.IHub.Context">
              <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.AspNet.SignalR" />
            <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.AspNet.SignalR.Hub.Groups">
          <apidata name="Groups" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Groups" />
          <setter name="set_Groups" />
          <returns>
            <type api="T:Microsoft.AspNet.SignalR.IGroupManager" ref="true" />
          </returns>
          <implements>
            <member api="P:Microsoft.AspNet.SignalR.Hubs.IHub.Groups">
              <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.AspNet.SignalR" />
            <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.#ctor" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.#cctor" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.GetLogPrefix" />
        <element api="F:Symbiote.Core.Service.Web.SignalR.LogHub.hubManager" />
        <element api="F:Symbiote.Core.Service.Web.SignalR.LogHub.logger" />
        <element api="F:Symbiote.Core.Service.Web.SignalR.LogHub.manager" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.OnConnected" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.OnDisconnected(System.Boolean)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.OnReconnected" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.Read(System.Object,System.EventArgs)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.Subscribe(System.Object)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.Unsubscribe(System.Object)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.Write(System.Object[])" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.WriteToSource(System.Object[])" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
      </containers>
      <file name="4a7f79ca-4cb0-b059-c799-a75c8bc8e840" />
    </api>
    <api id="Methods.T:Symbiote.Core.Service.Web.SignalR.LogHub">
      <topicdata name="LogHub" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Core.Service.Web.SignalR.LogHub" />
      <apidata name="LogHub" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Symbiote.Core.Service.Web.SignalR.LogHub.Dispose">
          <element api="M:Microsoft.AspNet.SignalR.Hub.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.AspNet.SignalR" />
              <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
            </containers>
          </element>
          <element api="M:Microsoft.AspNet.SignalR.Hub.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:Microsoft.AspNet.SignalR" />
              <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.GetLogPrefix" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.OnConnected" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.OnDisconnected(System.Boolean)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.OnReconnected" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.Read(System.Object,System.EventArgs)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.Subscribe(System.Object)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.Unsubscribe(System.Object)" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.Write(System.Object[])" />
        <element api="M:Symbiote.Core.Service.Web.SignalR.LogHub.WriteToSource(System.Object[])" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" />
      </containers>
      <file name="b79bdefd-43a0-a015-5bf2-cfc90471c776" />
    </api>
    <api id="Properties.T:Symbiote.Core.Service.Web.SignalR.LogHub">
      <topicdata name="LogHub" group="list" subgroup="Properties" typeTopicId="T:Symbiote.Core.Service.Web.SignalR.LogHub" />
      <apidata name="LogHub" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.AspNet.SignalR.Hub.Clients">
          <apidata name="Clients" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clients" />
          <setter name="set_Clients" />
          <returns>
            <type api="T:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Microsoft.AspNet.SignalR.Hubs.IHub.Clients">
              <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.AspNet.SignalR" />
            <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.AspNet.SignalR.Hub.Context">
          <apidata name="Context" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Context" />
          <setter name="set_Context" />
          <returns>
            <type api="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" ref="true" />
          </returns>
          <implements>
            <member api="P:Microsoft.AspNet.SignalR.Hubs.IHub.Context">
              <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.AspNet.SignalR" />
            <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.AspNet.SignalR.Hub.Groups">
          <apidata name="Groups" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Groups" />
          <setter name="set_Groups" />
          <returns>
            <type api="T:Microsoft.AspNet.SignalR.IGroupManager" ref="true" />
          </returns>
          <implements>
            <member api="P:Microsoft.AspNet.SignalR.Hubs.IHub.Groups">
              <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.AspNet.SignalR.Core" module="Microsoft.AspNet.SignalR.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.AspNet.SignalR" />
            <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" />
      </containers>
      <file name="b137e0a7-afe1-d2a0-9c85-4fa42f14cc83" />
    </api>
    <api id="Fields.T:Symbiote.Core.Service.Web.SignalR.LogHub">
      <topicdata name="LogHub" group="list" subgroup="Fields" typeTopicId="T:Symbiote.Core.Service.Web.SignalR.LogHub" />
      <apidata name="LogHub" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Symbiote.Core.Service.Web.SignalR.LogHub.hubManager" />
        <element api="F:Symbiote.Core.Service.Web.SignalR.LogHub.logger" />
        <element api="F:Symbiote.Core.Service.Web.SignalR.LogHub.manager" />
      </elements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" />
      </containers>
      <file name="c42c2335-cefa-b98b-7de9-151931374da9" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.LogHub.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" ref="true" />
      </containers>
      <file name="9d88a596-2403-f9c8-53a7-263de867a6da" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.LogHub.#cctor">
      <topicdata group="api" />
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" ref="true" />
      </containers>
      <file name="18dd97d9-e813-dc77-6063-8026da11bbab" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.LogHub.GetLogPrefix">
      <topicdata group="api" />
      <apidata name="GetLogPrefix" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" ref="true" />
      </containers>
      <file name="9047d434-dc10-437d-c0bd-2df1546887da" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.SignalR.LogHub.hubManager">
      <topicdata group="api" />
      <apidata name="hubManager" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.Service.Web.SignalR.HubHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" ref="true" />
      </containers>
      <file name="155c7f73-2890-a522-85d5-ac35d02aeeee" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.SignalR.LogHub.logger">
      <topicdata group="api" />
      <apidata name="logger" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" ref="true" />
      </containers>
      <file name="56506247-fa14-cb73-a348-89437c494b23" />
    </api>
    <api id="F:Symbiote.Core.Service.Web.SignalR.LogHub.manager">
      <topicdata group="api" />
      <apidata name="manager" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Symbiote.Core.ProgramManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" ref="true" />
      </containers>
      <file name="080e6843-afab-e243-95fa-a142c0fd68c7" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.LogHub.OnConnected">
      <topicdata group="api" />
      <apidata name="OnConnected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.AspNet.SignalR.Hub.OnConnected">
          <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected">
          <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" ref="true" />
      </containers>
      <file name="897170fb-2908-0c56-ba69-5e383c909ec6" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.LogHub.OnDisconnected(System.Boolean)">
      <topicdata group="api" />
      <apidata name="OnDisconnected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.AspNet.SignalR.Hub.OnDisconnected(System.Boolean)">
          <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="stopCalled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected(System.Boolean)">
          <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" ref="true" />
      </containers>
      <file name="9a21a564-e3f6-0f13-b493-804d927c07da" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.LogHub.OnReconnected">
      <topicdata group="api" />
      <apidata name="OnReconnected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.AspNet.SignalR.Hub.OnReconnected">
          <type api="T:Microsoft.AspNet.SignalR.Hub" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected">
          <type api="T:Microsoft.AspNet.SignalR.Hubs.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" ref="true" />
      </containers>
      <file name="68e56c3e-89bf-9cf0-1432-c91c37583f74" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.LogHub.Read(System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Symbiote.Core.Service.Web.SignalR.IHub.Read(System.Object,System.EventArgs)">
          <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" ref="true" />
      </containers>
      <file name="524bcd80-0f88-2017-87a2-86f64d86143f" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.LogHub.Subscribe(System.Object)">
      <topicdata group="api" />
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Symbiote.Core.Service.Web.SignalR.IHub.Subscribe(System.Object)">
          <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" ref="true" />
      </containers>
      <file name="35286569-29ba-3d74-3605-899beb92d8de" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.LogHub.Unsubscribe(System.Object)">
      <topicdata group="api" />
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Symbiote.Core.Service.Web.SignalR.IHub.Unsubscribe(System.Object)">
          <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" ref="true" />
      </containers>
      <file name="63d4d332-7a78-220e-c68e-74f7cba40f71" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.LogHub.Write(System.Object[])">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Symbiote.Core.Service.Web.SignalR.IHub.Write(System.Object[])">
          <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" ref="true" />
      </containers>
      <file name="0ea5d89a-1d7c-feab-ce18-3911a46ae7e4" />
    </api>
    <api id="M:Symbiote.Core.Service.Web.SignalR.LogHub.WriteToSource(System.Object[])">
      <topicdata group="api" />
      <apidata name="WriteToSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Symbiote.Core.Service.Web.SignalR.IHub.WriteToSource(System.Object[])">
          <type api="T:Symbiote.Core.Service.Web.SignalR.IHub" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Symbiote" module="Symbiote" kind="ConsoleApplication">
          <assemblydata version="0.5.0.0 (0.5.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Core.Service.Web.SignalR" />
        <type api="T:Symbiote.Core.Service.Web.SignalR.LogHub" ref="true" />
      </containers>
      <file name="5ff4d680-c249-84ae-c93e-15e09d24fa04" />
    </api>
    <api id="N:Symbiote.Cryptography">
      <topicdata group="api" />
      <apidata name="Symbiote.Cryptography" group="namespace" />
      <elements>
        <element api="T:Symbiote.Cryptography.FingerprintValidator" />
      </elements>
      <file name="b8478ec4-dc6a-d97e-bab7-c31d203ab443" />
    </api>
    <api id="T:Symbiote.Cryptography.FingerprintValidator">
      <topicdata group="api" />
      <apidata name="FingerprintValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Cryptography.FingerprintValidator.#ctor" />
        <element api="M:Symbiote.Cryptography.FingerprintValidator.ComputeHash(System.String,System.String)" />
        <element api="M:Symbiote.Cryptography.FingerprintValidator.GenerateSalt" />
        <element api="M:Symbiote.Cryptography.FingerprintValidator.Validate(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote.Cryptography" module="Symbiote.Cryptography" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0 (1.0.0.0)" />
        </library>
        <namespace api="N:Symbiote.Cryptography" />
      </containers>
      <file name="832320f0-f19e-2825-4a3c-4ef33759ff7c" />
    </api>
    <api id="Methods.T:Symbiote.Cryptography.FingerprintValidator">
      <topicdata name="FingerprintValidator" group="list" subgroup="Methods" typeTopicId="T:Symbiote.Cryptography.FingerprintValidator" />
      <apidata name="FingerprintValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Symbiote.Cryptography.FingerprintValidator.ComputeHash(System.String,System.String)" />
        <element api="M:Symbiote.Cryptography.FingerprintValidator.GenerateSalt" />
        <element api="M:Symbiote.Cryptography.FingerprintValidator.Validate(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Symbiote.Cryptography" module="Symbiote.Cryptography" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0 (1.0.0.0)" />
        </library>
        <namespace api="N:Symbiote.Cryptography" />
        <type api="T:Symbiote.Cryptography.FingerprintValidator" />
      </containers>
      <file name="b8e8f6a4-dc84-3d7a-06ff-588d18ce79c9" />
    </api>
    <api id="M:Symbiote.Cryptography.FingerprintValidator.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Symbiote.Cryptography" module="Symbiote.Cryptography" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0 (1.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Cryptography" />
        <type api="T:Symbiote.Cryptography.FingerprintValidator" ref="true" />
      </containers>
      <file name="425a009f-5731-d179-e65f-3351969980cb" />
    </api>
    <api id="M:Symbiote.Cryptography.FingerprintValidator.ComputeHash(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ComputeHash" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="salt" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote.Cryptography" module="Symbiote.Cryptography" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0 (1.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Cryptography" />
        <type api="T:Symbiote.Cryptography.FingerprintValidator" ref="true" />
      </containers>
      <file name="c1197604-814e-d486-3a29-abed36314be3" />
    </api>
    <api id="M:Symbiote.Cryptography.FingerprintValidator.GenerateSalt">
      <topicdata group="api" />
      <apidata name="GenerateSalt" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Symbiote.Cryptography" module="Symbiote.Cryptography" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0 (1.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Cryptography" />
        <type api="T:Symbiote.Cryptography.FingerprintValidator" ref="true" />
      </containers>
      <file name="e9d56141-54b1-e122-ef34-2d244e31828d" />
    </api>
    <api id="M:Symbiote.Cryptography.FingerprintValidator.Validate(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fingerprint">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fqn">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="checksum" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Symbiote.Cryptography" module="Symbiote.Cryptography" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.0.0 (1.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Symbiote.Cryptography" />
        <type api="T:Symbiote.Cryptography.FingerprintValidator" ref="true" />
      </containers>
      <file name="59a1a0ae-de52-def6-cef6-72aa6cdef10e" />
    </api>
    <api id="R:Project_Documentation">
      <topicdata group="root" />
      <elements>
        <element api="G:Symbiote.Core" />
        <element api="N:Symbiote.Cryptography" />
      </elements>
      <file name="d75eb659-6335-53f6-af7a-81814a21ab7f" />
    </api>
    <api id="G:Symbiote.Core.Service">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Service" group="namespaceGroup" />
      <elements>
        <element api="N:Symbiote.Core.Service" />
        <element api="N:Symbiote.Core.Service.IoT.MQTT" />
        <element api="N:Symbiote.Core.Service.Web" />
        <element api="N:Symbiote.Core.Service.Web.API" />
        <element api="N:Symbiote.Core.Service.Web.SignalR" />
      </elements>
      <file name="08094524-4c7d-fe10-a94c-3c36b13d6cdc" />
    </api>
    <api id="G:Symbiote.Core">
      <topicdata group="api" />
      <apidata name="Symbiote.Core" group="namespaceGroup" />
      <elements>
        <element api="N:Symbiote.Core" />
        <element api="N:Symbiote.Core.Configuration" />
        <element api="N:Symbiote.Core.Model" />
        <element api="G:Symbiote.Core.Platform" />
        <element api="G:Symbiote.Core.Plugin" />
        <element api="G:Symbiote.Core.Service" />
      </elements>
      <file name="2ff2ff43-b213-c810-d9d9-cb8f50166692" />
    </api>
    <api id="G:Symbiote.Core.Plugin">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Plugin" group="namespaceGroup" />
      <elements>
        <element api="N:Symbiote.Core.Plugin" />
        <element api="N:Symbiote.Core.Plugin.Connector" />
        <element api="N:Symbiote.Core.Plugin.Endpoint" />
      </elements>
      <file name="952b2f81-4f15-ae52-777c-3f768aa42aab" />
    </api>
    <api id="G:Symbiote.Core.Platform">
      <topicdata group="api" />
      <apidata name="Symbiote.Core.Platform" group="namespaceGroup" />
      <elements>
        <element api="N:Symbiote.Core.Platform" />
        <element api="N:Symbiote.Core.Platform.UNIX" />
        <element api="N:Symbiote.Core.Platform.Windows" />
      </elements>
      <file name="4230ee22-fb04-77f6-0849-29028e810e91" />
    </api>
  </apis>
</reflection>